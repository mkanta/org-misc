#+STARTUP: nolatexpreview
* Mathematics
** Algebra
*** Categories                                                        :drill:
    SCHEDULED: <2022-09-08 Thu>
    :PROPERTIES:
    :ID:       b46a3f0a-f3d1-4722-a424-9ed5672a520e
    :DRILL_LAST_INTERVAL: 494.5621
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-01 Sat 16:34]
    :END:
What distinguishes natural
from unnatural transformations
between functors /F, G/?
**** Answer:
In a natural transformation,
the commutativity in
/η(Y)∘F(f)=G(f)∘η(X)/ only
depends on objects 
/X, Y/ of the source
category but not on
the morphism /f/. In an
unnatural transformation
there are morphisms where
this commutativity with
/η(X), η(Y)/ is violated.
*** Categories                                                        :drill:
    SCHEDULED: <2021-09-25 Sat>
    :PROPERTIES:
    :ID:       a87e7b23-ac56-4703-a3cc-8236a806bbee
    :DRILL_LAST_INTERVAL: 562.6829
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-03-11 Wed 16:43]
    :END:
What is a transformation
between functors 
/F, G:C→D/?
**** Answer:
A collection of arrows
/η(X):F(X)→G(X)/ in category
/D/ indexed by objects /X/
from category /C/.
*** Categories                                                        :drill:
    SCHEDULED: <2022-06-03 Fri>
    :PROPERTIES:
    :ID:       ebdb23af-95a6-4cdf-b483-73bcc1efdcb1
    :DRILL_LAST_INTERVAL: 590.173
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-21 Wed 20:12]
    :END:
What is a topos?
**** Answer:
A certain type of category
abstracting the notion of
/position/.
*** Categories                                                        :drill:
    SCHEDULED: <2022-09-02 Fri>
    :PROPERTIES:
    :ID:       ca76b2af-e2f1-4040-bdcb-3926278e9319
    :DRILL_LAST_INTERVAL: 656.9906
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-14 Sat 16:35]
    :END:
What is a finite limit
in set-theoretic terms?
**** Answer:
A finite cartesian product of sets.
*** Categories                                                        :drill:
    SCHEDULED: <2023-12-24 Sun>
    :PROPERTIES:
    :ID:       7c5e9b07-cf55-4d5a-b4ce-3d96e23c896b
    :DRILL_LAST_INTERVAL: 912.4516
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.375
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-25 Fri 10:12]
    :END:
What is a finite colimit
in set-theoretic terms?
**** Answer:
A finite disjoint union
of sets.
*** Categories                                                        :drill:
    SCHEDULED: <2021-10-24 Sun>
    :PROPERTIES:
    :ID:       b0314792-8af2-4037-920e-c4210128880a
    :DRILL_LAST_INTERVAL: 449.758
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-31 Fri 16:51]
    :END:
What are the consequences
of a category having
finite limits and colimits?
**** Answer:
The presence of initial and
terminal objects as well as
equalizers and coequalizer.
*** Categories                                                        :drill:
    SCHEDULED: <2022-04-09 Sat>
    :PROPERTIES:
    :ID:       e11fc233-0bd1-4065-9f8e-4c096bd4e01e
    :DRILL_LAST_INTERVAL: 580.703
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-05 Sat 14:10]
    :END:
Why is the presence of
an initial object
in a category with
finite limits and colimits not
surprising?
**** Answer:
Because a finite colimit of
no object would correspond 
to a disjoint union of no
sets, hence the empty set
which is a special case of
an initial object.
*** Categories                                                        :drill:
    SCHEDULED: <2023-03-03 Fri>
    :PROPERTIES:
    :ID:       821e8936-b5a9-4774-a1a5-e1092df32e2c
    :DRILL_LAST_INTERVAL: 737.8637
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-23 Tue 21:41]
    :END:
Why is the presence of
terminal objects in a 
category with finite limits
and colimits not surprising?
**** Answer:
Terminal objects are like
one element sets, since 
there is an initial set
a terminal object should
be constructible by packing
the initial object.
*** Categories                                                        :drill:
    SCHEDULED: <2022-07-25 Mon>
    :PROPERTIES:
    :ID:       ca810609-4bec-48f9-a667-914678224c87
    :DRILL_LAST_INTERVAL: 573.2409
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-29 Tue 14:04]
    :END:
What is an equalizer
in a category?
**** Answer:
The equivalent of the subset
consisting of all /x ∈ X/ such that
/f(x)=g(x)/ for morpisms /X→Y/.
*** Categories                                                        :drill:
    SCHEDULED: <2022-07-25 Mon>
    :PROPERTIES:
    :ID:       9d3ae010-5d67-485e-99ea-4fa9669686e3
    :DRILL_LAST_INTERVAL: 573.2409
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-29 Tue 14:06]
    :END:
What is a coequalizer in
a category?
**** Answer:
The equivalent of a quotient
set of /X/ by the relation /(a,b)∈ R/
iff /a=f(y), b=g(y)/ (or vice versa)
for morphisms /f,g:Y→X/.
*** Categories                                                        :drill:
    SCHEDULED: <2023-07-01 Sat>
    :PROPERTIES:
    :ID:       4542132e-192b-488a-b6f1-1c3253798523
    :DRILL_LAST_INTERVAL: 794.9541
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-27 Tue 15:56]
    :END:
What does it mean for
a category to have
exponentials?
**** Answer:
It means there is an object
/X^Y/ for every pair of objects
which acts like the set of
functions from X to Y.
*** Categories                                                        :drill:
    SCHEDULED: <2022-10-29 Sat>
    :PROPERTIES:
    :ID:       a743d327-d62c-4252-98e7-4e7144cbd547
    :DRILL_LAST_INTERVAL: 494.7159
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-21 Mon 13:36]
    :END:
What is a subobject
classifier?
**** Answer:
A subobject classifier /Ω/ is
an object that behaves like
/{0,1}/ for sets where functions
/f:X→Ω/ correspond to subsets
of /X/. In general, morphisms
/f:X→Ω/ correspond to subobjects
of /X/.
*** Categories                                                        :drill:
    SCHEDULED: <2021-12-10 Fri>
    :PROPERTIES:
    :ID:       14a52f96-0d50-446e-b79f-21ddf33f27c3
    :DRILL_LAST_INTERVAL: 167.6733
    :DRILL_REPEATS_SINCE_FAIL: 16
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.947
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-25 Fri 10:12]
    :END:
How to construct a topos
from finite sets?
**** Answer:
For the category of finite, ordered
sets Δ, a presheaf is a
simplicial set and the category
of these presheaves is a topos.
*** Categories                                                        :drill:
    SCHEDULED: <2021-12-15 Wed>
    :PROPERTIES:
    :ID:       f90d67ec-c9f2-4dfd-8b33-3cd44bfb9bd0
    :DRILL_LAST_INTERVAL: 144.4185
    :DRILL_REPEATS_SINCE_FAIL: 16
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:54]
    :END:
What is the simplex
category /Δ/?
**** Answer:
The category of finite,
(linearly) ordered sets whose
morphisms are (nonstrictly)
order preserving maps.
*** Categories                                                        :drill:
    SCHEDULED: <2022-02-17 Thu>
    :PROPERTIES:
    :ID:       329ce0e8-4f7b-409f-9e83-a6d3d8d4a154
    :DRILL_LAST_INTERVAL: 251.53
    :DRILL_REPEATS_SINCE_FAIL: 13
    :DRILL_TOTAL_REPEATS: 15
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.066
    :DRILL_EASE: 1.26
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-10 Thu 11:08]
    :END:
What is a simplicial
set in the categorical
sense?
**** Answer:
A contravariant functor
from the simplex category
to the category of sets:
/σ:Δ->Set/, or equivalently,
a covariant functor
/σ:Δᵒᵖ→Set/.
*** Categories                                                        :drill:
    SCHEDULED: <2022-02-01 Tue>
    :PROPERTIES:
    :ID:       50d70dcb-b8fb-45b2-968b-571734bf2d04
    :DRILL_LAST_INTERVAL: 190.7924
    :DRILL_REPEATS_SINCE_FAIL: 14
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.263
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-25 Sun 09:09]
    :END:
How to construct a category
from simplicial sets?
**** Answer:
Since a simplicial set is
a contravariant functor /σ:Δ→Set/,
a category can be constructed
using these functors as objects
and natural transformations
between them as morphisms.
*** Heyting Algebra                                                   :drill:
    SCHEDULED: <2021-10-01 Fri>
    :PROPERTIES:
    :ID:       6b93bcee-77b3-4a1e-951f-f1a12dfbfe55
    :DRILL_LAST_INTERVAL: 358.0044
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-10-08 Thu 17:09]
    :END:
What are common examples
of Heyting Algebras that
are not Boolean?
**** Answer:
The open sets of any
topological space form
a (complete) Heyting
algebra.
*** Heyting Algebra                                                   :drill:
    SCHEDULED: <2023-08-09 Wed>
    :PROPERTIES:
    :ID:       b2e22552-6db7-4b2e-bd4f-07efad2f6622
    :DRILL_LAST_INTERVAL: 733.5921
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:17]
    :END:
Why are Heyting Algebras
of interest in logic?
**** Answer:
They are generalizations
of Boolean algebras suitable
as models for constructive
logic.
*** Heyting Algebra                                                   :drill:
    SCHEDULED: <2022-12-24 Sat>
    :PROPERTIES:
    :ID:       0640072b-0530-4261-861e-77b89b0b9710
    :DRILL_LAST_INTERVAL: 558.2905
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-14 Mon 12:34]
    :END:
How is the complement of
an element /a∈H/ for a Heyting
Algebra defined?
**** Answer:
As the greatest element /¬a/
that satisfies /a∧¬a=0/. Thus,
for Heyting algebras consisting
of the open sets of a topology
this would be the interior of
the set theoretic complement
of an open set.
*** Heyting Algebra                                                   :drill:
    SCHEDULED: <2022-01-15 Sat>
    :PROPERTIES:
    :ID:       79c6672b-8120-4fe9-8c1b-e948b4a9eb1c
    :DRILL_LAST_INTERVAL: 331.6232
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-17 Wed 21:55]
    :END:
What is a Heyting Algebra?
**** Answer:
A bounded lattice /H/ such that
for every pair /a,b∈H/ there
is a greatest element /x/
such that /a∧x≤b/. This
element /x/ is called
/a→b/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2022-06-17 Fri>
    :PROPERTIES:
    :ID:       470859f7-d2d4-4fef-ba7c-4ce28e757a96
    :DRILL_LAST_INTERVAL: 585.3566
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-09 Mon 12:27]
    :END:
How to recognise a
ladder operator for
an operator /N/?
**** Answer:
Via its commutation
rules. If
/[N,X]=cX/ then /X/ is
a ladder operator with
shift value /c/, ie the 
eigenvalues of /NX/ are
shifted by /c/ compared
to those of /N/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2022-04-16 Sat>
    :PROPERTIES:
    :ID:       1e383fa5-8309-44d0-b15b-7f28bb2e39a0
    :DRILL_LAST_INTERVAL: 562.4691
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.571
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-10-01 Thu 16:33]
    :END:
How does the adjoint /X⁺/
of a ladder operator act
compared to /X/ itself?
**** Answer:
If /N/ is hermitian then
/[N,X]=cX/ implies
/[N,X⁺]=-cX⁺/, so /X⁺/ shifts
eigenvalues of /N/ in the
opposite direction.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2021-12-19 Sun>
    :PROPERTIES:
    :ID:       6152a175-51eb-49e0-b33e-51a5b426ddb2
    :DRILL_LAST_INTERVAL: 462.8191
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-12 Sat 20:47]
    :END:
What is a ladder
operator?
**** Answer:
For a given operator /N/
an operator /X/ is a ladder
operator of /N/ if it shifts
the eigenvalues of /N/ by
some value /c/, ie
/NX|n⟩=(n+c)X|n⟩/ where /|n⟩/
is an eigenvector of /N/ with
eigenvalue /n/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2023-03-31 Fri>
    :PROPERTIES:
    :ID:       6084a8f2-af1d-476e-bedd-5ae88f3a1eea
    :DRILL_LAST_INTERVAL: 688.8054
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-11 Tue 22:06]
    :END:
How to construct the
vectors for representing
a positive semidefinite
matrix /M/ as a Gram matrix?
**** Answer:
Write /M=P*DP/ with /D/ diagonal
and /D=E²/, which is possible
because of positive real 
eigenvalues (note /M/ is hermitian).
Then /M=(EP)*EP/, so the column
vectors /vᵢ/ (ie multiples of the
eigenvectors) of /EP/ satisfy
/M=(⟨vᵢ,vⱼ⟩)/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2021-10-25 Mon>
    :PROPERTIES:
    :ID:       b61fa5c0-b592-481c-adf6-17e1b7f68a90
    :DRILL_LAST_INTERVAL: 513.088
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.28
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-05-30 Sat 15:10]
    :END:
What kind of special
form do positive 
semi-definite matrices
have?
**** Answer:
They are Gram matrices
of a set of vectors.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2022-02-04 Fri>
    :PROPERTIES:
    :ID:       49bbe233-2612-4053-bc3a-5863365523be
    :DRILL_LAST_INTERVAL: 444.6817
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-16 Mon 12:30]
    :END:
What would a matrix mapping
different eigenbases of a
(hermitian) operators to each 
other look like?
**** Answer:
This would be a permutation
matrix where the 1-entries
are non-singular matrices
transforming degenerate
eigenspaces.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2023-08-21 Mon>
    :PROPERTIES:
    :ID:       cd42fe65-482a-4a44-981f-753282136cd2
    :DRILL_LAST_INTERVAL: 790.6136
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.375
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-21 Mon 13:35]
    :END:
How to construct a common
eigenbasis of hermitian
/A, B/ when they have degenerate
eigenvalues?
**** Answer:
Take an eigenbasis of /A/, say.
Then /B=diag(B₁,B₂,…)/ with
hermitian operators /Bᵢ/ in terms
of that basis. Since the /Bᵢ/ are
hermitian, they can be 
diagonalised separately, leading
to a common eigenbasis for
both /A/ and /B/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2022-06-13 Mon>
    :PROPERTIES:
    :ID:       b0e4cfe8-e33f-420e-adff-e10ab839f32e
    :DRILL_LAST_INTERVAL: 552.3227
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.375
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-12-08 Tue 09:45]
    :END:
How are eigenbases of
hermitian /A, B/ related when
/[A,B]=0/?
**** Answer:
They share a common eigenbasis.
If one of them, say /A/, has
only non-degenerate eigenvalues
then every eigenbasis of /A/ is
also an eigenbasis of /B/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2024-01-16 Tue>
    :PROPERTIES:
    :ID:       0947798a-ec04-476e-a0a1-18380b77d054
    :DRILL_LAST_INTERVAL: 904.6443
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-25 Sun 09:07]
    :END:
What is the meaning
of permutation-like 
matrices where the 1-entries
are multiplied by something?
**** Answer:
They are maps between
different eigenbases of
an operator with only
non-degenerate values.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2022-08-10 Wed>
    :PROPERTIES:
    :ID:       a443a464-d5b9-42bf-89f8-401c6350c0db
    :DRILL_LAST_INTERVAL: 586.9071
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-31 Thu 11:01]
    :END:
If /V/ is an eigenbasis
of hermitian operator
/A/ and /[A,B]=0/, then what
is the form of /B/ in
terms of /V?/
**** Answer:
Since eigenspaces of /A/
for a given eigenvalue
are invariant under the
action of /B/, 
/B=diag(B₁,B₂,…)/ where
the /Bᵢ/ are /nᵢ×nᵢ/ matrices
with /nᵢ/ the multiplicity
of the /i-th/ eigenvalue
of /A/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2021-10-10 Sun>
    :PROPERTIES:
    :ID:       257553a6-f147-4ab0-9493-34e66db8a5b4
    :DRILL_LAST_INTERVAL: 380.8206
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-09-24 Thu 21:29]
    :END:
What is the orthogonal
projection of a vector 
/v/ into the kernel of a 
matrix /B/?
**** Answer:
/vₚ=(I-Bᵀ(BBᵀ)⁻¹B)v/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2022-01-28 Fri>
    :PROPERTIES:
    :ID:       b00412c8-2fa8-42e0-987b-7ae7cf22ba6d
    :DRILL_LAST_INTERVAL: 451.1762
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-03 Tue 21:31]
    :END:
How to calculate 
eigenvectors and
-values for a
Gram matrix?
**** Answer:
For the lowest
eigenvector minimize 
/ωᵀXω/ with respect to 
/‖ω‖=1/. 
Then the corresponding
eigenvalue is /‖w‖²/ where
/w=∑ωᵢxᵢ/.
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2021-09-12 Sun>
    :PROPERTIES:
    :ID:       65799d3e-0037-4a9d-a64b-c6c74db0bf85
    :DRILL_LAST_INTERVAL: 367.5085
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-09 Wed 15:17]
    :END:
Why is a nonsingular 
Gram matrix positive 
definite?
**** Answer:
With Gram matrix
/X=(⟨xᵢ,xⱼ⟩)/,
/ωᵀXω=‖w‖²/ for
/w=∑ωᵢxᵢ/. 
*** Linear Algebra                                                    :drill:
    SCHEDULED: <2021-10-01 Fri>
    :PROPERTIES:
    :ID:       d8071346-525c-4870-ae2a-6a5fb0410ba2
    :DRILL_LAST_INTERVAL: 530.6057
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-04-18 Sat 15:29]
    :END:
Why does /P²/ generally
have more eigenvectors
than /P/?
**** Answer:
If /P/ has negative
eigenvalues /λ/, then
squaring causes degeneracy
of the corresponding
eigenspaces. Thus every
linear combinations of vectors
from /|-λ⟩/ and /|λ⟩/ is an
eigenvector of /P²/.
*** Linear Algebra: Matrices                                          :drill:
    SCHEDULED: <2022-10-01 Sat>
    :PROPERTIES:
    :ID:       31a695cf-7f35-4ffe-8800-bd57d96862bd
    :DRILL_LAST_INTERVAL: 472.948
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-15 Tue 11:10]
    :END:
How to turn a vector space
into an algebra?
**** Answer:
Given a basis, map a column
vector to a diagonal matrix
where the diagonal entries are
the column entries. (for row vectors
use the conjugate entries).
Note that the inner product 
/⟨a,b⟩/ would be mapped to 
/tr(AB)/.
*** Linear Algebra: Matrices                                          :drill:
    SCHEDULED: <2023-12-15 Fri>
    :PROPERTIES:
    :ID:       6f7778a0-8c86-4e0c-8eec-c72a9d8cbd08
    :DRILL_LAST_INTERVAL: 942.1875
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-17 Mon 22:25]
    :END:
How does the idea of
using the trace of a
product of matrices as
their inner product arise?
**** Answer:
Probably from the Kronecker
product of vectors where
/tr(v⊗u)=∑vᵢuᵢ=⟨v,u⟩/.
*** Linear Algebra: Matrices                                          :drill:
    SCHEDULED: <2022-12-16 Fri>
    :PROPERTIES:
    :ID:       eb18d052-0e83-4d43-9e4a-b9414db2c73a
    :DRILL_LAST_INTERVAL: 696.2702
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-19 Tue 11:44]
    :END:
How can permutation matrices
be supergeneralized?
**** Answer:
By replacing the 1 entries
in permutation matrices by
nonsingular blocks. These
would be of the form 
/A=DP/ where /D/ would be
non-singular block diagonal
and /P/ would be a permutation
matrix obtained from replacing 1
entries by appropriately sized
identity matrices in a base
permutation matrix /P'/. 
*** Linear Algebra: Matrices                                          :drill:
    SCHEDULED: <2023-01-03 Tue>
    :PROPERTIES:
    :ID:       908ac65c-6a27-4b63-ad50-36fba0dfec3a
    :DRILL_LAST_INTERVAL: 697.5215
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-04 Thu 13:45]
    :END:
Why is it natural from an algebraic
point of view to consider
generalized permutation matrices
rather than merely permutation
matrices?
**** Answer:
Because they form the largest
subgroup of /GL(n,F)/ in which 
the diagonal matrices form a
normal subgroup. Here, /F/ is
the field where the entries
come from.
*** Linear Algebra: Matrices                                          :drill:
    SCHEDULED: <2022-01-25 Tue>
    :PROPERTIES:
    :ID:       c07106fe-b9f4-4338-beb1-647f790b51e0
    :DRILL_LAST_INTERVAL: 462.8191
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-19 Mon 19:54]
    :END:
What is the abstract form
of generalized permutation
matrices?
**** Answer:
They are the wreath product
/F* ⋉ Sₙ/
of the muliplicative group
/F*/ of the field where the
entries come from and /Sₙ/. 
*** Linear Algebra: Matrices                                          :drill:
    SCHEDULED: <2022-12-17 Sat>
    :PROPERTIES:
    :ID:       511f4150-17ac-413d-8804-f3d0f277d9af
    :DRILL_LAST_INTERVAL: 696.2702
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-20 Wed 17:56]
    :END:
What are matrices called
that are like permutation
matrices but where the 1
entries are multiplied by
something?
**** Answer:
These are called
/Generalized Permutation/
matrices and are of the
form /A=DP/, with /D/ an 
invertible diagonal matrix
and /P/ a permutation matrix.
*** Relativity                                                        :drill:
    SCHEDULED: <2023-01-28 Sat>
    :PROPERTIES:
    :ID:       434f9b4f-17e7-475c-9088-db39a07b4449
    :DRILL_LAST_INTERVAL: 625.1364
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 15
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.467
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-13 Thu 13:06]
    :END:
What is the Lorentz group?
**** Answer:
In its full generality it
is the matrix Lie group
preserving the quadratic form
/t²-x²-y²-z²/ also called /O(1,3)/.
*** Relativity                                                        :drill:
    SCHEDULED: <2023-08-17 Thu>
    :PROPERTIES:
    :ID:       3a955d9b-ffa7-439e-978c-a24fb7c02d72
    :DRILL_LAST_INTERVAL: 891.2686
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-09 Tue 12:44]
    :END:
What is the topological structure
of the Lorentz group?
**** Answer:
It is a non-compact non-abelian
Lie-group consisting of four
connected components that are
doubly connected.
*** Relativity                                                        :drill:
    SCHEDULED: <2021-10-29 Fri>
    :PROPERTIES:
    :ID:       6eb0da88-c77d-4253-8386-70fe55e2805a
    :DRILL_LAST_INTERVAL: 640.0494
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-01-28 Tue 11:49]
    :END:
What is the orthochronous
subgroup of the Lorentz group?
**** Answer:
These are the elements of the
Lorentz group that preserve the
direction of time.
*** Relativity                                                        :drill:
    SCHEDULED: <2021-09-14 Tue>
    :PROPERTIES:
    :ID:       35442c44-395a-4284-b286-5c7c9ecf0649
    :DRILL_LAST_INTERVAL: 136.3171
    :DRILL_REPEATS_SINCE_FAIL: 28
    :DRILL_TOTAL_REPEATS: 38
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.105
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-01 Sat 16:34]
    :END:
What are proper Lorentz transformations?
**** Answer:
Lorentz transformations of determinant 1,
they preserve orientation and form the 
subgroup /SO(1,3)/.
*** Relativity                                                        :drill:
    SCHEDULED: <2022-02-13 Sun>
    :PROPERTIES:
    :ID:       6e6c8903-3cda-4c5c-a6ae-21c0bcafee0b
    :DRILL_LAST_INTERVAL: 566.8639
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-26 Sun 17:13]
    :END:
What is the group /SO⁺(1,3)/?
**** Answer:
This is the subgroup of proper,
orthochronous Lorentz transformations,
also called the /restricted/ Lorentz
group.
*** Relativity                                                        :drill:
    SCHEDULED: <2022-09-06 Tue>
    :PROPERTIES:
    :ID:       0475cd80-546c-499a-a746-13812b44a37c
    :DRILL_LAST_INTERVAL: 867.7506
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-04-21 Tue 13:36]
    :END:
What is the topological characteristic
of the restricted Lorentz group?
**** Answer:
It is the connected component of the
Lorentz group that contains the 
identity.
*** Relativity                                                        :drill:
    SCHEDULED: <2023-08-17 Thu>
    :PROPERTIES:
    :ID:       bd3d567e-b144-4327-a636-4933015ef2b0
    :DRILL_LAST_INTERVAL: 891.2686
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-09 Tue 12:45]
    :END:
What is the algebraic structure of
/O(1,3)/ in terms of the restricted
Lorentz group?
**** Answer:
The quotient O(1,3)/SO⁺(1,3) is isomorphic
the the group spanned by time-reversal and
space-inversion. Thus, any arbitrary
Lorentz transformation is a semi-direct
product of an element of /SO⁺(1,3)/ and
a space-time inversion. 
*** Relativity                                                        :drill:
    SCHEDULED: <2023-08-17 Thu>
    :PROPERTIES:
    :ID:       a46646d7-9068-4eea-8e20-a42747f2b4ba
    :DRILL_LAST_INTERVAL: 891.2686
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-09 Tue 12:45]
    :END:
How are elements of /SO⁺(1,3)/ usually
written?
**** Answer:
Since /SO⁺(1,3)/ is generated by spatial
rotations and Lorentz boosts, it can
be written as a product of those.
*** Relativity: Tensors                                               :drill:
    SCHEDULED: <2022-04-07 Thu>
    :PROPERTIES:
    :ID:       2b681bb6-6588-4c6a-9732-9b69ca69de79
    :DRILL_LAST_INTERVAL: 284.819
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-26 Sat 11:17]
    :END:
  How does Einstein's
  sum convention help
  with inverting linear
  maps?
**** Answer:
  In sum convention, the
  inverse to /aᵢ'=αᵢₖaₖ/
  is simply obtained by
  placing the /αᵢₖ/ to
  the other side:
  /aᵢ'αᵢₖ=aₖ/.
*** Representation Theory: Casimir Operators                          :drill:
    SCHEDULED: <2022-12-15 Thu>
    :PROPERTIES:
    :ID:       e614e595-447f-4977-94be-772195581dce
    :DRILL_LAST_INTERVAL: 539.7836
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-23 Wed 10:09]
    :END:
How do the Casimir Operators
of a Lie group determine its
irreducible representations?
**** Answer:
Since a Casimir Operator of
a Lie group commutes with 
every element of it, its
eigenspaces are irreducible
representations of the Lie
group. Given a full set of
Casimir operators, all
irreducible representations
can be obtained this way
if the group is semisimple
and every irreducible
representation can be indexed
by the set of eigenvalues of
these Casimir operators.
*** Representation Theory: Casimir Operators                          :drill:
    SCHEDULED: <2023-08-06 Sun>
    :PROPERTIES:
    :ID:       52ba7be4-f2e5-4147-b2e3-4ba109f38151
    :DRILL_LAST_INTERVAL: 874.7088
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-14 Sun 12:08]
    :END:
What is a full set of
Casimir Operators for
a Lie group?
**** Answer:
For a semisimple Lie
group, a set of
Casimir Operators
/C₁,…,Cₗ/ is full if
/l/ is the rank of the 
group.
*** Representation Theory: Casimir Operators                          :drill:
    SCHEDULED: <2023-11-22 Wed>
    :PROPERTIES:
    :ID:       48d137de-6f5d-4846-90bc-9fb0d01c354d
    :DRILL_LAST_INTERVAL: 952.7344
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:23]
    :END:
How do Casimir Operators
of a semisimple Lie group
commute among themselves?
**** Answer:
These Casimir operators are
functions of the group generators.
Since they commute with every element
of the group, they also commute among
themselves.
*** Representation Theory: Characters                                 :drill:
    SCHEDULED: <2022-06-09 Thu>
    :PROPERTIES:
    :ID:       5eeaaa80-ee57-4f95-b979-a3e184715b84
    :DRILL_LAST_INTERVAL: 535.3588
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-21 Mon 08:17]
    :END:
Is every class function on
a finite group /G/ the character
of a representation?
**** Answer:
No, only class functions
of the form /∑aᵢΧᵢ/ qualify
where /Xᵢ/ is the character
of irreducible representation
/Vᵢ/ and all the /aᵢ/ are 
non-negative integers. Also
note that characters are
linear functions when applied
in End(V).
*** Representation Theory: Characters                                 :drill:
    SCHEDULED: <2023-08-01 Tue>
    :PROPERTIES:
    :ID:       273ca278-71b9-4795-a7fe-228f720b970d
    :DRILL_LAST_INTERVAL: 825.7252
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-27 Tue 15:52]
    :END:
What's the character of
a G-module morphism φ on
its eigenspaces?
**** Answer:
For eigenvalue /λ/ with
corresponding eigenspace /V/
the character of /φ/ on /V/ is
Χ(φ) = λ dim V
since /φ/ acts as /λe/ with
/e/ the identity on /V/.
*** Representation Theory: Group Algebra                              :drill:
    SCHEDULED: <2021-08-21 Sat>
    :PROPERTIES:
    :ID:       d97973d8-5a9d-48e9-beb1-2d4384c83c63
    :DRILL_LAST_INTERVAL: 357.4434
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-08-29 Sat 16:41]
    :END:
What is the multiplication
on functions /G→K/ induced by
considering them elements of
the group algebra /KG/?
**** Answer:
Convolution, ie
/(φ*ψ)(g)=∑ₕφ(h)ψ(h⁻¹g)/.
*** Representation Theory: Group Algebra                              :drill:
    SCHEDULED: <2022-08-29 Mon>
    :PROPERTIES:
    :ID:       019a43ea-1675-47ae-9968-1085dbf3c2fb
    :DRILL_LAST_INTERVAL: 596.5221
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-09 Sat 12:13]
    :END:
How can the group algebra
of a (finite) group be 
interpreted as an algebra
of functions?
**** Answer:
By identifying a function
/φ/:G→K with group algebra
element /∑ₕφ(h)eₕ/ with /h/
traversing the group.
*** Representation Theory: Group Algebra                              :drill:
    SCHEDULED: <2023-04-27 Thu>
    :PROPERTIES:
    :ID:       ce991ee5-023d-4bc3-835b-f5832ccd4046
    :DRILL_LAST_INTERVAL: 783.5624
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-04 Thu 10:55]
    :END:
What is the group
algebra /KG/ of a (finite)
group /G/?
**** Answer:
The algebra spanned by
/eₕ/ for /h∈G/ as a vector
space over a field /K/ with
multiplication /eₕeₗ=eₕₗ/.
*** Representation Theory: Group Algebra                              :drill:
    SCHEDULED: <2022-10-16 Sun>
    :PROPERTIES:
    :ID:       71fd6f35-bb94-4ab8-a2f3-2feb120b0b22
    :DRILL_LAST_INTERVAL: 633.7515
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-20 Wed 18:00]
    :END:
How does a (finite) group
act on its group algebras
/KG/?
**** Answer:
Since the underlying
vector space of the group 
algebras is the regular
representation of /G/, it
acts via /heₗ=eₕₗ/ on the
basis of /KG/.
*** Representation Theory: Permutation Representation                 :drill:
    SCHEDULED: <2023-12-06 Wed>
    :PROPERTIES:
    :ID:       ff4e182a-dffb-437b-9378-13c7fa27d2f1
    :DRILL_LAST_INTERVAL: 952.7344
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-27 Tue 15:55]
    :END:
How come only the eigenvalues
of the fixed points show up
in the trace of the permutation
representation?
**** Answer:
The eigenvalues of cycles longer
than 1 are roots of unity different
from 1. Hence their traces add up
to 0.
*** Representation Theory: Permutation Representation                 :drill:
    SCHEDULED: <2022-12-18 Sun>
    :PROPERTIES:
    :ID:       594cd4f9-0650-42ec-afab-2e59896c7ee6
    :DRILL_LAST_INTERVAL: 696.2702
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-21 Thu 10:58]
    :END:
What are the eigenvalues
of a permutation matrix?
**** Answer:
Primitive l-th roots
of unity and their powers
where l is a cycle length.
*** Representation Theory: Permutation Representation                 :drill:
    SCHEDULED: <2022-08-23 Tue>
    :PROPERTIES:
    :ID:       08834542-6595-49bd-ad06-5937364f0b5e
    :DRILL_LAST_INTERVAL: 609.5901
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-21 Mon 08:14]
    :END:
What are the eigenvalues
of a cycle?
**** Answer:
The powers /ξᵏ/ of a primitive
l-th root of unity where l
is the cycle length.
*** Representation Theory: Permutation Representation                 :drill:
    SCHEDULED: <2022-08-17 Wed>
    :PROPERTIES:
    :ID:       00424749-a8c1-49e8-bd26-4c364e2281f5
    :DRILL_LAST_INTERVAL: 609.5901
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-15 Tue 20:57]
    :END:
What are the eigenvectors
of a cycle?
**** Answer:
The Fourier transforms of
a permutation basis {eᵢ} 
by a root of unity /ξ/:
∑ξⁱeᵢ with indices ranging
from 0 to l-1, where l
is the cycle length.
*** Representation Theory                                             :drill:
    SCHEDULED: <2021-08-28 Sat>
    :PROPERTIES:
    :ID:       a803c039-47fa-4314-8cd7-c5f30ecae874
    :DRILL_LAST_INTERVAL: 65.0592
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.231
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-24 Thu 10:15]
    :END:
What does /∑a(g)g/ for /g∈G/, /G/ a
finite group, mean?
**** Answer:
This has to be understood
in the context of a 
representation /V/ of /G/, the
/g/ are treated as elements of
End(V) in the sum.
*** Representation Theory                                             :drill:
    SCHEDULED: <2023-02-02 Thu>
    :PROPERTIES:
    :ID:       919ff54c-a4ed-4152-a4ba-0dfb8d96744a
    :DRILL_LAST_INTERVAL: 688.5623
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-15 Mon 11:55]
    :END:
Does /∑a(g)g=0/ for /g∈G/, /G/ a finite
group, imply that /a(g)=0/.
**** Answer:
Not in general, only if this
can be shown to hold for a
representation where the /g/ are
linearly independent, for example
the regular representation.
*** Representation Theory                                             :drill:
    SCHEDULED: <2022-09-19 Mon>
    :PROPERTIES:
    :ID:       3e7cf69c-1e7f-48c4-b951-82a377cacf38
    :DRILL_LAST_INTERVAL: 647.6351
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-10 Thu 16:09]
    :END:
What is the /rank/ of a
Lie group?
**** Answer:
The largest number of
generators which commute
with each other.
*** Representation Theory                                             :drill:
    SCHEDULED: <2022-03-02 Wed>
    :PROPERTIES:
    :ID:       f3fa4cdb-bac1-4898-ac2d-9f5ea95afd40
    :DRILL_LAST_INTERVAL: 542.7748
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-05 Sat 14:09]
    :END:
What is the point of
finding all the irreducible
representations of a group?
**** Answer:
In cases where all the 
representations are semisimple,
all representations /V/ can be
expressed as an integer linear
combination /V=⊕ᵢaᵢVᵢ/ of 
irreducible representations.
*** Representations                                                   :drill:
    SCHEDULED: <2022-11-18 Fri>
    :PROPERTIES:
    :ID:       823cc259-3bf7-4c1d-b32a-d608b5650bd2
    :DRILL_LAST_INTERVAL: 742.0128
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-06 Fri 19:49]
    :END:
How to define characters
in infinite groups?
**** Answer:
For infinite groups, characters
/Χᵣ:G→̱ℂ/ are only defined for
finite dimensional representations 
/r/ as /Χᵣ(g)=tr(r(g))/, just like
for finite groups.
*** Representations                                                   :drill:
    SCHEDULED: <2022-12-16 Fri>
    :PROPERTIES:
    :ID:       b0ef434a-35b0-43d3-af8c-023b9ed33125
    :DRILL_LAST_INTERVAL: 769.0603
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-11-07 Sat 18:10]
    :END:
How is finiteness
expressed in compact
groups?
**** Answer:
Compact groups are finite
in the sense that every
*irreducible* representation
(on a Hilbert or Bannach
space) is finite dimensional.
*** Representations                                                   :drill:
    SCHEDULED: <2024-01-15 Mon>
    :PROPERTIES:
    :ID:       75fe2672-7929-4afd-b3e7-6fed442d7833
    :DRILL_LAST_INTERVAL: 904.6443
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:59]
    :END:
Does the definition of 
characters make sense for
infinite groups?
**** Answer:
Not in general since characters
are defined only on finite
representations. For example, 
for compact groups every 
irreducible representation
is finite dimensional, so 
characters are still a useful
tool for studying them.
*** Representations                                                   :drill:
    SCHEDULED: <2023-07-29 Sat>
    :PROPERTIES:
    :ID:       f5fbc6e2-6a03-4031-904c-b7a03b039d19
    :DRILL_LAST_INTERVAL: 760.4223
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-29 Tue 11:32]
    :END:
What could be a possible
extension of the character
of a finite dimensional
representation to the 
infinite case?
**** Answer:
This could be extended if
the representation /r/ consists
of /trace-class/ operators,
in which case the characters
could be still defined as traces
/Χᵣ(g)=tr(r(g))/.
*** Quantum Algebras						      :drill:
    SCHEDULED: <2022-01-12 Wed>
    :PROPERTIES:
    :ID:       09a1eb47-7c07-4543-893c-c77430442c2f
    :DRILL_LAST_INTERVAL: 549.06
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-12 Sun 15:41]
    :END:
With bounded operators
resembling the complex
numbers, is there something
like the polar representation?
**** Answer:
Yes, it is called the
/Polar Decomposition/ of a
bounded operator. Every bounded
operator /T/ can be written as
/T=UA/ where /U/ is a partial
isometry and /A/ is a positive
operator such that 
/ker T=ker A=ker U/.
*** Quantum Algebras						      :drill:
    SCHEDULED: <2023-05-11 Thu>
    :PROPERTIES:
    :ID:       03c6cdba-9412-4ecc-84e8-ca4e032669c4
    :DRILL_LAST_INTERVAL: 841.5224
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-19 Tue 11:47]
    :END:
Is the polar decomposition
of a bounded operator unique?
**** Answer:
If /T=UA=VB/ with partial isometries
/U, V/ and positive operators /A, B/
with /ker U=ker A/ and /ker V=ker B/
then /U=V/ and /A=B/.
*** Quantum Algebras						      :drill:
    SCHEDULED: <2021-11-03 Wed>
    :PROPERTIES:
    :ID:       71612fc3-65a0-4dc2-b7de-b6bf73ebb4cc
    :DRILL_LAST_INTERVAL: 79.815
    :DRILL_REPEATS_SINCE_FAIL: 22
    :DRILL_TOTAL_REPEATS: 29
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.207
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-15 Sun 13:55]
    :END:
In which sense does the positive
operator /A/ in the polar decomposition
/T=UA/ of bounded operator /T/ play the
role of a length?
**** Answer:
/A/ is the positive square root of
/T*T=|T|²/. Since positive operators
are self adjoint, they behave in a
sense like positive real numbers, so
/|A|/ is a bit like a length.
*** Quantum Algebras						      :drill:
    SCHEDULED: <2021-10-17 Sun>
    :PROPERTIES:
    :ID:       7468d8bb-a84d-4e9f-8d79-2691a9c754ae
    :DRILL_LAST_INTERVAL: 172.8389
    :DRILL_REPEATS_SINCE_FAIL: 14
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.315
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-27 Tue 15:53]
    :END:
What is a partial isometry?
**** Answer:
A bounded operator /U/ that is an
isometry on the orthogonal complement
of its kernel.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2022-04-06 Wed>
    :PROPERTIES:
    :ID:       fe7e44f5-356b-4040-ac38-4aa80d0ffe4c
    :DRILL_LAST_INTERVAL: 470.0525
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-22 Tue 08:48]
    :END:
How is the norm of /Z/
related to the norms of
its components in its
cartesian decomposition
/Z=X+iY/?
**** Answer:
This is governed by the
triangle equality. In addition,
/‖Zx‖²=‖Xx‖²+‖Yx‖² ∀x∈ℍ/ is
equivalent to /Z/ being normal.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2022-10-19 Wed>
    :PROPERTIES:
    :ID:       138ead87-8967-44d6-b7ae-4915f86db453
    :DRILL_LAST_INTERVAL: 899.3814
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-05-03 Sun 14:47]
    :END:
Do the /X, Y/ in the cartesian
decomposition /Z=X+iY/ of a
bounded operator /Z/ always
commute?
**** Answer:
No, that is a feature of /normal/
operators, ie 
/XY=YX ⇔ Z is normal/.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2022-01-05 Wed>
    :PROPERTIES:
    :ID:       230b8cca-164b-43d3-aa37-652243f0c2a1
    :DRILL_LAST_INTERVAL: 547.0245
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-07 Tue 15:54]
    :END:
In which sense do bounded operators
on a Hilbert space resemble complex
numbers?
**** Answer:
Every bounded operator can be written
as /Z=X+iY/ with unique self adjoint 
operators /X, Y/. 
Thus, bounded operators are 
like complex numbers with self adjoint
operators playing the role of real
numbers.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2023-06-19 Mon>
    :PROPERTIES:
    :ID:       3672fd79-e972-48f4-8a42-39e5d9f40748
    :DRILL_LAST_INTERVAL: 1053.2731
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-31 Fri 16:52]
    :END:
Are bounded operators on a Hilbert
space always compact?
**** Answer:
No, that's actually a misnomer,
bounded operators are /continuous/
rather than compact.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-12-04 Sat>
    :PROPERTIES:
    :ID:       226978c1-231d-42e1-ba0e-093f6ff1d2c1
    :DRILL_LAST_INTERVAL: 665.7392
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.571
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-02-07 Fri 15:17]
    :END:
What is a continuous operator on
a Hilbert space?
**** Answer:
An operator such that
/xₙ→x/ implies /Txₙ→Tx/.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2022-03-19 Sat>
    :PROPERTIES:
    :ID:       8622b9c0-8f9c-4fbe-906e-c507c1aa0b4c
    :DRILL_LAST_INTERVAL: 756.0048
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-02-22 Sat 15:34]
    :END:
How are isometric operators related
to unitary ones?
**** Answer:
Isometric operators are like unitary
operators except that they may not be
surjective.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-11-19 Fri>
    :PROPERTIES:
    :ID:       46ad0d7a-2654-4e47-a6fa-0945e2d7c6a0
    :DRILL_LAST_INTERVAL: 157.9819
    :DRILL_REPEATS_SINCE_FAIL: 21
    :DRILL_TOTAL_REPEATS: 26
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.038
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-14 Mon 12:35]
    :END:
How are Heisenberg groups
related to symplectic vector
spaces?
**** Answer:
It is possible to construct
a Heisenberg group /H(V)/ on
any symplectic vector space
/(V,ω)/ by defining
/(v,t)(v',t')=(v+v',t+t'+½ω(v,v')/
on the set /V×ℝ/.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-11-21 Sun>
    :PROPERTIES:
    :ID:       b75eb632-c84b-4a38-a203-433a5b5ff764
    :DRILL_LAST_INTERVAL: 663.2733
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.571
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-01-28 Tue 11:49]
    :END:
What is the point of constructing
Heisenberg groups from symplectic
vector spaces?
**** Answer:
In the Darboux basis of the
space the coefficients are
like canonically conjugate
variables and with the Heisenberg
group on them they obtain
quantum-mechanical meaning.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-10-06 Wed>
    :PROPERTIES:
    :ID:       3b67b442-fee1-4123-84f1-d3d18e493b7c
    :DRILL_LAST_INTERVAL: 606.7561
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.455
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-02-07 Fri 15:17]
    :END:
What is the connection of
the Heisenberg group to
the Weyl algebra?
**** Answer:
The Weyl algebra is a quotient
of the universal envelopping 
algebra of the Lie-algebra of the 
Heisenberg group obtained by
mapping the canonical variables
to the differential operators and
coordinates.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-11-02 Tue>
    :PROPERTIES:
    :ID:       c633a3b9-8029-4857-a436-b6c54e1c2bee
    :DRILL_LAST_INTERVAL: 202.6908
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:22]
    :END:
  What does /Ψ≥0/ mean
  for a linear operator
  between algebras of 
  bounded operators?
**** Answer:
  It means that /Ψ/ maps
  positive bounded operators
  to positive bounded
  operators.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-09-27 Mon>
    :PROPERTIES:
    :ID:       6be122d9-8d52-41d5-bc7a-85ae8c98123b
    :DRILL_LAST_INTERVAL: 172.744
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-07 Wed 10:03]
    :END:
  What is a
  /quantum channel/?
**** Answer:
  A map /Ψ/ between
  algebras of bounded
  operators that is
  completely positive
  and trace preserving.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-11-02 Tue>
    :PROPERTIES:
    :ID:       af7c7487-ee07-4b1b-b67d-919a1224f33f
    :DRILL_LAST_INTERVAL: 202.6908
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:22]
    :END:
  When is a map /Ψ/
  between bounded operator
  algebras said to be
  /completely positive/?
**** Answer:
  If /Ψ⊗id/ is positive
  irrespective of the
  dimension of the space
  on which the identity
  /id/ operates.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-11-02 Tue>
    :PROPERTIES:
    :ID:       27db1221-9192-43c1-95e6-33179806212a
    :DRILL_LAST_INTERVAL: 202.6908
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:25]
    :END:
  What is the
  significance of
  quantum channels?
**** Answer:
  They represent physical
  evolution in a quantum
  system because they
  preserve the trace, hence
  map density matrices to
  density matrices. As a
  consequence, they map
  quantum states to
  quantum states. 
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2021-11-12 Fri>
    :PROPERTIES:
    :ID:       1bccc145-8b81-487f-a4ae-d5ede06a8cc9
    :DRILL_LAST_INTERVAL: 212.9548
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:23]
    :END:
  What does /ρ≥0/ mean
  for a bounded operator /ρ/?
**** Answer:
  It means that all its eigenvalues
  are non-negative.
*** p-adic numbers						      :drill:
    SCHEDULED: <2021-11-08 Mon>
    :PROPERTIES:
    :ID:       6b76eb5b-5272-43cc-bc15-ca08c97ca9a5
    :DRILL_LAST_INTERVAL: 168.2048
    :DRILL_REPEATS_SINCE_FAIL: 18
    :DRILL_TOTAL_REPEATS: 23
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.045
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-24 Mon 20:30]
    :END:
What is the ring of /p/-adic integers?
**** Answer:
The /inverse/ limit of the rings /ℤ/pⁿℤ/, 
ie all integer sequences /(aₙ)/ 
such that /aₙ ∈ ℤ/pⁿℤ/ and 
/aₙ≡ aₘ mod pⁿ/ if /n ≤ m/.
*** p-adic numbers						      :drill:
    SCHEDULED: <2022-05-13 Fri>
    :PROPERTIES:
    :ID:       175b7088-8e94-4a76-a02e-28d0862befc3
    :DRILL_LAST_INTERVAL: 873.8037
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.14
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-12-21 Sat 16:10]
    :END:
In which sense can numbers /m∈ℕ/ be considered
p-adic?
**** Answer:
By forming the sequence /(aₙ)/ as 
/aₙ≡m mod pⁿ/.
*** p-adic numbers						      :drill:
    SCHEDULED: <2024-09-27 Fri>
    :PROPERTIES:
    :ID:       7a74d5b4-5299-46ad-a4d4-015704c152d0
    :DRILL_LAST_INTERVAL: 1573.8366
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.571
    :DRILL_EASE: 2.9
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2020-06-06 Sat 16:06]
    :END:
How are the ring operations defined on the 
/p/-adic integers?
**** Answer:
By componentwise addition and multiplication 
of the sequences.
*** p-adic numbers						      :drill:
    SCHEDULED: <2023-04-18 Tue>
    :PROPERTIES:
    :ID:       0021bc5b-d1d1-484c-baa0-dc550d0a6674
    :DRILL_LAST_INTERVAL: 771.3826
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.222
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-08 Mon 11:52]
    :END:
How are the sequences /(aₙ)/ 
representing /p/-adic integers related to 
their usual series representation 
/∑ₙ bₙpⁿ/?
**** Answer:
By the partial sums of the series, which yield 
the elements of the sequence as 
/aₙ=∑ⁿbₘpᵐ/.
*** Permutations                                                      :drill:
    SCHEDULED: <2023-01-19 Thu>
    :PROPERTIES:
    :ID:       246283cb-8d0e-49e4-9234-ca98cc53273f
    :DRILL_LAST_INTERVAL: 751.084
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-12-29 Tue 14:02]
    :END:
What is the main interest
when considering containment
of permutations?
**** Answer:
The interest actually lies
with /avoidance/. A permutation
/π/ avoids /σ/ if /π/ doesn't contain
/σ/. Of interest is the number
/Sₙ(π)/, which is the number of
/n/-permutations avoiding /π/. For
every /π/ there is a constant
/c(π)/ such that /Sₙ(π)≤c(π)ⁿ/.

*** Permutations                                                      :drill:
    SCHEDULED: <2021-08-28 Sat>
    :PROPERTIES:
    :ID:       3a9f2ded-95cf-4d48-a678-bc52e8baccc1
    :DRILL_LAST_INTERVAL: 550.9014
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.571
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-02-24 Mon 14:35]
    :END:
How is containment of
permutations expressed
in terms of permutation
matrices?
**** Answer:
In terms of matrix
containment. An /nxn/ 
matrix /A/ contains a
/kxl/ matrix /P/ if /A/ has
a submatrix /D/, possibly
obtained by deleting rows
and columns, such that
/P=D/. Note that this is
usually only defined for
binary matrices.
*** Permutations                                                      :drill:
    SCHEDULED: <2024-06-03 Mon>
    :PROPERTIES:
    :ID:       406e45b3-19b0-4c9e-bf5f-2ad40947cc04
    :DRILL_LAST_INTERVAL: 1078.4652
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.625
    :DRILL_EASE: 2.04
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-21 Mon 13:36]
    :END:
How is containment of
permutations /σ/ on /[k]/
in /π/ on /[n]/ with /k<n/
defined in functional 
terms?
**** Answer:
The permutation /σ/ is
contained in /π/ if there
exists a strictly increasing
/τ: [k]→[n]/ such that 
/π∘τ(i) < π∘τ(j) ⇔ σ(i) < σ(j)/.
*** Permutations                                                      :drill:
    SCHEDULED: <2023-02-06 Mon>
    :PROPERTIES:
    :ID:       ec453812-83e7-4f47-bc7a-92c7b2d4007e
    :DRILL_LAST_INTERVAL: 605.5727
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-10 Thu 11:07]
    :END:
What does it mean for
a permutation to contain
another (shorter) 
permutation?
**** Answer:
A permutation /π/ on /[n]/ is
said to contain /σ/ on /[k]/
if there exist integers
/1≤x₁<x₂…<xₖ≤n/ such that
/π(xᵢ)<π(xⱼ) ⇔ σ(i)<σ(j)/
for /1≤i,j≤k/.
*** Polynomials                                                       :drill:
    SCHEDULED: <2021-12-27 Mon>
    :PROPERTIES:
    :ID:       6f1df1a0-41c1-464c-addd-7efd16ebede7
    :DRILL_LAST_INTERVAL: 133.9402
    :DRILL_REPEATS_SINCE_FAIL: 16
    :DRILL_TOTAL_REPEATS: 21
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.19
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-15 Sun 13:55]
    :END:
How to convert multivariate
polyonmials to univariate
ones?
**** Answer:
By Kronecker substitution:
If the partial degrees of the 
multivariate polynomial 
/f(x₁,x₂,…,xₙ) are
/(d₁,d₂,…,dₙ)/ then 
/f̂(x,xᵈ¹,…,xᵈⁿ)/ is univariate
of degree /∏dᵢ/ or less. This map 
is monic as long as the degree
bounds are observed.
(Could this be used for
residuals? Galois?)
*** Categories                                                        :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       33d64f1f-e072-4408-ad5d-0cd08152bc69
    :DRILL_LAST_INTERVAL: 222.6104
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:53]
    :END:
 What is the difference
 between a monoidal and
 a cartesian category?
**** Answer:
 A cartesian category is
 a monoidal category where
 the tensor product /⊗/ is
 the categorical product /×/.
** Analysis
*** Functional                                                        :drill:
    SCHEDULED: <2022-01-31 Mon>
    :PROPERTIES:
    :ID:       36789716-04dd-485e-8255-5c5130b9dbad
    :DRILL_LAST_INTERVAL: 367.2197
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-29 Fri 14:46]
    :END:
What is so special about
the difference between
kinetic and potential
energy to use it for the
Lagrangian?
**** Answer:
Viewing their respective averages
on a path as functionals on
that path it turns out
that they both change by 
the same amount when deviating 
slightly from the classical path. 
Hence, their difference remains 
constant, more precisely, the 
functional derivative
/δ/δx(t)(T[x]-V[x])=0/.
*** Functional                                                        :drill:
    SCHEDULED: <2022-02-17 Thu>
    :PROPERTIES:
    :ID:       c2513d83-ffb4-4a3b-92d2-7b45ff08b937
    :DRILL_LAST_INTERVAL: 462.5808
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-11 Wed 14:30]
    :END:
What is a functional
derivative /δF/δf/ of
functional /F/ with respect
to function /f/?
**** Answer:
The limit of
/(F[f(x')+εδ(x-x')]-F[f(x')])/ε/
as /ε→0/, where /δ/ is the Dirac
function.
*** Functional                                                        :drill:
    SCHEDULED: <2023-04-27 Thu>
    :PROPERTIES:
    :ID:       833fa28d-a254-4d75-8a40-9cc56fc9767a
    :DRILL_LAST_INTERVAL: 783.5624
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-04 Thu 11:03]
    :END:
What is a functional
in analysis?
**** Answer:
A map from a function
space to a ground field 
that assigns numbers to
functions.
*** Wavelets                                                          :drill:
    SCHEDULED: <2022-10-17 Mon>
    :PROPERTIES:
    :ID:       cb081d94-be89-49fe-85df-90595e9fb2f2
    :DRILL_LAST_INTERVAL: 656.5459
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-29 Tue 14:07]
    :END:
Is it always possible to
reconstruct a signal from
only a discrete subset
/γₙₘ=γ(sₙ,tₘ)/ of a wavelet
transform /γ(s,t)/?
**** Answer:
No, only if the signal /f/
satisfies
/A‖f‖²≤∑|⟨f,ψₙₘ⟩|²≤B‖f‖²/
with /A>0/, /B<∞/, ie the 
family /ψₙₘ(t)/ of corresponding
basis functions is a frame with
bounds /A/ and /B/.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-07-02 Sun>
    :PROPERTIES:
    :ID:       31e32c41-8314-468b-b07b-c8c21fdb52f2
    :DRILL_LAST_INTERVAL: 708.1213
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:54]
    :END:
Is it possible to reconstruct
a signal from a discrete wavelet
transform even if the wavelets
are not orthogonal?
**** Answer: 
As long as the basis functions
form a frame, even though a
dual frame will be needed if
the frame is not tight.
*** Wavelets                                                          :drill:
    SCHEDULED: <2022-02-12 Sat>
    :PROPERTIES:
    :ID:       0ab642ed-5703-4f92-a3dd-f0b82c8ef805
    :DRILL_LAST_INTERVAL: 486.3076
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-14 Wed 16:20]
    :END:
Can a signal always be
reconstructed from its
continuous wavelet transform?
**** Answer:
Yes, the admissibility
condition  /∫|Ψ(ω)|²/|ω|²<∞/
for the mother wavelet
makes sure of that.
*** Wavelets                                                          :drill:
    SCHEDULED: <2021-12-10 Fri>
    :PROPERTIES:
    :ID:       5f07a57c-a550-43db-a26a-3cc130a38b42
    :DRILL_LAST_INTERVAL: 367.2197
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-08 Tue 09:46]
    :END:
Why are conditions in addition
to admissibility /∫|Ψ(ω)|²/|ω|²<∞/
imposed on a mother wavelet?
**** Answer:
Without additional conditions, the
product of time and bandwidth of the
corresponding wavelet transform would
be the square of the input signal,
which is undesirable in most
applications.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-03-16 Thu>
    :PROPERTIES:
    :ID:       76c32829-82a4-4650-bb9a-2482ab75b1f8
    :DRILL_LAST_INTERVAL: 785.9417
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-19 Tue 11:38]
    :END:
Can any function be used
as a mother wavelet?
**** Answer:
No, only functions which
decrease fast enough both
in the time and frequency
domain qualify.
*** Wavelets                                                          :drill:
    SCHEDULED: <2022-08-24 Wed>
    :PROPERTIES:
    :ID:       2ea33eda-1e2b-4c42-a65d-1dc94991b9f6
    :DRILL_LAST_INTERVAL: 624.8984
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-07 Mon 09:41]
    :END:
When does a function /ψ(t)/ decrease
fast enough in the frequency
spectrum to qualify as a
wavelet?
**** Answer:
When its Fourier transform /Ψ(ω)/
satisfies /∫|Ψ(ω)|²/|ω|²<∞/.
*** Wavelets                                                          :drill:
    SCHEDULED: <2024-03-21 Thu>
    :PROPERTIES:
    :ID:       4f2bb7de-f309-41b2-a8e4-a6d94b4c266a
    :DRILL_LAST_INTERVAL: 1055.3881
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-01 Sat 16:33]
    :END:
In which sense is a wavelet
a wave?
**** Answer:
In the sense that /∫ψ(t)dt=0/.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-11-08 Wed>
    :PROPERTIES:
    :ID:       4ebf5845-c671-4c28-830f-8b09257d62b1
    :DRILL_LAST_INTERVAL: 952.7344
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-30 Tue 10:51]
    :END:
Is it absolutely mandatory
for a wavelet to be a wave?
**** Answer:
Yes, this is imposed by the
admissibility criterion for
its Fourier transform /Ψ(ω)/,
which requires that
/∫|Ψ(ω)|²/|ω|²<∞/. As a 
consequence, 
/Ψ(0)=∫ψ(t)dt=0/, which
implies waviness.
*** Wavelets                                                          :drill:
    SCHEDULED: <2021-12-30 Thu>
    :PROPERTIES:
    :ID:       0f3f0bbe-fbaf-4860-b53d-1b4546f605ec
    :DRILL_LAST_INTERVAL: 462.8191
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-23 Wed 19:27]
    :END:
When does a function /ψ(t)/
decrease fast enough in
the time domain to 
qualify as a wavelet?
**** Answer:
If its moments /Mₚ=∫tᵖψ(t)dt=0/
for /p/ big enough.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-01-05 Thu>
    :PROPERTIES:
    :ID:       6ddb1c3f-5709-4653-9abf-3720fb7c0e3b
    :DRILL_LAST_INTERVAL: 561.2258
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-23 Wed 10:08]
    :END:
What's the consequence of
a function /ψ(t)/ having zero
moments up to order /n/ for its
usability as a mother wavelet?
**** Answer:
Expanding its wavelet transform
/γ(s,t)=∫f(τ)ψₛₜ(τ)dτ/ for /t=0/ and
using the Taylor expansion of /f/ at
0, it turns out that /γ(s,0)=s∑fᵖ(0)/p!Mₚsᵖ/,
so /Mₚ/ being /0/ up to /n/ makes /γ(s,0)/ disappear
as fast as /sⁿ⁺²/ for small /s/.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-04-16 Sun>
    :PROPERTIES:
    :ID:       de489e7b-60fc-43f1-87d1-c5d73278f1ef
    :DRILL_LAST_INTERVAL: 805.5973
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-30 Sat 12:51]
    :END:
Where does the scaling
function come from in
wavelet analysis?
**** Answer:
The scaling function
is needed to reduce the
number of wavelet coefficients 
in a discrete wavelet transform
to a finite one by covering
the wavelet parts with scaling
factors /2ʲ/ for /j≥j₀/ for some
suitably chosen /j₀/.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-04-03 Mon>
    :PROPERTIES:
    :ID:       674e0ae8-0d0d-4470-894d-1721ac3e71d5
    :DRILL_LAST_INTERVAL: 768.6582
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-23 Tue 21:40]
    :END:
Why is it normally not
possible to express a finite
signal with finitely many
wavelet coefficients without
a scaling function?
**** Answer:
Because the spectrum of a wavelet
doesn't cover the low frequencies
in the signal. Wavelets have a
spectrum like a bandpass which
becomes narrower around its centre
with increasing scaling factor
even though the centre decreases.
As a consequence, infinitely many
high scaling coefficients will be needed
unless they are covered by a lowpass
scaling function.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-08-31 Thu>
    :PROPERTIES:
    :ID:       b9010129-c033-4af8-a737-2cd78b43739f
    :DRILL_LAST_INTERVAL: 896.5856
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-17 Wed 11:47]
    :END:
How to reduce the number of
wavelet coefficients to a
finite one in a wavelet
transform?
**** Answer:
By switching to a discrete
transform /ψₛₜ(x)=ψ(2ˢx-t)/
for integer /s,t/. When analysing
a finite signal, only finitely
many translations /t/ are needed.
The number of scaling parameters 
/s/ can be reduced by introducing
a scaling function /φ(x)=∑γₛₜψₛₜ(x)/
that covers the scales /s≥s₀/ for
some suitably chosen cut-off /s₀/.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-05-28 Sun>
    :PROPERTIES:
    :ID:       38842b93-bd5c-4d8c-8d72-13badc8103b8
    :DRILL_LAST_INTERVAL: 660.6403
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:17]
    :END:
Why is a wavelet not
directly useable as a
template?
**** Answer:
Because the scaled and
shifted versions of a
mother wavelet aren't added
to a constant background but
rather to an already hilly
landscape of previous wavelets.
Thus, the template would be
distorted by its background.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-01-21 Sat>
    :PROPERTIES:
    :ID:       bbd2a403-d585-430b-8c97-87d2c0a7d638
    :DRILL_LAST_INTERVAL: 731.6053
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-19 Tue 11:46]
    :END:
In what sense are
wavelets and template
matching related?
**** Answer:
The mother wavelet /ψ/
is like a template whose
scaled and translated versions
/wₛₜ=ψ((x-t)/s)/ are matched
to the data.
*** Wavelets                                                          :drill:
    SCHEDULED: <2023-03-04 Sat>
    :PROPERTIES:
    :ID:       678d4048-3554-4079-9f95-dc89c4704bf2
    :DRILL_LAST_INTERVAL: 786.0058
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2021-01-07 Thu 11:14]
    :END:
How do wavelets differ from
waves?
**** Answer:
Wavelets are localised, as a
consequence position becomes
important and two parameters,
scaling and translation of
the mother wavelet are
needed to describe them. For
waves position is unimportant
due to their periodicity, so
only scaling of the mother
wave is needed for a description.
** Computer Algebra
*** Maxima                                                            :drill:
    SCHEDULED: <2021-09-23 Thu>
    :PROPERTIES:
    :ID:       5ed96404-64a0-4773-87f5-a7fdb12a13bb
    :DRILL_LAST_INTERVAL: 304.0596
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-23 Mon 20:58]
    :END:
How to access the directory
structure from Maxima?
**** Answer:
Run ~load("operatingsystem")$~
which makes functions like
~getcurrentdirectory()~
available.
*** Maxima:Polynomials                                                :drill:
    SCHEDULED: <2022-05-05 Thu>
    :PROPERTIES:
    :ID:       2e76b4f2-a65a-4928-a076-30aecfb77d22
    :DRILL_LAST_INTERVAL: 403.0707
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-28 Sun 13:17]
    :END:
How to turn an expression
into a polynomial?
**** Answer:
With ~facsum~. Calling it as
~facsum(expr,var)~ will turn
~expr~ into a polynomial in
variable ~var~. Note that
~var~ can be a list of variables.
In addition, ~facsum~ can have
additional elements which are then
interpreted as variables.
*** Maxima:Variable Management                                        :drill:
    SCHEDULED: <2021-11-20 Sat>
    :PROPERTIES:
    :ID:       56fc1c27-7d9d-40be-ae98-dab9cd7a09d1
    :DRILL_LAST_INTERVAL: 305.2258
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-19 Tue 11:44]
    :END:
How to undefine a variable?
**** Answer:
There are no undefined
entities in maxima because
everything evaluates to
itself by design. However,
a value property can be
removed from a variable
with ~remove(<varname>,value)~
or ~remvalue(<varname>)~.
** Geometry
*** Finite                                                            :drill:
    SCHEDULED: <2022-10-29 Sat>
    :PROPERTIES:
    :ID:       8946f43b-ab5f-4a98-9191-86a8a82b44ff
    :DRILL_LAST_INTERVAL: 494.7159
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-21 Mon 13:36]
    :END:
What is a 
Simplicial Set?
**** Answer:
A generalization of directed
multigraphs to higher dimensions,
containing, amongst other things,
simplexes and their faces.
*** Fractional Calculus                                               :drill:
    SCHEDULED: <2021-11-09 Tue>
    :PROPERTIES:
    :ID:       52a74e90-6eec-438a-8dc7-f3d68539bf6f
    :DRILL_LAST_INTERVAL: 209.558
    :DRILL_REPEATS_SINCE_FAIL: 12
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 3
    :DRILL_AVERAGE_QUALITY: 2.948
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:15]
    :END:
How does Heaviside solve
/∂ₓ²u=a²∂ₜu/?
**** Answer:
By treating /∂ₜ/ as a constant
and using ODE techniques to
arrive at solutions /u(x,t)/ that 
are linear combinations of
/exp(±a∂ₜ^½x)/. Expanding and
factoring out the fractional
derivative then yields the
result.
*** Fractional Calculus                                               :drill:
    SCHEDULED: <2023-05-10 Wed>
    :PROPERTIES:
    :ID:       eb154591-92d3-4a8d-8413-e80fd67e322a
    :DRILL_LAST_INTERVAL: 806.1091
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-23 Tue 21:44]
    :END:
How can fractional derivatives
be used to approximate functions?
**** Answer:
By using the fractional Taylor
Theorem
f(x+h)=f(x)+∂ₓᵖf|ₓhᵖ/Γ(p+1)+R
for /0<p≤1/, ie the tangent
approximation is replaced
by a power law.
*** Fractional Calculus                                               :drill:
    SCHEDULED: <2022-11-26 Sat>
    :PROPERTIES:
    :ID:       0102aa47-f1bb-4a4f-988e-3f9f78617127
    :DRILL_LAST_INTERVAL: 741.5066
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-11-14 Sat 16:36]
    :END:
How do fractional derivatives
occur naturally?
**** Answer:
When expanding expressions
containing /∂ₓ/ into power
series, for example in the
solution of the heat
equation according to
Heaviside.
*** Differential: Lie                                                 :drill:
    SCHEDULED: <2023-10-04 Wed>
    :PROPERTIES:
    :ID:       98d907fb-2dc5-4625-9c93-d89240c16faa
    :DRILL_LAST_INTERVAL: 896.5856
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-20 Tue 13:43]
    :END:
How do differential operators /D/
induce a change of coordinates
in a function?
**** Answer:
Via /exp(iD)/ which results in a
Taylor-style expansion when
applied to a function /f/. But
an expansion like this is
also generated by a change
of coordinates of /f/ if it
is small enough and leads to
a Taylor expansion of /f/.
*** Differential: Lie                                                 :drill:
    SCHEDULED: <2021-10-22 Fri>
    :PROPERTIES:
    :ID:       1e9184ca-9752-46c5-ae04-5224b7c8fa7c
    :DRILL_LAST_INTERVAL: 289.8378
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.231
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-05 Tue 09:52]
    :END:
What is an infinitesimal
transformation induced by
a Lie group?
**** Answer:
The linear transformation
of differentials /dxᵢ/ to /daᵢ/
induced by the action
/xᵢ'=f(*x*;a₁,…,aᵣ)/ of the Lie
group. It is given by
/dₐf=∑ᵢdaᵢ∂/∂aᵢf(*x*;a)|ₐ₌₀/.
*** Differential: Lie                                                 :drill:
    SCHEDULED: <2023-04-27 Thu>
    :PROPERTIES:
    :ID:       bd604eec-ce75-4815-8676-506e30e42635
    :DRILL_LAST_INTERVAL: 768.6582
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-19 Fri 18:37]
    :END:
How does an r-parameter 
Lie group act on an 
n-dimensional space?
**** Answer:
It transforms coordinates
as /xᵢ=fᵢ(*x*;a₁,…,aᵣ)/ with
*x* = f(*x*;0,…,0).
*** Differential: Lie                                                 :drill:
    SCHEDULED: <2021-08-25 Wed>
    :PROPERTIES:
    :ID:       ab676f5e-b4aa-4bbf-ab4b-f88a3277b53d
    :DRILL_LAST_INTERVAL: 376.3216
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-08-14 Fri 16:12]
    :END:
How does a Lie group give
rise to vector fields?
**** Answer:
A Lie group transforming
point *x₀* as /xᵢ(*a*)=fᵢ(*x₀; *a*)/
with parameter vector *a* has
infinitesimal generators
/Lᵤ=i∑ⱼvⱼᵤ(*x₀*)∂/∂xⱼ/ with
/vⱼᵤ=∂/∂aᵤfⱼ(*x₀*, *a*)|ₐ₌₀/,
which is a vector field.
*** Differential                                                      :drill:
    SCHEDULED: <2021-12-23 Thu>
    :PROPERTIES:
    :ID:       1e427a6d-45a3-4405-ba22-ed0226d9f680
    :DRILL_LAST_INTERVAL: 398.2881
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 15
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-20 Fri 12:46]
    :END:
Why can a vector field
be considered a differential
operator?
**** Answer:
Because it can be viewed as
a field of directional 
derivatives. As such, it
assigns to every sufficiently
smooth function a field of
directional derivatives, an
assignment that can be expressed
as a differential operator.
*** Differential						      :drill:
    SCHEDULED: <2022-09-11 Sun>
    :PROPERTIES:
    :ID:       e05ccbee-8415-4796-a494-64f2c880e243
    :DRILL_LAST_INTERVAL: 907.1195
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.727
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-03-18 Wed 13:49]
    :END:
What does the vector field /∂ₓ/
look like in two dimensions?
**** Answer:
These are the unit arrows pointing
in the direction of constant /y/, ie
to the right in the normal /x,y/ plane.
*** Differential						      :drill:
    SCHEDULED: <2021-10-26 Tue>
    :PROPERTIES:
    :ID:       9e335c5e-2c9a-4089-af6c-ff02c2211346
    :DRILL_LAST_INTERVAL: 202.0036
    :DRILL_REPEATS_SINCE_FAIL: 16
    :DRILL_TOTAL_REPEATS: 20
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-07 Wed 10:03]
    :END:
Why are the partial differential 
operators in the unit directions 
considered a basis for vector-fields?
**** Answer:
Because vector fields are linear operators
assigning to each scalar field a field 
of directional derivatives given by the
directions of the vectors in the vector field. 
*** Differential						      :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       f34ab62f-12a9-4edb-a4fb-2500c8359cee
    :DRILL_LAST_INTERVAL: 222.8001
    :DRILL_REPEATS_SINCE_FAIL: 14
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.369
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:58]
    :END:
What is the problem when trying to define a 
derivative of vector fields on a manifold?
**** Answer:
In most cases the difference /v(x+hw)-v(x)/
doesn't make sense because the vectors
involved are not in the same tangent space.
Using coordinate-wise differences doesn't 
help because it makes the
result dependent on the choice of 
coordinate system.
*** Differential						      :drill:
    SCHEDULED: <2023-12-22 Fri>
    :PROPERTIES:
    :ID:       e72d3169-660c-409c-8b65-1b87edc11af5
    :DRILL_LAST_INTERVAL: 1075.314
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-11 Mon 11:04]
    :END:
Why is it a problem that the ordinary
derivative of vector fields is not 
tensorial?
**** Answer:
Because this means that this derivative
depends on the choice of coordinate system.
*** Differential						      :drill:
    SCHEDULED: <2024-03-28 Thu>
    :PROPERTIES:
    :ID:       63934d3f-1f6a-4e4d-b1e5-0d1ddcb7e024
    :DRILL_LAST_INTERVAL: 1127.8172
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-24 Wed 11:11]
    :END:
What is the geometric idea of calculating
the covariant derivative of a vector field?
**** Answer:
To calculate the derivative of the vector
field at /x/, the vector /v(x+tw)/ undergoes
a parallel transport into the tangent
space at /x/ and is compared to /v(x)/. 
*** Differential						      :drill:
    SCHEDULED: <2025-02-14 Fri>
    :PROPERTIES:
    :ID:       29efe539-ce68-4447-a25d-8d5f21b06a52
    :DRILL_LAST_INTERVAL: 1339.6119
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.583
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-15 Tue 11:09]
    :END:
What is the idea of parallel transport
of tangent vectors on a manifold as used
in the calculation of the covariant
derivative?
**** Answer:
The embedding of the manifold in an Euclidean
space is used, where parallel transport is 
well defined. The vectors are transported in
the ambient space and projected onto the tangent
spaces of the manifold.
*** Differential						      :drill:
    SCHEDULED: <2023-02-27 Mon>
    :PROPERTIES:
    :ID:       a61437ca-4da8-4081-833f-bed25acc53ea
    :DRILL_LAST_INTERVAL: 846.156
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-03 Tue 21:26]
    :END:
What is the advantage of the Lie derivative
over covariant derivatives on a manifold? 
**** Answer:
Covariant derivatives depend on the metric of
the manifold whereas Lie-type derivatives don't.
*** Tensors                                                           :drill:
    SCHEDULED: <2022-02-20 Sun>
    :PROPERTIES:
    :ID:       430cf2d5-9fe9-4146-8906-9729b5db6616
    :DRILL_LAST_INTERVAL: 661.3331
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-04-30 Thu 13:45]
    :END:
Why can tensors always
be represented in two
dimensions?
**** Answer:
Because there are only
two types of indices, namely
upper and lower. These
can be assigned to columns and 
rows, respectively, so any 
tensor can be represented 
recursively as a 
combination of rows or 
columns of rows or
columns.
*** Tensors                                                           :drill:
    SCHEDULED: <2022-01-28 Fri>
    :PROPERTIES:
    :ID:       9e2a7e79-2ef5-4bd7-88f4-8f27e0940e60
    :DRILL_LAST_INTERVAL: 638.0971
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-04-30 Thu 13:44]
    :END:
Where does the name
/contravariant/ for
coefficients of basis
vectors come from?
**** Answer:
If a vector is to be
basis independent, its 
coefficients have to
/contra-vary/ with a change
of basis in order to
compensate for the change
in basis.
*** Tensors                                                           :drill:
    SCHEDULED: <2022-02-20 Sun>
    :PROPERTIES:
    :ID:       51379d18-165a-4cc6-b65f-b099ee1f8410
    :DRILL_LAST_INTERVAL: 661.3331
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-04-30 Thu 13:45]
    :END:
What is the tensor
/aᵢʲ/ in terms of rows
and columns?
**** Answer:
It is a column vector
of row vectors, in other
words a matrix.
*** Tensors                                                           :drill:
    SCHEDULED: <2022-02-20 Sun>
    :PROPERTIES:
    :ID:       d82607ec-9d03-4bb3-ba8a-5bb87b7c78f2
    :DRILL_LAST_INTERVAL: 661.3331
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-04-30 Thu 13:46]
    :END:
Why is /(aᵢⱼ)/ not a
matrix in tensor terms?
**** Answer:
Because it is a row vector
of row vectors and doesn't
have columns, like a matrix
would.
*** Tensors                                                           :drill:
    SCHEDULED: <2022-02-20 Sun>
    :PROPERTIES:
    :ID:       f6f54257-424c-4e8a-a81d-e16ef804ba70
    :DRILL_LAST_INTERVAL: 661.3331
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-04-30 Thu 13:42]
    :END:
What does /aᵢʲₖ/ describe in
terms of rows and columns?
**** Answer:
It is a row of columns 
containing rows, in other
words a row of matrices.
*** Tensors                                                           :drill:
    SCHEDULED: <2022-02-20 Sun>
    :PROPERTIES:
    :ID:       9464c4fd-3e96-4728-853e-c2cb8829d548
    :DRILL_LAST_INTERVAL: 661.3331
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-04-30 Thu 13:43]
    :END:
How to describe a column
of matrices in tensor
notation?
**** Answer:
As /aᵢʲᵏ/.
*** Tensors                                                           :drill:
    SCHEDULED: <2022-06-26 Sun>
    :PROPERTIES:
    :ID:       3e7b1bfc-50c1-485e-ad8c-9364d6310634
    :DRILL_LAST_INTERVAL: 622.9859
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.375
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-10-11 Sun 15:57]
    :END:
How can tensor indices
be related to rows and
columns?
**** Answer:
In the usual notation
with vectors as columns, 
contravariant vectors
/(aⁱ)/ correspond to
column vectors and covariant
tensors /(aᵢ)/ to rows. The rest
follows from considering
higher order tensors as row
or columns of lower order
tensors according to the position
of the last index.
** Logic
*** Automata                                                          :drill:
    SCHEDULED: <2023-02-16 Thu>
    :PROPERTIES:
    :ID:       9f261e48-8147-46b8-8da2-3f9d64e294e6
    :DRILL_LAST_INTERVAL: 644.3412
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-13 Thu 13:23]
    :END:
Are there Turing machines
that obviously don't halt?
**** Answer:
Yes, if there is an entry
for every combination /qᵢ/,
/Sᵢ/ of states and symbols
then the machine won't halt
because it only halts if
it reaches a state and symbol
for which there is no
instruction.
*** Automata                                                          :drill:
    SCHEDULED: <2021-09-02 Thu>
    :PROPERTIES:
    :ID:       331497cb-13ae-4956-a14f-b8bfdcb86b70
    :DRILL_LAST_INTERVAL: 298.612
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-07 Sat 18:10]
    :END:
How to describe the halting
condition of a Turing machine
by a first order predicate?
**** Answer:
By a disjunction /∨/ of sentences
/∃t,x (Qᵢ(x,t)&Sᵢ(x,t))/ over
all /i/ for which there is no
entry for /qᵢ/, /Sᵢ/ in the
table for the machine, or
/False/ if if there are entries
for all /qᵢ/, /Sᵢ/.
*** Automata                                                          :drill:
    SCHEDULED: <2022-08-15 Mon>
    :PROPERTIES:
    :ID:       227c24f8-246f-4281-b6e2-c1e4378402bf
    :DRILL_LAST_INTERVAL: 525.2852
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-08 Mon 11:51]
    :END:
How to describe a Turing
machine /T/ by first order
predicates?
**** Answer:
By introducing a predicate
/Qᵢ(x,t)/ for every state
/qᵢ/ to be interpreted as
/T/ is in state /qᵢ/ at time
/t/ scanning field /x/ and a
predicate /Sᵢ(x,t)/ for each
symbol to mean symbol /sᵢ/ is
in field /x/ at time /t/.
The transitions particular to
/T/ can then be expressed in
terms of these predicates.  
*** Automata                                                          :drill:
    SCHEDULED: <2022-03-31 Thu>
    :PROPERTIES:
    :ID:       653cd849-1694-4cd9-9127-d043eec0380b
    :DRILL_LAST_INTERVAL: 450.0963
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-05 Tue 09:53]
    :END:
What is the principal
insight that leads to
results regarding the
non-computability of
functions /f:ℕ→ℕ/?
**** Answer:
The insight that there
are uncountably many
such functions but only
countably many descriptions
for algorithms /fₙ/ mapping
natural numbers to natural
numbers. On the other hand,
it is relatively easy to
construct algorithms that
are not in the list
/{fₙ|n∈ℕ}/, for example
/g(x)=fₓ(x)+1/. Thus, 
something has to go wrong
when computing /g(x)/,
for example it may be
impossible to find /fₓ/
or /fₓ(x)/ may not halt.
*** Automata                                                          :drill:
    SCHEDULED: <2023-04-13 Thu>
    :PROPERTIES:
    :ID:       32d424a5-7960-40f8-b669-2305f749ef32
    :DRILL_LAST_INTERVAL: 805.5973
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-27 Wed 21:27]
    :END:
What is the difference
between a finite state
automaton and a Turing
machine with finite
memory?
**** Answer:
Finite automata are
purely input driven, they
change state only upon
encountering input. Turing
machines, on the other hand,
can change state without
reading input. As a matter
of fact, internal state changes
can cause a request for more
input.
*** Continuity                                                        :drill:
    SCHEDULED: <2022-02-24 Thu>
    :PROPERTIES:
    :ID:       50348723-2975-4d86-86e4-7510a0865318
    :DRILL_LAST_INTERVAL: 514.1718
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-28 Mon 17:04]
    :END:
What kind of entities
are considered 
incomparable in a
programming language?
**** Answer:
Entities whose equality
is undecidable, such as
functions.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2021-11-14 Sun>
    :PROPERTIES:
    :ID:       d03c26c3-aab0-4698-b521-e29e6fc4749d
    :DRILL_LAST_INTERVAL: 461.169
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-08-10 Mon 16:39]
    :END:
How to prove theorems
using the /Curry Howard/
correspondence?
**** Answer:
Construct the type corresponding
to the theorem and find a value
that has that type.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2023-06-15 Thu>
    :PROPERTIES:
    :ID:       7c3adb87-fa54-4399-aff1-23f35aca4797
    :DRILL_LAST_INTERVAL: 678.7652
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:18]
    :END:
Why is there no function
=f::a->b= in Haskell?
**** Answer:
Because there is no way
to turn a general type
=a= into another general
type =b=, something has
to be known about these
types.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2022-04-30 Sat>
    :PROPERTIES:
    :ID:       c9bea7ad-208e-421c-bfde-b674a9a61baa
    :DRILL_LAST_INTERVAL: 601.7969
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-09-05 Sat 14:11]
    :END:
When is the proposition
=a→b= true according to
the /Curry Howard/
correspondence?
**** Answer:
Whenever the corresponding
type =a -> b= is inhabited,
ie there is a function
=f::a -> b=.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2023-10-18 Wed>
    :PROPERTIES:
    :ID:       fe7ec71f-4892-47e9-a3d1-2526ca9174b5
    :DRILL_LAST_INTERVAL: 922.5053
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-08 Thu 15:34]
    :END:
What is the problem with
the /bottom type/ =⊥= from
a logical perspective?
**** Answer:
Since every type contains
the bottom type =⊥=, every
theorem in the corresponding
logic would be true, thus
making it inconsistent.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2022-01-16 Sun>
    :PROPERTIES:
    :ID:       b9a0ed46-415a-49cc-bcb6-74c6347a5164
    :DRILL_LAST_INTERVAL: 512.4918
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-08-22 Sat 17:06]
    :END:
How is negation expressed 
in the Curry Howard
correspondence?
**** Answer:
As =type Not a = =a -> Void= in 
Haskell syntax where =Void= is an 
empty data-type, ie. one 
without a constructor.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2023-03-12 Sun>
    :PROPERTIES:
    :ID:       beaeb7c9-f556-49dc-9d26-e9f2844b032b
    :DRILL_LAST_INTERVAL: 594.996
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-25 Sun 09:08]
    :END:
Why is the logic corresponding 
to the standard /λ/ calculus
intuitionistic?
**** Answer:
Because in its type system
=Not Not a= can not be proven.
It would correspond to type
=((a -> Void) -> Void) -> a=,
for which there is no standard
/λ/-expression.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2023-03-11 Sat>
    :PROPERTIES:
    :ID:       77f0fd8e-bb8f-4d05-b6c0-3290dae05e45
    :DRILL_LAST_INTERVAL: 594.996
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:56]
    :END:
What does a constructor
prove in the Curry-Howard
correpondence?
**** Answer:
That depends on its exact
function signature but 
essentially it proves that
a type is populated, possibly
depending on other types.
*** Deduction                                                         :drill:
    SCHEDULED: <2022-08-13 Sat>
    :PROPERTIES:
    :ID:       b536ca70-9ef8-4319-a4f3-aa1b1c126d23
    :DRILL_LAST_INTERVAL: 384.7435
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:59]
    :END:
How is right introduction
in sequent rules related
to natural deduction rules?
**** Answer:
Right introduction is usually
identical to introduction
in natural deduction.
*** Deduction                                                         :drill:
    SCHEDULED: <2022-02-09 Wed>
    :PROPERTIES:
    :ID:       4d135676-a9e7-4e3a-ae08-ee71c4f79e15
    :DRILL_LAST_INTERVAL: 345.5149
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.833
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-28 Sun 20:18]
    :END:
How are left introduction
sequent rules related to
natural deduction rules?
**** Answer:
They correspond to the elimination
rules of natural deduction.
*** Deduction                                                         :drill:
    SCHEDULED: <2022-10-07 Fri>
    :PROPERTIES:
    :ID:       b8fe8851-e70a-41cf-b69b-cab3ec5e76c9
    :DRILL_LAST_INTERVAL: 440.1776
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:59]
    :END:
Why are Gentzen style deduction
rules with sequences to the right
of ⊢ rather uncommon?
**** Answer:
Because they are mostly of interest
in mathematical proof analysis, with
the computational view of logic rules
having only one proposition to the
right of ⊢ correspond more directly
to functions.
*** Deduction                                                         :drill:
    SCHEDULED: <2021-11-11 Thu>
    :PROPERTIES:
    :ID:       017662bc-1eb9-4e39-949c-ba5de15d1936
    :DRILL_LAST_INTERVAL: 287.9187
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-27 Wed 21:30]
    :END:
What is the difference
between /Sequent Rules/
and /Natural Deduction Rules/?
**** Answer:
In natural deduction, logical
operators are defined with
introduction and elimination
rules, with sequent rules
they are defined with left
and right introduction, ie
introduction to the left
and right of ⊢, instead.
*** Experiments                                                       :drill:
    SCHEDULED: <2023-03-29 Wed>
    :PROPERTIES:
    :ID:       d19b1160-b19f-4657-b69e-5fcc4d5f421e
    :DRILL_LAST_INTERVAL: 651.4737
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-16 Wed 11:19]
    :END:
How to construct probabilities
on an experiment logic?
**** Answer:
For /σ/-additive complete logics
(quasi-?)probability measures can
be obtained by composing an
observable /O/ with a /σ/-additive
state /s/ to obtain /s∘O: *B* → ℝ/
with /s∘O(ℝ)=1/.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-09-21 Tue>
    :PROPERTIES:
    :ID:       40e24806-0d5e-4ce7-ad39-93d806d92498
    :DRILL_LAST_INTERVAL: 55.4775
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 15
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.133
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-28 Wed 18:12]
    :END:
How are observables on an
experiment logic related to
measurements?
**** Answer:
In the sense that /O⁻¹(P)/
of a proposition /P/ is the
set of possible results of
an experiment in which /P/
is true. (Technically it
is /O⁻¹(P)-resolv(O)/).
*** Experiments                                                       :drill:
    SCHEDULED: <2022-04-07 Thu>
    :PROPERTIES:
    :ID:       2756890c-1c72-4185-8982-1493f515fa5d
    :DRILL_LAST_INTERVAL: 403.0707
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-28 Sun 20:19]
    :END:
How are observables defined
in experiment logics?
**** Answer:
An observable /O/ is a function
the real Borel sets *B* to
a /σ/-complete logic /L/ such
that /O(ℝ)=1/ and /σ/-additivity
is preserved under /O/.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-07-16 Sat>
    :PROPERTIES:
    :ID:       d2736c2a-5edd-48d2-9b71-cbdd35eda3f2
    :DRILL_LAST_INTERVAL: 506.8288
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-24 Wed 11:10]
    :END:
How to define interpretations
on a logic describing 
experiments?
**** Answer:
This would require the development
of an underlying language whose
sentences map to propositions of
the experimental logic. An 
interpretation of this language
would then be a function whose
restriction to the sentences
induces a state on the
experimental logic.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-12-10 Fri>
    :PROPERTIES:
    :ID:       0dc3b76d-93fa-4e6d-83b0-21d5cf53414c
    :DRILL_LAST_INTERVAL: 367.0327
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.428
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-12-08 Tue 09:49]
    :END:
How do states of a logic
describing experiments
relate to first order
logic?
**** Answer:
Dispersion-free states are
like models on a first order
logic because they are related
to the truth of certain
propositions.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-05-12 Thu>
    :PROPERTIES:
    :ID:       c135bca0-f617-4ddf-aa3d-22d165774cd2
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-28 Sun 20:15]
    :END:
How can a logic describing
experiments be related to 
a first order logic?
**** Answer:
By a language describing
experiments whose sentences
are propositions in the
logic of the experiments.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-08-11 Thu>
    :PROPERTIES:
    :ID:       ed64d9d6-bc5f-48d3-86ec-61fe5fc77ce6
    :DRILL_LAST_INTERVAL: 525.214
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-04 Thu 10:57]
    :END:
When is a property of
a system considered 
detectable by proposition
/P∈L/ of its experimental 
logic /L/?
**** Answer:
Whenever the property
is a face /F/ on the states
of L of the form
/F={s|s(P)=1}/.
*** Experiments                                                       :drill:
    SCHEDULED: <2023-02-09 Thu>
    :PROPERTIES:
    :ID:       179cb637-9b69-489e-844e-984a7d5d1dae
    :DRILL_LAST_INTERVAL: 621.5273
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-28 Fri 09:57]
    :END:
Why is a face on the
states of an experimental
logic a good model for a
property of the underlying
system?
**** Answer:
Bcause a face is the convex
hull of a set of pure states.
Intuitively, a property is
given as a set of pure states
selecting certain propositions
as true and others as false. In
order to deal with uncertainty,
the convex hull of these states
is necessary to define a
property.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-05-29 Sun>
    :PROPERTIES:
    :ID:       26996802-5a78-46e3-9911-7d6cdc3d7874
    :DRILL_LAST_INTERVAL: 494.0326
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.9
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-20 Wed 18:01]
    :END:
Why is the concept of
ontological uncertainty
controversial?
**** Answer:
Before the advent of quantum
mechanics it was believed that
ontological uncertainty can always
be dispelled by a refinement to
a better theory.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-12-04 Sun>
    :PROPERTIES:
    :ID:       8a5d572a-d68f-4870-8614-ebf1e158184b
    :DRILL_LAST_INTERVAL: 606.3338
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-07 Wed 10:04]
    :END:
What is the difference between
epistemic and ontological
uncertainty?
**** Answer:
Epistemic uncertainty reflects
a lack of knowledge about which 
definite (=dispersion free) state
a system is in. Ontological
uncertainty reflects a fundamental
uncertainty in nature due to the
lack of a definite state the system
is in.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-09-08 Wed>
    :PROPERTIES:
    :ID:       794e5218-fd7b-4102-9106-5a5959ba5989
    :DRILL_LAST_INTERVAL: 45.6652
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 15
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.067
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:53]
    :END:
How is ontological uncertainty
expressed in a logic describing
experiments?
**** Answer:
By the presence of pure states
with dispersion, ie states /s/ for
which there are propositions /P/
with /s(P)∉{0,1}/ that can not
be written as a convex combination
of dispersion free states.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-09-11 Sat>
    :PROPERTIES:
    :ID:       548900f9-9a40-41d2-ad89-e35502ed931e
    :DRILL_LAST_INTERVAL: 384.9147
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.833
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-08-22 Sat 17:05]
    :END:
What is a pure state on an
experimental logic?
**** Answer:
A state that can not be written
as a nontrivial convex combination 
of other states.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-09-08 Wed>
    :PROPERTIES:
    :ID:       1554c6db-f385-45b6-8ab7-acdced00a921
    :DRILL_LAST_INTERVAL: 390.625
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-08-13 Thu 20:09]
    :END:
How is epistemic uncertainty
reflected in an experimental
logic?
**** Answer:
By a mixture of dispersion free
states expressing that the system
is in a state represented by 
one of the mixing components but 
it is not known in which one.
*** Experiments                                                       :drill:
    SCHEDULED: <2023-08-19 Sat>
    :PROPERTIES:
    :ID:       6d0fdbc3-41fa-43d5-b07f-c266692b085e
    :DRILL_LAST_INTERVAL: 751.7263
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-28 Wed 18:10]
    :END:
What is a dispersion free
state on a logic?
**** Answer:
Essentially a truth value
that assigns 0 or 1 to
every proposition of the
logic.
*** Experiments                                                       :drill:
    SCHEDULED: <2023-08-19 Sat>
    :PROPERTIES:
    :ID:       930d6632-149e-4f9e-99c3-90d6cf1115ac
    :DRILL_LAST_INTERVAL: 751.7263
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-28 Wed 18:12]
    :END:
How is probability
modeled in experimental
logics?
**** Answer:
Via convex combinations
of states. Every convex
combination of states is
a state again but with
values between 0 and 1
even if the component
states are dispersion free,
ie in /{0, 1}/.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-03-08 Tue>
    :PROPERTIES:
    :ID:       5f58a4e9-2fe5-40c7-87bc-a53b3ad7517a
    :DRILL_LAST_INTERVAL: 340.2503
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-02 Fri 18:44]
    :END:
What kinds of logics
are used to describe
experiments?
**** Answer:
These logics are usually
lattices /(L,≤,')/ containing
/𝟏/ and /𝟎/ and an
orthocomplementation /'/ which
is reminiscent of negation,
/≤/ playing the role of
implication.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-10-01 Fri>
    :PROPERTIES:
    :ID:       8765c8aa-5784-4645-823f-dd1498fdee52
    :DRILL_LAST_INTERVAL: 327.9881
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.299
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-07 Sat 18:10]
    :END:
When are propositions of a
logic orthogonal?
**** Answer:
Propositions /p,q∈L(,≤,')/ 
are orthogonal, /p⊥q/, if
/p≤q'/.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-04-09 Sat>
    :PROPERTIES:
    :ID:       8e1263af-da37-48f2-be62-e8e8dc174d6d
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-26 Tue 18:04]
    :END:
What is a state on a
logic describing
experiments?
**** Answer:
A function /s:L→[0,1]/ such
that /s(𝟏)=1/ and 
/s(p∨q)=s(p)+s(q)/ if
/p⊥q/.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-04-09 Sat>
    :PROPERTIES:
    :ID:       3ae099a8-d71c-486e-b725-6cae828d3a6f
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-26 Tue 18:02]
    :END:
Why does the definition of
state make sense for logics
describing experiments?
**** Answer:
Because these logics describe
states of physical systems, each
state of the physical system makes
certain propositions of its
describing logic true and so
induces a state on the logic.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-08-18 Thu>
    :PROPERTIES:
    :ID:       60d775e8-4f1d-4411-b0e1-6c48aca979a7
    :DRILL_LAST_INTERVAL: 424.762
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.182
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-19 Sat 11:15]
    :END:
Why is normal propositional
logic not suitable to
describe experimental
results?
**** Answer:
Because it doesn't take into
account that the truth of
propositions /p/, /q/ may
not be determinable at the same
time due to incompability
of the underlying experiments.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-04-20 Wed>
    :PROPERTIES:
    :ID:       39a70dcc-5d75-4b58-bc2d-3e7439716d9b
    :DRILL_LAST_INTERVAL: 449.0396
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.428
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2021-01-26 Tue 11:24]
    :END:
Why may
/p→(p∧q)∨(p∧¬q)/ not hold
in a logic describing
experiments?
**** Answer:
Because it may not be possible
to determine the truth of
/p/ and /q/ at the same time
if the underlying events are
not compatible, ie in quantum
experiments. In this case, 
neither /p∧q/ nor /p∧¬q/ would
be defined.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-04-09 Sat>
    :PROPERTIES:
    :ID:       f788563f-ae20-45fc-90ad-1fb89f9a41e6
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-26 Tue 11:25]
    :END:
What is the meaning of
a proposition /[A]∈Π(*M*)/
for manual *M*?
**** Answer:
It means "if the system
is tested for event /A/
in *M* then event /A/ will
occur".
*** Experiments                                                       :drill:
    SCHEDULED: <2021-12-01 Wed>
    :PROPERTIES:
    :ID:       26886f96-ec59-4049-8c5e-4abeab64a86b
    :DRILL_LAST_INTERVAL: 365.0079
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-01 Tue 20:42]
    :END:
How are propositions 
defined on a manual *M*?
**** Answer:
By defining an equivalence
relation on events of *M*
by /A ↔ B/ iff /A op B/. 
Propositions on *M* are
the equivalence classes
of this relation.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-12-07 Tue>
    :PROPERTIES:
    :ID:       27839549-1092-4f65-8480-a897666375a0
    :DRILL_LAST_INTERVAL: 123.5612
    :DRILL_REPEATS_SINCE_FAIL: 12
    :DRILL_TOTAL_REPEATS: 16
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.063
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:17]
    :END:
How is logical implication
defined on a manual *M*?
**** Answer:
Via logical implication of
events: /[A]≤[B]/ if the
representatives satisfy
/A≤B/, ie there is an event
/C/ such that /A⊥C/ and
/A∪C op B/.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-11-07 Sun>
    :PROPERTIES:
    :ID:       a3643d5e-4a8b-4d3d-820d-224a061136a9
    :DRILL_LAST_INTERVAL: 352.2333
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-20 Fri 12:49]
    :END:
How is negation defined
on a manual *M*?
**** Answer:
Via orthocomplementation where
the orthocomplement of /[A]/
is /[A]'=[E-A]/ where /E/ is
an experiment with /A⊆E/.
*** Experiments                                                       :drill:
    SCHEDULED: <2022-03-01 Tue>
    :PROPERTIES:
    :ID:       e755596e-eda7-4b1c-a55f-8127f07625dd
    :DRILL_LAST_INTERVAL: 417.6891
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-07 Thu 11:18]
    :END:
When is a proposition /[A]/ on a
manual *M* considered true?
**** Answer:
If there exists an experiment /E/ in
*M* for which an event equivalent
to /A/ occurs upon performance of /E/.
*** Homotopic Types                                                   :drill:
    SCHEDULED: <2023-10-02 Mon>
    :PROPERTIES:
    :ID:       db4a5604-8b0b-47ea-8419-cbdce8f1af2b
    :DRILL_LAST_INTERVAL: 888.0132
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-27 Tue 15:56]
    :END:
What is special in
a homotopic type?
**** Answer:
Not only the type itself
is of importance but also
its equality types.
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2023-12-15 Fri>
    :PROPERTIES:
    :ID:       66e86f2a-ba6a-43fd-bdad-252965f5e94d
    :DRILL_LAST_INTERVAL: 942.1875
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-17 Mon 22:25]
    :END:
In what sense is recursion
of a function by calling itself
not really needed?
**** Answer:
In the sense that every recursive
function is the fixed point of
some code snippet.
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2022-08-04 Thu>
    :PROPERTIES:
    :ID:       ec3ceaa6-1875-4779-aa84-4feefec13a78
    :DRILL_LAST_INTERVAL: 604.179
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-12-08 Tue 09:44]
    :END:
Why is a lambda expression
/FIX G/ with a fixed point 
combinator /FIX/ called 
self-replicating?
**** Answer:
Because it evaluates to
/G (FIX G)/, ie
/FIX G = G (FIX G)/.
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2023-04-29 Sat>
    :PROPERTIES:
    :ID:       33678e69-a2de-40fc-8c82-95421694694c
    :DRILL_LAST_INTERVAL: 760.149
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-30 Tue 10:47]
    :END:
How to achieve recursion
of nameless lambda expressions?
**** Answer:
That is what fixed point
combinators, such as *Y,* are
for. They construct self-replicating
lambda expressions /FIX G/ from 
expressions /G/ so that /FIX G x/
is a recursive application of
/G/ on its argument /x/.
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2023-12-23 Sat>
    :PROPERTIES:
    :ID:       0f931a45-b678-42de-90d4-08f320c9f535
    :DRILL_LAST_INTERVAL: 952.7344
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-14 Fri 11:17]
    :END:
What is a combinator in
the context of lambda
calculus?
**** Answer:
A lambda expression with
no free variables, also
referred to as a closed
expression.
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2022-10-16 Sun>
    :PROPERTIES:
    :ID:       664c413e-eeb7-4764-950e-7e1b17fe1efb
    :DRILL_LAST_INTERVAL: 628.3967
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-26 Tue 18:05]
    :END:
What is the meaning of
a sequence of applications
/M N P/?
**** Answer:
This is interpreted as
/((M N) P)/, ie application
is left associative.
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2023-12-23 Sat>
    :PROPERTIES:
    :ID:       7dbc3820-e6e1-4dd6-adc6-14398ff4413a
    :DRILL_LAST_INTERVAL: 952.7344
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-14 Fri 11:18]
    :END:
How is /λx.M N/ to be
interpreted?
**** Answer:
As /λx.(M N)/ since the
scope of an abstraction
is considered to extend
as far right as possible.
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2023-12-07 Thu>
    :PROPERTIES:
    :ID:       a49d2a7d-1ec5-490e-89c2-bb9330df54b3
    :DRILL_LAST_INTERVAL: 905.592
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-14 Mon 12:33]
    :END:
Why is the substitution
/(λx.M)[x:=N]≡λx.M/?
**** Answer:
Because the variable /x/
is not free in /M/ and 
substitutions /E[v:=R]/ only
affect free occurences of
variable /v/ in expression /E/.
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2023-04-29 Sat>
    :PROPERTIES:
    :ID:       bd987ab8-5623-42d1-9640-36be883320b5
    :DRILL_LAST_INTERVAL: 760.149
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-30 Tue 10:52]
    :END:
What is the danger in the
substitution /(λy.M)[x:=N]/
where /x≠y/?
**** Answer:
If /y/ was a free variable of /N/
it would become bounded after
the substitution, which evaluates
to /λy.(M[x:=N])/. Thus, this 
requires an α-conversion of /N/ where
all free occurences of /y/ are renamed
in /N/ before the substitution can be
performed. 
*** Lambda Calculus                                                   :drill:
    SCHEDULED: <2023-12-23 Sat>
    :PROPERTIES:
    :ID:       f971d4c2-998e-497a-b34c-ec9a4fdfb22d
    :DRILL_LAST_INTERVAL: 952.7344
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-14 Fri 11:19]
    :END:
Why are function pointers
not sufficient for functions
to be first class datatypes?
**** Answer:
Because a function is a first
class datatype if and only
if new instances of the function
can be created at run-time, ie
in lambda expression style.
*** Linear                                                            :drill:
    SCHEDULED: <2021-12-05 Sun>
    :PROPERTIES:
    :ID:       7c8b230d-cce3-4730-ad36-c71c6fd6e427
    :DRILL_LAST_INTERVAL: 217.7183
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-01 Sat 16:32]
    :END:
How is one sided sequent
calculus related to two
sided sequent calculus?
**** Answer:
By a duality principle
reminiscent of negation.
A two-sided sequent
/Γ⊢Δ/ is provable if and
only if the one-sided
sequence /⊢Γᵈ,Δ/ is provable
in the one-sided system, where
/d/ denotes the dualization
operator, usually /⊥/.
*** Linear                                                            :drill:
    SCHEDULED: <2022-04-03 Sun>
    :PROPERTIES:
    :ID:       be051ebc-472a-4588-9a64-2ace8cbce06c
    :DRILL_LAST_INTERVAL: 543.1288
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-07 Wed 16:15]
    :END:
What is the difference between
the two conjunctions ⊗ and &
in linear logic?
**** Answer:
Values of /A⊗B/ are strict, both
components are necessary. 
Values of /A&B/ are lazy.
*** Linear                                                            :drill:
    SCHEDULED: <2022-08-28 Sun>
    :PROPERTIES:
    :ID:       023f42b9-fe61-4afb-870d-fbc821eddb82
    :DRILL_LAST_INTERVAL: 899.3814
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-03-12 Thu 15:00]
    :END:
Why is /A&B/ in linear logic more
similar to classical conjunction
than /A⊗B/?
**** Answer:
Because there is no projection
for ⊗, ie no rules /A⊗B→A/ 
nor /A⊗B→B/.
*** Linear                                                            :drill:
    SCHEDULED: <2022-06-04 Sat>
    :PROPERTIES:
    :ID:       707c1469-4d69-4e34-87ab-c2fe6d2b9b29
    :DRILL_LAST_INTERVAL: 575.27
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.222
    :DRILL_EASE: 1.48
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-06 Fri 19:46]
    :END:
Why is linear logic suitable
for both quantum mechanics and
functional programming?
**** Answer:
Because of its distinction 
between strict and lazy 
evaluation, which occurs in
quantum mechanics in the form
of unitary evolution.
*** Linear                                                            :drill:
    SCHEDULED: <2021-12-30 Thu>
    :PROPERTIES:
    :ID:       ce923632-2b4b-49f8-8f78-b8ee22bb711f
    :DRILL_LAST_INTERVAL: 456.3866
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-30 Wed 15:27]
    :END:
What is the bang operator
good for in linear logic?
**** Answer:
It is used to consume resources,
ie evaluate a lazy expression
in functional programming or
make a measurement in a
quantum system.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2022-03-08 Tue>
    :PROPERTIES:
    :ID:       ceb681e1-8683-4582-94a7-4bc61551c52b
    :DRILL_LAST_INTERVAL: 283.8728
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.286
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2021-05-28 Fri 09:57]
    :END:
Why does the equivalence of
/!A→B/ and /A⊸B/ makes sense
from a resource point of
view?
**** Answer:
Because /!A/ describes the
consumption of resource /A/,
so the consumption of /A/
yields a /B/, which is
precisely the meaning of
/A⊸B/.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2022-01-10 Mon>
    :PROPERTIES:
    :ID:       69f23bbf-4dbd-4076-ad08-6ceb41b2e4ff
    :DRILL_LAST_INTERVAL: 254.4305
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-01 Sat 16:35]
    :END:
What is the meaning of /A⊗B⊸C/
in terms of resources?
**** Answer:
Resources /A/ and /B/ are both
consumed to obtain resource /C/.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2021-12-01 Wed>
    :PROPERTIES:
    :ID:       c5256523-0c26-40c4-88ae-2388be159f35
    :DRILL_LAST_INTERVAL: 217.7183
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-27 Tue 15:56]
    :END:
In which sense is linear logic
the logic of resource theories?
**** Answer:
Resource theories are about the
transformation and consumption
of resources. Linear logic is
the language to discuss these
things.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2021-08-21 Sat>
    :PROPERTIES:
    :ID:       f559f8ce-7734-4a64-8e9f-a8fe040675b4
    :DRILL_LAST_INTERVAL: 226.4422
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-07 Thu 11:16]
    :END:
What is the difference in
the conjunctions & and
⊗?
**** Answer:
/A&B/ is the conjunction
where only one of /A, B/
is used, /A⊗B/ is the 
conjunction where both
/A/ and /B/ are used.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2023-05-18 Thu>
    :PROPERTIES:
    :ID:       8d17b995-7f1c-485d-b3f4-66729d446b88
    :DRILL_LAST_INTERVAL: 758.1818
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-20 Tue 13:36]
    :END:
What is the meaning of
A⊸B in the resource
model of linear logic?
**** Answer:
It means that consuming
A yields B.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2021-12-27 Mon>
    :PROPERTIES:
    :ID:       9626b9a3-56ac-41a1-9f95-eb63a2e023ba
    :DRILL_LAST_INTERVAL: 418.6339
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-03 Tue 21:28]
    :END:
What seems to be the
purpose of the new connectives
⊗ and ⅋ with respect to
quantum logic?
**** Answer:
To provide logical connectives
allowing to talk about 
non-commuting observables. For
example talking about momentum
and position with the classical
connectives ∧ and ∨ makes no sense in
a quantum environment, however
using ⊗ and ⅋ it might.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2023-04-21 Fri>
    :PROPERTIES:
    :ID:       0eb08fe5-6743-4e72-8a50-fe05c4ba46d0
    :DRILL_LAST_INTERVAL: 864.9113
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-12-07 Mon 09:42]
    :END:
What is the meaning of
/A₁, A₂,…, Aₙ ⊦ B/ in 
linear logic?
**** Answer:
This means /B/ is a 
consequent of
/A₁⊗A₂⊗…⊗Aₙ/, ie.
/A₁⊗…⊗Aₙ ⊦ B/.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2021-10-30 Sat>
    :PROPERTIES:
    :ID:       f85d5687-848c-4475-bdc3-7367277727f2
    :DRILL_LAST_INTERVAL: 157.912
    :DRILL_REPEATS_SINCE_FAIL: 28
    :DRILL_TOTAL_REPEATS: 42
    :DRILL_FAILURE_COUNT: 4
    :DRILL_AVERAGE_QUALITY: 3.142
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-25 Tue 13:26]
    :END:
What is the /linear constraint/
imposed by linear logic?
**** Answer:
The constraint that proofs 
can use neither /weakening/ nor
/contraction/.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2024-11-30 Sat>
    :PROPERTIES:
    :ID:       fa0ddc86-9cc4-4d00-8f59-827489d0a404
    :DRILL_LAST_INTERVAL: 1261.2625
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-18 Fri 11:16]
    :END:
In which sense is the use of
the tensor symbol ⊗ for the
second conjunction in linear
logic appropriate?
**** Answer:
In a quantum sense because
/A⊗B/ seems to aptly describe
the behaviour of entangled
quantum systems. Measuring
/A⊗B/ allows no conclusions
regarding the respective states 
of the components /A,B/.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2022-08-31 Wed>
    :PROPERTIES:
    :ID:       329ca527-1a7e-44a2-bdf8-4cd413d047bb
    :DRILL_LAST_INTERVAL: 899.3814
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-03-15 Sun 14:02]
    :END:
Why is it impossible to
prove /A,B ⊦ A/ in linear logic?
**** Answer:
Since this means /A⊗B⊦A/, this 
would lead to /⊦A⊗B⊸A/ which is
known not to hold.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2022-01-12 Wed>
    :PROPERTIES:
    :ID:       1c0e49f3-9259-454f-bc57-070b37fe7c99
    :DRILL_LAST_INTERVAL: 722.5176
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-01-20 Mon 14:03]
    :END:
How is a proof of sequent
/A₁,…,Aₙ⊦A/ of linear logic 
translated to a combinator?
**** Answer:
As /φ:A₁⊗…⊗Aₙ→A/.
*** Logic                                                             :drill:
    SCHEDULED: <2021-08-31 Tue>
    :PROPERTIES:
    :ID:       bf71386b-5ff3-4d5e-8b14-163257e14de8
    :DRILL_LAST_INTERVAL: 266.7284
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-07 Mon 09:39]
    :END:
What does it mean
for a logic to be
undecidable?
**** Answer:
A logic is undecidable
if there is no effective
algorithm that determines
whether a formula /Φ/ of
that logic is provable
using its axioms and rules
of inference.
*** Logic                                                             :drill:
    SCHEDULED: <2022-11-22 Tue>
    :PROPERTIES:
    :ID:       abe7d999-82be-41bb-93af-5acd6d492955
    :DRILL_LAST_INTERVAL: 551.885
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-19 Wed 09:25]
    :END:
Why is it a bad idea
to introduce logic
connectives via truth
tables?
**** Answer:
Because they are not general
enough, some logics are not
about truth. Instead, logic
connectives should be 
introduced by rules of
inference.
*** Logic                                                             :drill:
    SCHEDULED: <2022-10-05 Wed>
    :PROPERTIES:
    :ID:       9ab11d84-c57a-4699-95f7-e1e56f2355fd
    :DRILL_LAST_INTERVAL: 630.4896
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.5
    :DRILL_EASE: 2.76
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-13 Wed 09:10]
    :END:
What is the difference
between a model and a
valuation in logic?
**** Answer:
A valuation is more general,
for example propositional
logics don't have models, they
only have valuations of the
propositional variables.
*** Logic                                                             :drill:
    SCHEDULED: <2023-08-01 Tue>
    :PROPERTIES:
    :ID:       123f2923-2cca-4564-a7f2-d2a5a33444b1
    :DRILL_LAST_INTERVAL: 733.5921
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-28 Wed 18:10]
    :END:
How are models for propositional
logics constructed?
**** Answer:
By taking a set /X/ and extending
a map /f/ from the propositional
variables to the powerset /P(X)/
of /X/ to the formulas by the usual
set theoretic interpretations of 
the logical connectives. 
*** Logic                                                             :drill:
    SCHEDULED: <2022-05-19 Thu>
    :PROPERTIES:
    :ID:       9ff21490-07eb-4c96-a24a-a66aa739e535
    :DRILL_LAST_INTERVAL: 444.9877
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-28 Sun 20:15]
    :END:
What is the role of truth
tables in logic?
**** Answer:
They arise as models of 
propositional logics on 
the set /X={∅}/ by naming
/0=∅/ and /1={∅}/.
*** Logic                                                             :drill:
    SCHEDULED: <2022-06-25 Sat>
    :PROPERTIES:
    :ID:       16e0560a-41d3-45d0-a991-7403e51f13dc
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:16]
    :END:
Why is even propositional
logic not necessarily about
truth?
**** Answer:
Because truth is only one
model of propositional logic,
namely the model on /X={∅}/
with interpretation of /∅/
as /false/ and /{∅}/ as
/true/.
*** Logic                                                            :drill:
    SCHEDULED: <2022-09-09 Fri>
    :PROPERTIES:
    :ID:       358e2acf-9025-4e56-915d-737c61da1342
    :DRILL_LAST_INTERVAL: 513.647
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:21]
    :END:
What is the difference between
propositional and first order
logic?
**** Answer
Propositional logic consists of
propositional variables that can
be assigned truth values, combined
by logical connectors, there are
no quantifiers. In this sense,
propositional logic is 0-th
order logic.
*** Logic                                                             :drill:
    SCHEDULED: <2022-03-01 Tue>
    :PROPERTIES:
    :ID:       5117c59c-92da-48b2-8920-1489e871914d
    :DRILL_LAST_INTERVAL: 370.986
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-23 Tue 21:45]
    :END:
What is the difference
between /⊢/ and /⊨/?
**** Answer:
/⊢/ is about syntactic derivability
of a sentence from other sentences
whereas /⊨/ is about the existence of
a model or valuation for a set of
sentences. Thus, for
sentences /K/ and sentence /X/,
/K⊢X/ means that /X/ can be derived
from /K/ by syntactical manipulations
whereas /K ⊨ X/ means that /K∪{X}/
has a model whenever /K/ has one.
*** Logic                                                             :drill:
    SCHEDULED: <2022-12-20 Tue>
    :PROPERTIES:
    :ID:       707c6751-dd64-4b71-b1cd-5db2173b5344
    :DRILL_LAST_INTERVAL: 558.2905
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-10 Thu 11:07]
    :END:
When is a logic considered
sound?
**** Answer:
Whenever syntactic derivability
/⊢/ implies semantic derivability
/⊨/.
*** Logic                                                             :drill:
    SCHEDULED: <2022-01-22 Sat>
    :PROPERTIES:
    :ID:       f8c13675-f4ad-40c0-b17e-6b0cb7242b79
    :DRILL_LAST_INTERVAL: 357.9515
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-29 Fri 14:45]
    :END:
When is a logic considered
complete?
**** Answer:
Whenever semantic derivability
/K⊨X/ of a sentence /X/ implies
syntactic derivability /K⊢X/ of
/X/ from /K/.
*** Logic                                                             :drill:
    SCHEDULED: <2022-08-17 Wed>
    :PROPERTIES:
    :ID:       ad19d05b-eb59-4fee-98f1-fd0d8cd210c8
    :DRILL_LAST_INTERVAL: 506.8288
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-28 Sun 13:20]
    :END:
Where are types used
in logic?
**** Answer:
They are needed in higher
order logics to avoid
paradoxes arising from
freely mixing sets and
elements.
*** Logic                                                             :drill:
    SCHEDULED: <2023-12-22 Fri>
    :PROPERTIES:
    :ID:       e1adb5d5-f7e2-4458-aac6-a307b3ad732a
    :DRILL_LAST_INTERVAL: 914.1416
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.42
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-21 Mon 13:36]
    :END:
In which sense are
constructive logic
and linear logic not
about truth?
**** Answer:
In the sense that in
constructive logic formulas
are considered to have
a proof or not. In linear
logic, formulas are considered
resources rather than truth
bearers.
*** Logic                                                             :drill:
    SCHEDULED: <2022-10-05 Wed>
    :PROPERTIES:
    :ID:       4316a603-18d6-4b53-8ace-fd27cfa1dd7e
    :DRILL_LAST_INTERVAL: 794.8043
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-08-01 Sat 21:36]
    :END:
What is an extensional
definition?
**** Answer:
A definition which defines
by listing everything that
falls under that definition.
*** Logic                                                             :drill:
    SCHEDULED: <2021-08-21 Sat>
    :PROPERTIES:
    :ID:       6849db16-390c-45fd-92fe-cac3ff6abd81
    :DRILL_LAST_INTERVAL: 490.3049
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.428
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-04-18 Sat 15:28]
    :END:
What is an intensional 
definition?
**** Answer:
A definition using logic
to describe necessary and
sufficient conditions for
the use of a term, for example
by listing the properties a 
noun should have.
*** Logic                                                             :drill:
    SCHEDULED: <2021-08-21 Sat>
    :PROPERTIES:
    :ID:       c9db5a0c-6a96-4fcb-88d1-75384c9b5f73
    :DRILL_LAST_INTERVAL: 234.8678
    :DRILL_REPEATS_SINCE_FAIL: 11
    :DRILL_TOTAL_REPEATS: 17
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.412
    :DRILL_EASE: 1.34
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-29 Tue 14:01]
    :END:
What is the difference
between a /Proposition/
/A/ and a judgement /⊢ A/?
**** Answer:
A proposition /A/ is an 
internal statement of a 
theory whereas the 
judgement /⊢ A/ is a 
meta-statement. For
example in first order
logic where the only
judgement is the possession
of a proof, /⊢ A/ means
"A has a proof".
*** Logic                                                             :drill:
    SCHEDULED: <2022-03-07 Mon>
    :PROPERTIES:
    :ID:       c1b224ec-841a-4b58-a5a6-5e8a204ffb4b
    :DRILL_LAST_INTERVAL: 640.5728
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.571
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-06-04 Thu 16:04]
    :END:
What is the difference 
between a /Proposition/
and a /Theorem/?
**** Answer:
/Propositions/ are statements
that can be assumed, proved,
disproved, negated etc whereas
/Theorems/ are /Propositions/
which have been proven.
*** Logic                                                             :drill:
    SCHEDULED: <2022-03-19 Sat>
    :PROPERTIES:
    :ID:       cb6fc0af-77da-4e91-98ef-90d1aed3c686
    :DRILL_LAST_INTERVAL: 516.2916
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-19 Mon 19:47]
    :END:
What is Gödelization
all about?
**** Answer:
The construction of a
theorem that has no proof
and is not false by indexing
theorems and their proofs.
*** Logic                                                             :drill:
    SCHEDULED: <2024-05-05 Sun>
    :PROPERTIES:
    :ID:       93392f52-8d6d-4eed-a127-2b057e29f77d
    :DRILL_LAST_INTERVAL: 1051.1711
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.625
    :DRILL_EASE: 2.04
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-19 Sat 11:14]
    :END:
Why the emphasis on
the fact that there 
are true theorems 
that can not be proved in
an undecidable theory?
**** Answer:
Because false Theorems can
never be proved in a 
consistent theory. Thus,
the defining feature of
undecidability is the 
existence of non-false
theorems that can't be
proved.
*** Logic                                                             :drill:
    SCHEDULED: <2021-10-30 Sat>
    :PROPERTIES:
    :ID:       dab9155b-c5f1-4313-95c0-8be841ff24f2
    :DRILL_LAST_INTERVAL: 660.8076
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.571
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-01-08 Wed 12:21]
    :END:
Why is /A ⊢ B/ not the same
as /⊢ A → B/?
**** Answer:
Because it means /B/ can be 
deduced from /A/ independently
of the logic used. The implication
arrow is tied to the logic used
and may not even be available in
a given logic. For example, in
linear logic /A ⊢ B/ means 
/⊢ A ⊸ B/, there is no /→/.
*** Logic                                                             :drill:
    SCHEDULED: <2021-11-14 Sun>
    :PROPERTIES:
    :ID:       85181995-f4ac-4ded-9e96-27da446e58a8
    :DRILL_LAST_INTERVAL: 583.0995
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.571
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-04-10 Fri 15:19]
    :END:
What is the redeeming
quality of Presburger
Arithmetic?
**** Answer:
It is decidable, even 
though the proofs may
be exponentially long.
*** Logic                                                             :drill:
    SCHEDULED: <2022-02-07 Mon>
    :PROPERTIES:
    :ID:       57be8bcf-64d7-4a76-9ec0-269249e590bc
    :DRILL_LAST_INTERVAL: 197.8861
    :DRILL_REPEATS_SINCE_FAIL: 19
    :DRILL_TOTAL_REPEATS: 24
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.291
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 19:00]
    :END:
What is a /combinator/?
**** Answer:
A name /φ:A→B/ for a proof of
sequent /A⊦B/.
*** Logic: Category                                                   :drill:
    SCHEDULED: <2021-09-12 Sun>
    :PROPERTIES:
    :ID:       ec6069e1-f4fb-4b42-be0f-013251bfad8a
    :DRILL_LAST_INTERVAL: 110.5208
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-24 Mon 20:29]
    :END:
  How are logics
  related to categories?
**** Answer:
  The well formed formulas of
  the logic become objects of
  the category and proofs become
  arrows, in the sense that
  /f:A→B/ corresponds to a proof
  of /B/ from assumption /A/,
  ie a proof of /A⊢B/.
*** Logic: Category                                                   :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       ba06b7d2-184f-49db-994d-0f4396208784
    :DRILL_LAST_INTERVAL: 222.6104
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 19:00]
    :END:
  Why is cartesianness
  required for a category modelling
  a logic?
**** Answer:
  Because of the need to model
  proofs with multiple assumptions
  of the form /A₁,…,Aₙ⊢A/.
  This is achieved by an arrow
  /f:A₁×…×Aₙ→A/ from the cartesian
  product of the /Aᵢ/ to /A/.
*** Logic: Category                                                   :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       5ce00cbe-67d3-4468-8dfa-0c633d6d1686
    :DRILL_LAST_INTERVAL: 222.6104
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:55]
    :END:
  When is cartesian
  /closedness/ required
  for a category modelling
  a logic?
**** Answer:
  Whenever implication is an
  operator of the logic. The
  implication /A→B/ is modelled
  by the object /[A,B]/ of inner
  morphisms from /A/ to /B/. The
  closedness of the category
  guarantees the existence of
  these objects.
*** Logic: Category                                                   :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       329ada53-9984-4ca8-b3c3-b0f53a7fae07
    :DRILL_LAST_INTERVAL: 222.6104
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:55]
    :END:
  How is implication
  introduction expressed
  categorically?
**** Answer:
  By
  | f:Γ×A→B      |
  |--------------|
  | Λ(f):Γ→[A,B] |
  where /[A,B]/ is the
  internal object of morphisms
  from /A/ to /B/ and /Λ/ is 
  the natural morphism
  /Λ:Hom(Γ×A,B)→Hom(Γ,[A,B])/.
*** Logic: Category                                                   :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       00254697-f19a-44fc-913f-42d3f44115c2
    :DRILL_LAST_INTERVAL: 222.6104
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:57]
    :END:
  What is the meaning of the
  natural isomorphism
  /Hom(Γ,[A,B])≃Hom(Γ×A,B)/
  in a cartesian closed
  category in functional
  terms?
**** Answer:
  This is currying vs uncurrying:
  the curried homomorphism on the
  left is uncurried to become a
  morphism with an extra variable
  on the right.
*** Logic: Category                                                   :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       f5b40b53-cbe1-42db-a2ba-41527e18d2aa
    :DRILL_LAST_INTERVAL: 222.6104
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:55]
    :END:
  What is the evaluation map
  /ev(A,B)/ in closed monoidal
  categories?
**** Answer:
  This is
  /ev(A,B):[A,B]⊗A→B/ that defines
  how to evaluate an internal
  morphism /f/ from /[A,B]/.
*** Logic: Category                                                   :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       fa58244d-4719-458c-8e5a-54031c7a972e
    :DRILL_LAST_INTERVAL: 222.6104
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:56]
    :END:
  How is Modus Ponens expressed
  in a cartesian closed category?
**** Answer:
  As
  | f:Γ→[A,B]; g:Γ→A  |
  |-------------------|
  | G(f)∘⟨id,g⟩:Γ→B |
  where /G:Hom(Γ,[A,B])→Hom(Γ×A,B)/
  is the natural morphism and
  /⟨id,g⟩/ is the injection of
  /Γ→Γ×A/ that commutes with the
  projections.
*** Logic:Constructive                                                :drill:
    SCHEDULED: <2021-08-30 Mon>
    :PROPERTIES:
    :ID:       769df23c-2fb9-4253-8bd3-0c152048d043
    :DRILL_LAST_INTERVAL: 333.822
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.833
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-30 Wed 15:25]
    :END:
What role do truth values
play in constructive logic?
**** Answer:
They are still there as
maximum and minimum elements
of the Heyting algebras
modelling constructive logic.
However, not every proposition
can be assigned a value of
true or false and must make
do with an intermediate value.
*** Logic:Constructive                                                :drill:
    SCHEDULED: <2022-07-12 Tue>
    :PROPERTIES:
    :ID:       26c0b9bb-f0a6-4b66-97a6-641eaf94a480
    :DRILL_LAST_INTERVAL: 484.5461
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2021-03-14 Sun 12:05]
    :END:
How to develop intuition
about constructive logic?
**** Answer:
By considering the open
sets in /ℝ/ as model where
propositions are mapped to
open sets, /∧,∨/ to set
intersection and union,
respectively, and /¬/ to
the interior of the set
theoretic complement.
*** Logic:Enlargements                                                :drill:
    SCHEDULED: <2021-08-18 Wed>
    :PROPERTIES:
    :ID:       d7df8ba4-1f7d-44b7-bdbc-4cf1af05c89e
    :DRILL_LAST_INTERVAL: 266.7284
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-24 Tue 21:11]
    :END:
What is a concurrent
relation?
**** Answer:
A binary relation symbol /b/ 
occuring in a set of stratified 
sentences /K/ in a
higher order language is
called concurrent if for
every finite subset /{gᵢ}/
of elements in the domain
of /b/, /K ⊢ (∃y)[⋀ᵢΦₜ(b,gᵢ,y)]/.
*** Logic:Enlargements                                                :drill:
    SCHEDULED: <2021-11-01 Mon>
    :PROPERTIES:
    :ID:       f903ca7e-5ddb-4cce-9a55-a99c15e7be80
    :DRILL_LAST_INTERVAL: 305.2258
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-31 Thu 11:02]
    :END:
What is the point of enlargements
of a set of sentences with concurrent
relations?
**** Answer:
To construct non-standard models of
/K/. If /K/ is admissible for some
model then so is /H=K∪{Φₜ(r,g,aᵣ)}/
where /g/ranges over the domain of
/b/. By the compactness theorem,
/H/ has a model if every 
/K∪{Φₜ(r,gᵢ,aᵣ)|i∈F}/ has a model 
with /F/ ranging over
finite sets of the domain of /r/.
*** Logic:Enlargements                                                :drill:
    SCHEDULED: <2022-12-20 Tue>
    :PROPERTIES:
    :ID:       03135cfd-1292-4d58-9464-86c0ef33167d
    :DRILL_LAST_INTERVAL: 558.2905
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-10 Thu 11:08]
    :END:
What does it mean for
a relation in a model
for an enlargement to
be /standard/?
**** Answer:
It means that if the
model is a model for
an enlargement of a set
of sentences /K/, the 
relation already has a
name in /K/.
*** Logic:Enlargements                                                :drill:
    SCHEDULED: <2021-10-13 Wed>
    :PROPERTIES:
    :ID:       58edbc26-ade2-42ed-9b2e-337333544263
    :DRILL_LAST_INTERVAL: 294.5012
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-22 Tue 08:46]
    :END:
What is an enlargement
in logic?
**** Answer:
This is a procedure whereby
a set of (admissible) sentences 
in a higher order logic is
extended by sentences
/Φₜ(r,g,aᵣ)/ over all /g/
in the domain of /r/, where 
/r/ is a concurrent relation 
of type /t=(t₁,t₂)/.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2023-01-11 Wed>
    :PROPERTIES:
    :ID:       2144a707-f55c-47b4-a47f-f9083cc998cb
    :DRILL_LAST_INTERVAL: 513.5592
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.375
    :DRILL_EASE: 1.76
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-15 Sun 13:56]
    :END:
Why is the language of a
logic often defined without
function symbols?
**** Answer:
This simplifies the definitions
because well-formed formulæ can
simply be built up from relation
symbols using variables, constants
and logical connectives.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2023-03-13 Mon>
    :PROPERTIES:
    :ID:       969e9536-d6b1-44cb-86a8-6c45ad77bff1
    :DRILL_LAST_INTERVAL: 648.7903
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-02 Wed 11:12]
    :END:
What is the difference between
a sentence and a proposition?
**** Answer:
A proposition is defined as a
statement that can be true or
false. A sentence is more
general and exists in logics
where thruth is not an issue,
it is a well-formed formula
with no free variables.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2022-04-06 Wed>
    :PROPERTIES:
    :ID:       b4092f06-2077-4906-abf5-afebfbed261d
    :DRILL_LAST_INTERVAL: 340.2503
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-01 Sat 16:31]
    :END:
What is the language
of Arithmetic?
**** Answer:
The first order language
generated by a symbol for
/0/, a symbol for the 
successor function and symbols
for addition and multiplication.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2022-08-13 Sat>
    :PROPERTIES:
    :ID:       2615533b-67fd-4e44-828e-6897472acddc
    :DRILL_LAST_INTERVAL: 418.04
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-21 Mon 13:34]
    :END:
What is a theory in
first order logic?
**** Answer:
A set of propositions closed
under /⊢/ that contains
all valid propositions of the
language.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2022-08-15 Mon>
    :PROPERTIES:
    :ID:       57144aa6-2575-40dc-a04f-622afa8590f9
    :DRILL_LAST_INTERVAL: 525.2852
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-08 Mon 11:49]
    :END:
What does /Γ⊢S/ mean if
/Γ=∅/?
**** Answer:
By definition, every
interpretation is a model
for the empty set. Thus,
/Γ⊢S/, also written /⊢S/
means every interpretation
is a model for /S/, that is,
/S/ is valid.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2022-07-20 Wed>
    :PROPERTIES:
    :ID:       28e1c853-8922-4878-aede-32fcd0018a03
    :DRILL_LAST_INTERVAL: 506.8288
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-28 Sun 20:12]
    :END:
What does /Γ⊢S/ for a
set of propositions /Γ/
and a proposition /S/
mean in first order
logic?
**** Answer:
It means that every
interpretation of the
underlying language which
is a model for all the 
propositions in /Γ/ is
also a model for /S/.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2023-06-07 Wed>
    :PROPERTIES:
    :ID:       3fd01b20-e9c8-48c5-8e7e-cc48c63afd31
    :DRILL_LAST_INTERVAL: 738.5994
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.28
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-29 Sat 14:52]
    :END:
What is a logical consequence
of a set /Γ/ of propositions?
**** Answer:
A proposition /S/ such that
/Γ⊢S/.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2022-07-16 Sat>
    :PROPERTIES:
    :ID:       ed3ab1e6-da19-4841-a66d-ea65bea111b1
    :DRILL_LAST_INTERVAL: 506.8288
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-24 Wed 11:07]
    :END:
What is the difference
between an interpretation
and a model?
**** Answer:
A model is a special kind of 
interpretation related to a
proposition /P/ (boolean expression)
in some language. A model
for /P/ is an interpretation
for which /P/ is true. 
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2021-11-04 Thu>
    :PROPERTIES:
    :ID:       519ebba8-fcb5-4f87-8e73-00135a3995f9
    :DRILL_LAST_INTERVAL: 331.6232
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-07 Mon 09:38]
    :END:
What does the undecidability
of first order logic have to
do with computability?
**** Answer:
This undecidability can be
proven by describing a
turing machine with input /n/
by first order predicates /Γ/ 
and the halting condition by 
a predicate /H/.
Then /Γ⊢H/ if and only if the
Turing machine halts on
input /n/. Since the halting
problem is undecidable, so
is first order logic.
*** Logic:First Order                                                 :drill:
    SCHEDULED: <2022-01-29 Sat>
    :PROPERTIES:
    :ID:       0e1cb768-031b-4f2a-b18b-796fc09cda54
    :DRILL_LAST_INTERVAL: 388.9091
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-05 Tue 09:56]
    :END:
What does it mean to
say that first order
logic is undecidable ?
**** Answer:
It means that it is
impossible to prove
the satisfiability 
of sequents /Γ⊢H/ 
in general.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-03-20 Sun>
    :PROPERTIES:
    :ID:       b04b0bf0-baa5-4544-896a-c0b64b3fbb16
    :DRILL_LAST_INTERVAL: 388.9091
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-24 Wed 11:08]
    :END:
How to turn a higher order
structure /M/ into a first
order structure /Mₗ/?
**** Answer:
By taking the individuals
and relations of /M/ as
individuals of /Mₗ/ and
adding predicates /Sₜ(x)/
for every type /t/ and
/n+1/-ary relations
/F(y,x₁,…,xₙ)/ for every
nonzero type /t∈T-{0}/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2021-12-09 Thu>
    :PROPERTIES:
    :ID:       864e7e75-03b5-499c-92b1-a77713faff70
    :DRILL_LAST_INTERVAL: 331.6232
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-11 Mon 11:03]
    :END:
What is the type transform
/λ/ of a language?
**** Answer:
Essentially a version of
the original language that
types stratified formulæ by
introducing type symbols /Θₜ/
and using them in quantifiers as
/λ((∃x)Z)=(∃x)(Θₜ(x) ∧ λ(Z))/
and /λ((∀x)Z)=(∀x)(Θₜ(x)→λ(Z))/
where /t/ is the type of /x/
in /Z/. Everything else stays
the same.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-05-01 Sun>
    :PROPERTIES:
    :ID:       9e1f2cde-9470-4b5b-a5bf-521b197a527d
    :DRILL_LAST_INTERVAL: 333.1393
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-02 Wed 11:13]
    :END:
How do interpretations /C/ on
a higher order structure /M/
induce interpretations /C'/
on its first order version /Mₗ/?
**** Answer:
For constants /c/ denoting 
individuals and relations
in /M/, /C'(c)=C(c)/.
For relation symbols,
/C'(Θₜ)=Sₜ/ and 
/C'(Φₜ)=Fₜ/ and the rest
follows inductively by
applying /C'/ to the type
transforms /λ(X)/ of the
stratified sentences /X/
in /M/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2021-10-16 Sat>
    :PROPERTIES:
    :ID:       4098bad8-abe8-4df6-9537-74f66b56487f
    :DRILL_LAST_INTERVAL: 305.2258
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-15 Tue 20:53]
    :END:
How to relate the languages
of a higher order structure
/M/ to that of its first
order version /Mₗ/?
**** Answer:
By type transforming the
language of /M/, assigning
to every stratified sentence
/X/ describing /M/ its type
transform /λ(X)/. Then in any
interpretation, /X/ holds in
/M/ if and only if /λ(X)/
holds in /Mₗ/ under the
induced representation.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2023-04-10 Mon>
    :PROPERTIES:
    :ID:       61ec4e69-c001-487e-9902-51321abb5367
    :DRILL_LAST_INTERVAL: 651.4737
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-28 Mon 11:02]
    :END:
What is in the sets /Bₜ/
of a higher order structure
/M={Bₜ}/ on individuals /A/?
**** Answer:
The elements of /Bₜ/ are
individuals of /M/ denoting
relations of type /t/ in /A/,
where different elements of
/Bₜ/ possibly denote the same
relation /a∈Aₜ/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2021-09-09 Thu>
    :PROPERTIES:
    :ID:       cb5ef649-d2bd-4603-94ef-8629147b7fb1
    :DRILL_LAST_INTERVAL: 46.2717
    :DRILL_REPEATS_SINCE_FAIL: 14
    :DRILL_TOTAL_REPEATS: 20
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-25 Sun 09:09]
    :END:
What is a higher order
structure built on a set
of individuals /A/?
**** Answer:
A set /M={Bₜ|t∈T}=B×T/ indexed
by types /t/ such that
/B₀=A₀=A/ and /Bₜ/ is an
indexed subset /Bₜ=A×I/
of /Aₜ/, ie /A⊆Aₜ/, so
that /R∈Bₜ/ coincides with
its restriction to
/B₁×⋯×Bₙ/ if /t=(t₁,…,tₙ)/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-03-19 Sat>
    :PROPERTIES:
    :ID:       2130372c-06b0-4711-9694-aed6d3433e9c
    :DRILL_LAST_INTERVAL: 388.9091
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-23 Tue 21:45]
    :END:
What is the difference
between languages describing
first order and higher order
structures?
**** Answer:
In languages describing higher
order structures the relation
symbols are replaced by typed
relation application symbols
/Φₜ/ which denote application
of a relation symbol /r/ of type
/t=(t₁,…,tₙ)/ to arguments
/a₁,…,aₙ/ as /Φₜ(r,a₁,…,aₙ)/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2021-12-30 Thu>
    :PROPERTIES:
    :ID:       d4c29050-fdde-44cf-b599-dea30f966bc9
    :DRILL_LAST_INTERVAL: 343.6504
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-20 Wed 17:59]
    :END:
What are the interpretations
of higher order formulas
/Φₜ(r,b₁,…,bₙ)/ in higher
order structures?
**** Answer:
For an interpretation
/C→M/ in which /Φₜ(r,b₁,…,bₙ)/
is admissible, it is said
to hold in /M/ if the /C(r)/,
/C(bᵢ)/ have the proper types in
/M/ and /(C(b₁),…,C(bₙ))∈C(r)/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2023-07-28 Fri>
    :PROPERTIES:
    :ID:       2d7a534c-5904-40cf-ba24-b4553df65f72
    :DRILL_LAST_INTERVAL: 733.5921
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:58]
    :END:
What does it mean for
a well formed formula
of a higher order
language to be stratified?
**** Answer:
That means that it is properly
typed, ie every variable and
constant in the formula 
appears only in places of
the same type. For example
/∀xΦ₍₀₎(x,x)/ is not stratisfied
because the variable /x/ occurs
in places of type /(0)/ and /0/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-03-17 Thu>
    :PROPERTIES:
    :ID:       b4a62df7-ac4d-4ebd-a14c-877755050c20
    :DRILL_LAST_INTERVAL: 493.079
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.167
    :DRILL_EASE: 2.56
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-09 Mon 12:26]
    :END:
Why is /∀xΦ₍₀₎(x,x)/ not
stratified?
**** Answer:
Because the variable occurs in
the first argument of /Φ₍₀₎/
thus denoting a predicate on
constants but also in the second
argument denoting a constant. Thus,
/x/ is mistyped.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-04-25 Mon>
    :PROPERTIES:
    :ID:       ce7a9c50-0396-4b30-b4ba-646e851033f1
    :DRILL_LAST_INTERVAL: 333.1393
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-27 Thu 10:10]
    :END:
When is a higher order formula
said to be admissible in a structure
/M/?
**** Answer:
An atomic formula /Φₜ(r,b₁,…,bₙ)/
is admissible under an interpretation
/C:Λ→M/ if it is stratified and
/r,b₁,̣…,bₙ∈Λ/ denote relations or
individuals in /M/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2021-10-08 Fri>
    :PROPERTIES:
    :ID:       a84ebd75-bf6c-4ea3-b502-409535b47018
    :DRILL_LAST_INTERVAL: 305.2258
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-07 Mon 09:39]
    :END:
How are types used in
higher order logic?
**** Answer:
Starting from a set /A/
whose elements are assigned
type /0/, types are assigned
inductively to relations of
/A/: If /t=(t₁,…,tₙ)/ then
/Aₜ/ is the set of subsets
of /A₁×A₂×⋯×Aₙ/, ie the set
of relations between members
of the /Aᵢ/, where /Aᵢ/
is the set of entities having
type /tᵢ/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-03-22 Tue>
    :PROPERTIES:
    :ID:       11362cd5-c9f3-4aee-acfc-834a8c7b0a45
    :DRILL_LAST_INTERVAL: 391.3706
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-24 Wed 11:08]
    :END:
What entities in higher
order logic do have type
/(t)/?
**** Answer:
These would be 1-argument
relations, ie predicates,
over entities of type /t/.
Thus, entities of type
/(t)/ are subsets of /Aₜ/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-10-30 Sun>
    :PROPERTIES:
    :ID:       567c37db-da72-409a-9e98-4dc79c644d4b
    :DRILL_LAST_INTERVAL: 558.0686
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-20 Tue 13:39]
    :END:
Do the sets /Aₜ/ indexed
by a type /t/ have a type
themselves?
**** Answer:
Yes, /Aₜ/ has type /(t)/.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-06-11 Sat>
    :PROPERTIES:
    :ID:       0ef6ea42-db41-4ec7-b71b-c74ffdc5291e
    :DRILL_LAST_INTERVAL: 472.7598
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-23 Tue 21:44]
    :END:
How are types defined
in higher order logic?
**** Answer:
Inductively by defining
/0/ to be a type and then
/τ=(τ₁,…,τₙ)/ to be a type
if all the /τᵢ/ are types.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-04-21 Thu>
    :PROPERTIES:
    :ID:       4cacd3c0-0ce5-40e8-9984-fd4a482bec4d
    :DRILL_LAST_INTERVAL: 403.0707
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-14 Sun 12:09]
    :END:
Is it always possible to
talk about the deductibility
of a sentence /X/ from a
set of sentences /K/?
**** Answer:
No, /X/ has to be defined
in /K/, that is, every
constant and relation
symbol occuring in /X/
has to occur in a
sentence of /K/. For
higher order languages,
stratification of /K∪{X}/
is needed as well.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2022-10-08 Sat>
    :PROPERTIES:
    :ID:       1651e8cf-7744-46b3-90d6-30e5fc12cfa3
    :DRILL_LAST_INTERVAL: 525.2852
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-01 Sat 16:31]
    :END:
What does /K⊢X/ for a 
set of sentences /K/ and 
a sentence /X/ mean in
logic?
**** Answer:
It means that /X/ is
deductible from /K/, which is
defined as /K∪{¬X}/ being
contradictory. For higher
order languages, /K/ and
/X/ also have to be stratified.
*** Logic:Higher Order                                                :drill:
    SCHEDULED: <2023-03-31 Fri>
    :PROPERTIES:
    :ID:       c421cb78-c8c1-4121-ad8f-1fcc7eaf5273
    :DRILL_LAST_INTERVAL: 651.4737
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-18 Fri 11:15]
    :END:
Where is higher order
logic needed?
**** Answer:
Whenever it is necessary
to reason not only about
individuals but also about
relations between individuals
and their relations etc.
*** Logic:Propositional                                               :drill:
    SCHEDULED: <2021-11-28 Sun>
    :PROPERTIES:
    :ID:       0faf7dfb-928d-4ba8-bd44-5c50e6e5b34d
    :DRILL_LAST_INTERVAL: 390.625
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-11-02 Mon 23:59]
    :END:
What is the difference
between regular propositional
logic and Hilbert's version
of it?
**** Answer:
Hilbert's propositional
calculus has no sequents
and only Modus Ponens as
rule of inference. In order
to compensate for the dearth
of rules of inference, it
has axioms that define the
logical connectives.
*** Logic:Propositional                                               :drill:
    SCHEDULED: <2022-02-11 Fri>
    :PROPERTIES:
    :ID:       92d9e45c-0003-4494-b438-81fd9cc47c3a
    :DRILL_LAST_INTERVAL: 352.2333
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-24 Wed 11:10]
    :END:
How are sequents treated
in models of propositional
logic?
**** Answer:
For a model /f:PC→P(X)/ on 
set /X/ sequents translate 
to statements about subsets,
/f(Φ₀,…,Φₙ⊢Ψ)/ becomes
/⋂ᵢf(Φᵢ)⊆f(Ψ)/ with the 
proviso that /f(⊢Ψ)/ means
/f(Ψ)=X/ and
/f(Φ₀,…,Φₙ⊢)/ means
/⋂ᵢf(Φᵢ)=∅/.
*** Logic:Propositional                                               :drill:
    SCHEDULED: <2022-02-17 Thu>
    :PROPERTIES:
    :ID:       d9b40364-4c01-474b-b37e-d61e250339dc
    :DRILL_LAST_INTERVAL: 357.9515
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-24 Wed 11:05]
    :END:
How is the logical operator
/∧/ introduced in
propositional logic?
**** Answer:
By introduction rule
| Γ⊢Φ;Γ⊢Ψ |
|---------|
| Γ⊢Φ∧Ψ   |
and elimination rules
| Γ⊢Φ∧Ψ |
|-------|
| Γ⊢Φ   |
and   
| Γ⊢Φ∧Ψ |
|-------|
| Γ⊢Ψ   |
*** Logic:Propositional                                               :drill:
    SCHEDULED: <2023-08-09 Wed>
    :PROPERTIES:
    :ID:       4eb67402-703e-4aac-9cf7-5a9ab052fd7b
    :DRILL_LAST_INTERVAL: 733.5921
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:16]
    :END:
What does it mean for
two formulas of propositional
logic to be considered the same?
**** Answer:
Formulas /Φ/ and /Ψ/ are considered
the same if sequents /Φ⊢Ψ/ and
/Ψ⊢Φ/ are provable in propositional
logic. This is often written as
/Ψ≡Φ/, but also as /Ψ=Φ/.
*** Logic:Predicate                                                   :drill:
    SCHEDULED: <2023-03-02 Thu>
    :PROPERTIES:
    :ID:       d991466e-e199-4e6e-8689-8a09f2587404
    :DRILL_LAST_INTERVAL: 586.479
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:56]
    :END:
What are the constants for
signatures /Σ=(R,F,μ)/
with /F=∅/?
**** Answer:
Under the usual interpretation
/α/ of predicate calculi in the
calculus of pure predicates,
function symbols /f/ with
/μ(f)=0/ are mapped to relation
symbols /α(f)/ with /μ(α(f)=1/.
Thus, they would be arity-1 
relations, ie predicate symbols,
that would map to singleton
sets in any algebraic interpretation.
*** Logic:Predicate                                                   :drill:
    SCHEDULED: <2022-03-25 Fri>
    :PROPERTIES:
    :ID:       2bde67a8-ae02-4d32-af50-5304665373e2
    :DRILL_LAST_INTERVAL: 381.233
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.455
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-09 Tue 12:44]
    :END:
What's the difference in the
definition of formulas for
signatures with and without
function symbols?
**** Answer:
If there are function symbols
in /Σ=(R,F,μ)/ then in addition 
to formulas based on relation 
symbols, expressions
/t₁∼t₂/ about the equality
of terms have to be added as
formulas.
*** Logic:Predicate                                                   :drill:
    SCHEDULED: <2022-07-19 Tue>
    :PROPERTIES:
    :ID:       3a5abf71-73a5-46f9-8b0c-9bd45ed712ec
    :DRILL_LAST_INTERVAL: 472.7598
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-02 Fri 18:47]
    :END:
Where do /terms/ come from
in predicate logic?
**** Answer:
They arise in signatures
/Σ=(R,F,μ)/ with function
symbols, ie /F≠∅/.
In these situations, variables
are terms and for /f∈F/ with
/μ(f)=n/ and terms /t₁,…,tₙ/,
/f(t₁,…,tₙ)/ is a term again.
*** Logic:Predicate                                                   :drill:
    SCHEDULED: <2022-07-23 Sat>
    :PROPERTIES:
    :ID:       2dd8e8eb-a10b-41de-8b18-49d0ef96d917
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-11 Tue 22:05]
    :END:
How to construct a model
for a consistent set /X/
of formulas of predicate
logic?
**** Answer:
Essentially by defining a
set /C={cₙ|n∈ℕ}/ of constants
not occuring in the language and
defining an equivalence relation
on /C/ based on a set of
sentences in the language that
are consistent with /X/ and where
existential quantification is
replaced by using the elements of
/C/ as Skolem constants. The set
of equivalence classes of /C/
under this relation then serves
as underlying set for the model.
*** Logic:Predicate                                                   :drill:
    SCHEDULED: <2021-08-27 Fri>
    :PROPERTIES:
    :ID:       09003df2-03e5-4ee2-86a5-0ec688e35e9e
    :DRILL_LAST_INTERVAL: 304.8129
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-10-26 Mon 15:42]
    :END:
What is the deal with
rules of inference 
involving sequents of
the form
/Γ,Δ⊢Σ,Θ/?
**** Answer:
These appear in Gentzen
type calculi where there
is a symmetry in the left
and right hand sides of
sequents. They allow for
rules of inference where
the formula of the conclusion 
is more complicated than that
of the hypothesis, which makes
it easier to analyse certain
properties of proofs.
*** Logic:Predicate                                                   :drill:
    SCHEDULED: <2022-06-26 Sun>
    :PROPERTIES:
    :ID:       480e69e4-18dd-440f-a233-c35dbf3c34e4
    :DRILL_LAST_INTERVAL: 336.6746
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 19:00]
    :END:
What does it mean for a
set /X/ of formulas in
predicate logic to be
consistent?
**** Answer:
It is consistent if it is
not inconsistent. It is
inconsistent if a sequent
/Γ⊢/ can be proved where
all elements of /Γ/ are
in /X/.
*** Logic: Structural                                                 :drill:
    SCHEDULED: <2022-09-15 Thu>
    :PROPERTIES:
    :ID:       7cadfcc1-934a-4875-bcbb-f9b647159c1f
    :DRILL_LAST_INTERVAL: 596.5221
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-26 Tue 18:06]
    :END:
What does it mean for a
sequent /A⊦B/ to be valid?
**** Answer:
It means that /A⊦B/ is
satisfied for every
interpretation.
*** Logic: Structural                                                 :drill:
    SCHEDULED: <2021-10-05 Tue>
    :PROPERTIES:
    :ID:       ece55a4f-f32a-41a9-a01c-be5c57a816e8
    :DRILL_LAST_INTERVAL: 376.9854
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.9
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2020-09-23 Wed 19:27]
    :END:
When is a sequent /A⊦B/
satisfied?
**** Answer:
If either some formula of
/A/ is not satisfied in an
interpretation or some formula
of /B/ is satisfied.
*** Logic: Syntax                                                     :drill:
    SCHEDULED: <2022-02-25 Fri>
    :PROPERTIES:
    :ID:       65882d7c-014f-4ccc-99a1-fb54ae6042b1
    :DRILL_LAST_INTERVAL: 311.0041
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-20 Tue 13:44]
    :END:
When are variables absolutely
needed in a logic?
**** Answer:
For quantification since
quantification is only
possible over variables.
*** Logic: Syntax                                                     :drill:
    SCHEDULED: <2021-11-06 Sat>
    :PROPERTIES:
    :ID:       44a22019-a01a-465a-8f2f-7fef53a47742
    :DRILL_LAST_INTERVAL: 237.2853
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-14 Sun 12:02]
    :END:
When is the use of a constant
symbol preferable to just
using a variable in a logic?
**** Answer:
When constructing a logic for
discussing a specific topic.
For example, when discussing
polynomial rings in one variable
it makes sense to introduce a
constant representing that variable
in a logic destined to discuss such
rings. This would be more specific
than using a logic that has all rings
as possible structures.
*** Logic: Syntax                                                     :drill:
    SCHEDULED: <2022-05-22 Sun>
    :PROPERTIES:
    :ID:       19053411-55da-4e36-91d7-d117c8890a40
    :DRILL_LAST_INTERVAL: 301.8023
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:54]
    :END:
Why the reluctance to
add constant symbols
to a logic?
**** Answer:
Because it restricts the
universe of discourse. Only
structures providing
a meaning for these symbols
are allowable structures for
the logic.
*** Logic: Types                                                      :drill:
    SCHEDULED: <2022-06-09 Thu>
    :PROPERTIES:
    :ID:       1ecf72c2-8645-45b0-87f2-976fce6a1041
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-28 Sun 13:16]
    :END:
How do types on higher order
structures induce types on
constants and variables of
higher order languages?
**** Answer:
Variables and constants in
stratified sentences of a
higher order language always
occur in places of the same
type, ie in the relations /Φₜ/.
This type is assigned to the
constant or variable, with type
/0/ being the default for
constants and variables not in
any considered sentence.
*** Logic: Types                                                      :drill:
    SCHEDULED: <2022-06-09 Thu>
    :PROPERTIES:
    :ID:       9b27d56a-7c6b-4e83-94f7-2475457b431e
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-28 Sun 13:18]
    :END:
How do types in logic
take care of Russel's
paradox?
**** Answer:
In Russel's paradox the
set /y/ of all sets not
containing themselves is
defined as /y={x|x∉x}/.
This would correspond to a
formula /∀ x (E(x,y)↔~E(x,x))/
which is not stratified.
Hence the predicate /P(x)=x∉x/
described by this formula
has no type so it cannot be
used to define a set. 
*** Models                                                            :drill:
    SCHEDULED: <2022-05-31 Tue>
    :PROPERTIES:
    :ID:       dbbb5d07-0459-4244-8641-7e62ad453f38
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-19 Fri 18:36]
    :END:
How is the ultrafilter
serving as a model for
sentences /K/ as per the
compactness theorem 
constructed from the
index set?
**** Answer:
For /i∈I/ let 
/dᵢ={j|i⊆j}/ and
define /D₀={dᵢ|i∈I}/.
This is a set of subsets
of /I/ with the finite 
intersection property and 
not containing the empty set, 
thus it can be extended to 
an ultrafilter by Zorn's lemma. 
Choose one of them.
*** Models                                                            :drill:
    SCHEDULED: <2023-03-31 Fri>
    :PROPERTIES:
    :ID:       9d99f74f-f9e6-40c5-b848-62f248ee478d
    :DRILL_LAST_INTERVAL: 651.4737
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-18 Fri 11:16]
    :END:
How is the index set
chosen when constructing
a model for a set /K/ of 
sentences by means of
the compactness theorem?
**** Answer:
The index set /I/ is the
set of all finite subsets
of /K/.
*** Resources                                                         :drill:
    SCHEDULED: <2022-02-27 Sun>
    :PROPERTIES:
    :ID:       f5f64407-d972-4301-8bd9-8620148c226e
    :DRILL_LAST_INTERVAL: 273.9372
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-29 Sat 14:52]
    :END:
What can be done with
resources in a resource
theory?
**** Answer:
They can be transformed using
the free operators of the
theory or consumed. They can
not be created with the free
operators of the theory.
*** Resources                                                         :drill:
    SCHEDULED: <2022-02-27 Sun>
    :PROPERTIES:
    :ID:       b48a2017-bc06-44b2-9b45-dd85c5efd18f
    :DRILL_LAST_INTERVAL: 273.9372
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-29 Sat 14:53]
    :END:
What is a resource in
a resource theory?
**** Answer:
That is an object that
can not be obtained by
applying the rules
(free operators) of the
theory.
*** Resources: Quantum                                                :drill:
    SCHEDULED: <2021-09-27 Mon>
    :PROPERTIES:
    :ID:       2ea2bded-78eb-4ae3-af93-15282ac14a36
    :DRILL_LAST_INTERVAL: 172.744
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-07 Wed 10:01]
    :END:
  What are the
  resources in a
  quantum resource theory?
**** Answer:
  The quantum states that
  can not be obtained by
  a free operation, ie
  an allowable physical
  process.
*** Resources: Quantum                                                :drill:
    SCHEDULED: <2021-11-02 Tue>
    :PROPERTIES:
    :ID:       2007551f-74ca-4180-8cc0-5e40d6cbc6f5
    :DRILL_LAST_INTERVAL: 202.6908
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:18]
    :END:
  Why is entanglement
  often considered a
  resource in quantum
  resource theories?
**** Answer:
  In theories describing
  communication via entangled
  particle pairs, the parties at
  either end only have control
  over the particle at their
  location, so they can't
  create entanglement.
*** Resources: Quantum                                                :drill:
    SCHEDULED: <2021-09-27 Mon>
    :PROPERTIES:
    :ID:       4e31f6a9-e2e4-4089-ac7e-035c68ceb312
    :DRILL_LAST_INTERVAL: 172.744
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-07 Wed 10:00]
    :END:
  What is the
  significance of
  quantum channels
  in resource
  theories?
**** Answer:
  The operations in a
  quantum resource theory
  are quantum channels. The
  free operations are a
  subset thereof.
*** Resources: Quantum                                                :drill:
    SCHEDULED: <2022-03-31 Thu>
    :PROPERTIES:
    :ID:       24a65e1c-d332-4506-ae61-78912ba50716
    :DRILL_LAST_INTERVAL: 227.5646
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-15 Sun 13:55]
    :END:
  What are the free
  operations of a
  quantum resource theory?
**** Answer:
  The physical processes that
  are allowed to prepare a
  quantum state.
*** System F                                                          :drill:
    SCHEDULED: <2021-09-28 Tue>
    :PROPERTIES:
    :ID:       fe468ff3-b8f5-44c2-8fdc-2fd0411d0980
    :DRILL_LAST_INTERVAL: 594.2063
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-02-12 Wed 13:26]
    :END:
What does something
like ~Λt.λx:t.x~ mean?
**** Answer:
The ~Λ~ is a type level
lambda, in this case a
function that takes a type
as argument and returns a
function ~t → t~, ie the
identity.
*** System F                                                          :drill:
    SCHEDULED: <2021-09-28 Tue>
    :PROPERTIES:
    :ID:       8fc7702f-6082-4871-9f3f-52905332fe7e
    :DRILL_LAST_INTERVAL: 594.2063
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-02-12 Wed 13:24]
    :END:
How to use an expression
like ~Λt.λx:t.x~?
**** Answer:
As, for example
~(Λt.λx:t.x) Int 5 =~
~(λx:Int.x) 5 = 5~,
ie with a type argument
and an argument of that
type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-10-23 Sat>
    :PROPERTIES:
    :ID:       669a24d0-2c49-41da-a238-f4a3c2b0f434
    :DRILL_LAST_INTERVAL: 228.9793
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-08 Mon 11:43]
    :END:
Why shoud the identity
function populate the
datatype ~Void→Void~?
**** Answer:
Because of the possibility
that it composes with a function
returning ~Void~. No matter
what that function does, the
identity should pass the result
on.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-01-04 Tue>
    :PROPERTIES:
    :ID:       c107b2be-d44a-4237-8117-777c4c733dba
    :DRILL_LAST_INTERVAL: 281.7116
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-28 Sun 13:15]
    :END:
What does a return type
of /Void/ indicate for
a function?
**** Answer:
The possibility that the
function doesn't halt or
bails out with an exception.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-09-24 Sat>
    :PROPERTIES:
    :ID:       1b9974b5-533f-47f6-a7d5-8069e4592652
    :DRILL_LAST_INTERVAL: 596.5221
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-04 Thu 13:45]
    :END:
Why is /Unit/ vastly
different from /Void/
from a logical point
of view?
**** Answer:
Because /a→Void/ is the
negation of /a/ whereas
/a→Unit/ is populated
by /const unit/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-07-14 Thu>
    :PROPERTIES:
    :ID:       d4015f4a-4299-4369-8b06-f15a211358ce
    :DRILL_LAST_INTERVAL: 554.8539
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-05 Tue 09:52]
    :END:
Why is /a→Void/ the
negation of /a/?
**** Answer:
Because if /a/ is
populated there is
no function /a→Void/.
(Except functions that
never return, /undefined/)
If /a/ is not populated
(not necessarily, could
be undefined or b→Void,
if /a/ is false then it
is Void)
then /a/ is /Void/ but
/Void→Void/ is populated
by the identity function
so /a→Void/ is populated.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-08-23 Tue>
    :PROPERTIES:
    :ID:       4d394956-2e80-4a0a-a535-36b4fd122a65
    :DRILL_LAST_INTERVAL: 573.2409
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-27 Wed 21:32]
    :END:
Why is the recursion
principle for a type
/W/ also called the 
non-dependent eliminator?
**** Answer:
Because it is about constructing
functions out of type /W/, which
are called eliminators. The
/non-dependent/ qualifier serves to
distinguish it from induction
principles, which are about 
constructing dependent functions
out of a type and therefore more
general eliminators.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-11-20 Sun>
    :PROPERTIES:
    :ID:       bdf42f31-2408-41d1-8d54-d54b52c1d2fb
    :DRILL_LAST_INTERVAL: 484.3468
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:55]
    :END:
How is the induction
principle of a type
/W/ related to its
recursion principle?
**** Answer:
The induction principle
is about the construction
of dependent functions /f/ 
from constructors where
/f:∏(w:W),P(w)/ for a
/P:W→𝒰/. The recursion
principle is the special case
where /P/ is constant.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-11-26 Sat>
    :PROPERTIES:
    :ID:       e2baf4f2-7cea-4a63-80ed-813ff1d554d3
    :DRILL_LAST_INTERVAL: 489.5213
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:55]
    :END:
What is the recursion
principle for a type
/W/ all about?
**** Answer:
It means that in order
to define any function
/f:W→P/ it is enough to
consider the case where
/w:W/ arises from one of
the constructors. This
makes it possible to
call /f/ recursively on
the inputs to that 
constructor.

*** Type Theory                                                       :drill:
    SCHEDULED: <2021-08-16 Mon>
    :PROPERTIES:
    :ID:       888ceb62-0e29-493d-9619-53d921f3e250
    :DRILL_LAST_INTERVAL: 394.608
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-17 Fri 16:54]
    :END:
Why are inductive types
/I/ popular?
**** Answer:
Because every statement
/E:I→𝒰/ about the type 
can be proved by proving
it for its constructors /Cᵢ/
using an induction principle
/ind(I,E,{eᵢ})/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-01-25 Tue>
    :PROPERTIES:
    :ID:       5936e13c-af2f-424b-a404-58ca712958d4
    :DRILL_LAST_INTERVAL: 514.1718
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-08-29 Sat 16:38]
    :END:
What is an inductive
type?
**** Answer:
A type freely generated
by a finite number of 
constructors, ie
every element of the
type can be obtained by
applying these constructors
repeatedly in a nested
fashion. 
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-11-26 Sat>
    :PROPERTIES:
    :ID:       76f78ccd-a000-4f1a-9c0b-a8f7e47acb32
    :DRILL_LAST_INTERVAL: 489.5213
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:58]
    :END:
What is an /induction/
principle /ind(T,E,{eᵢ})/
for a type /T/?
**** Answer:
A dependent function
/∏(t:T),E(t)/ giving a
proof /eᵢ:E(Cᵢ)/ of
statement E:T→𝒰 for
every constructor /Cᵢ/
of T, ie
/ind(T,E,{eᵢ},Cₖ)=eₖ(…)/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-04-20 Wed>
    :PROPERTIES:
    :ID:       d4949e57-98c3-4f1b-badd-4ab83523069e
    :DRILL_LAST_INTERVAL: 521.7703
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-14 Sat 16:36]
    :END:
What is the point of Homotopy
Type Theory?
**** Answer:
It aims to be an intensional
type theory that avoids the
usual difficulties in representing
and handling common mathematical 
objects inherent in such theories.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-04-20 Wed>
    :PROPERTIES:
    :ID:       45a17d44-54b1-4d8e-abf7-054297a79573
    :DRILL_LAST_INTERVAL: 521.7703
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-14 Sat 16:34]
    :END:
How does Homotopy Type Theory
avoid the difficulties in
representing common mathematical
objects inherent in an intensional
type theory?
**** Answer:
By allowing higher order
constructors constructing
elements of equality datatypes
and equality datatypes of
equality datatypes ad
infinitum.
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-12-30 Thu>
    :PROPERTIES:
    :ID:       824bb053-8130-47ed-a712-c09abef4c409
    :DRILL_LAST_INTERVAL: 277.0391
    :DRILL_REPEATS_SINCE_FAIL: 12
    :DRILL_TOTAL_REPEATS: 14
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.26
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-28 Sun 13:14]
    :END:
Why is an intensional type
theory desirable as underpinning
for a programming language?
**** Answer:
Because type checking is decidable
in an intensional theory as
definitional and propositional
equality are distinguished.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-03-30 Wed>
    :PROPERTIES:
    :ID:       4dad8346-9d81-495d-8d70-8c85d3e3cb64
    :DRILL_LAST_INTERVAL: 287.5001
    :DRILL_REPEATS_SINCE_FAIL: 11
    :DRILL_TOTAL_REPEATS: 14
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.072
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-15 Tue 11:09]
    :END:
What is the determining
feature of /extensional/
type theory?
**** Answer:
The fact that there is no
distinction between definitional
and propositional equality, 
presumably due to the fact that
entities are defined extensionally,
ie. by listing all inhabitants of
a type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-02-28 Mon>
    :PROPERTIES:
    :ID:       283f3d0e-c06f-458d-8c8a-62e81be59bcd
    :DRILL_LAST_INTERVAL: 624.8803
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.571
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-06-13 Sat 15:34]
    :END:
What is the problem
with /intensional/ type
theory?
**** Answer:
The representation of
standard mathematical
concepts, such as numbers
is more cumbersome than
in /extensional/ type theory
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-10-19 Tue>
    :PROPERTIES:
    :ID:       27ee6471-e73d-45e1-8bc7-2dd01a959da2
    :DRILL_LAST_INTERVAL: 440.0124
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-08-05 Wed 16:36]
    :END:
Why is a dependent function
type for /A:𝒰/ and /B:A→𝒰/ 
written as a product
/∏(a:A),B(a)/?
**** Answer:
Because of its similarity
to a cartesian product where
the sequences consist of
function values indexed by
the corresponding arguments.
*** Type Theory                                                       :drill:
    SCHEDULED: <2023-03-11 Sat>
    :PROPERTIES:
    :ID:       a87dc826-c122-4c02-a398-323e88e4fbbd
    :DRILL_LAST_INTERVAL: 594.996
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 19:00]
    :END:
Why is a dependent pair
type for /A:𝒰/ and
/B:A→𝒰/ written as a sum
/∑(x:A),B(x)/?
**** Answer:
Because of its similarity
with disjoiunt unions as
it consists of pairs
/(a,b)/ with /a:A/ and /b:B(a)/,
where /a/ can be interpreted
as an index and /b/ as value 
correponding to index /a/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2023-11-16 Thu>
    :PROPERTIES:
    :ID:       59c45430-c18b-44c9-8634-97330af6f80b
    :DRILL_LAST_INTERVAL: 844.9851
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:58]
    :END:
What's the point of defining
the recursor
/rec(A×B,C) g (a,b):≡g a b/
for product type /A×B/?
**** Answer:
It allows to define every
function /f:A×B→C/ via currying
/f:≡rec(A×B,C) g/ with a
/g:A→B→C/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       fa29f301-2d77-4313-b38a-af89653769cc
    :DRILL_LAST_INTERVAL: 503.7348
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-16 Fri 19:53]
    :END:
How to express a property
of natural numbers type
theoretically?
**** Answer:
As a family of types
/P:ℕ→𝒰/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-11-02 Tue>
    :PROPERTIES:
    :ID:       628fe854-e0ef-4657-853c-b9dc7d05f346
    :DRILL_LAST_INTERVAL: 162.4283
    :DRILL_REPEATS_SINCE_FAIL: 15
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.054
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-24 Mon 20:30]
    :END:
What are the elimination
rules for the product
type /A×B/?
**** Answer:
Functions /f:A×B→C/
out of the product 
type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-03-25 Fri>
    :PROPERTIES:
    :ID:       747e5dee-673e-42e9-9ade-c4d02b68a49e
    :DRILL_LAST_INTERVAL: 222.2877
    :DRILL_REPEATS_SINCE_FAIL: 13
    :DRILL_TOTAL_REPEATS: 15
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.933
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-15 Sun 13:55]
    :END:
What are the computation
rules of the product type
/A×B/?
**** Answer:
That /f:A×B→C/
is judgementally equal
to a function application
of /g:A→B→C/ via
/f((a,b)):≡ g(a)(b)./
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-03-02 Wed>
    :PROPERTIES:
    :ID:       6063aab4-098a-460a-a2c5-b80171f99513
    :DRILL_LAST_INTERVAL: 199.0373
    :DRILL_REPEATS_SINCE_FAIL: 12
    :DRILL_TOTAL_REPEATS: 18
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.278
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-15 Sun 13:56]
    :END:
What are the introduction
rules for a product type
/A×B/?
**** Answer:
Elements of /A×B/ are constructed
from /a:A/ and /b:B/ as tuples
/(a,b):A×B/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2024-05-29 Wed>
    :PROPERTIES:
    :ID:       9aa3075b-6b04-44f9-903a-8b4eb95ee655
    :DRILL_LAST_INTERVAL: 1072.18
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.626
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-22 Tue 08:20]
    :END:
What are the constructors
of function types?
**** Answer:
Lambda expressions
/λx.Φ/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-11-05 Sat>
    :PROPERTIES:
    :ID:       f9817a42-8b33-4c24-aa80-181f63bacb1c
    :DRILL_LAST_INTERVAL: 494.7159
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-28 Mon 11:02]
    :END:
What is a /computation rule/
for a type?
**** Answer:
It expresses how an
eliminator acts on a
constructor.
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-11-20 Sat>
    :PROPERTIES:
    :ID:       5c576202-e425-4fb2-a036-b4ef5349f747
    :DRILL_LAST_INTERVAL: 159.4825
    :DRILL_REPEATS_SINCE_FAIL: 16
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.947
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-14 Mon 12:34]
    :END:
What is the computation 
rule for a function type?
**** Answer:
That /(λx.Φ)(a)/ is judgementally
equal to substitution of /a/ for
/x/ in /Φ/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-12-18 Sat>
    :PROPERTIES:
    :ID:       e3971e4b-8952-4776-bc44-fe98cc2e9769
    :DRILL_LAST_INTERVAL: 494.5274
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-08-10 Mon 16:41]
    :END:
What is an /inductive/
type?
**** Answer:
An inductive type is
a type exhaustively
generated by its 
constructors, there are
no elements beyond those
constructed by the 
constructors.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-03-04 Fri>
    :PROPERTIES:
    :ID:       960e1e54-a7bf-4996-84b5-cbbb178a8e35
    :DRILL_LAST_INTERVAL: 503.7348
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-16 Fri 19:56]
    :END:
What is a computation
rule for a type?
**** Answer:
A rule that describes how 
an eliminator acts on a
constructor.
*** Type Theory                                                       :drill:
    SCHEDULED: <2024-06-02 Sun>
    :PROPERTIES:
    :ID:       f91ca1ea-7334-49ea-8ef4-36c2b9193db8
    :DRILL_LAST_INTERVAL: 1044.0551
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:54]
    :END:
What are /introduction/
rules for a type?
**** Answer:
These are the constructors
of a type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2023-04-12 Wed>
    :PROPERTIES:
    :ID:       27ccbe6d-3929-49de-9335-f64a8e5258af
    :DRILL_LAST_INTERVAL: 622.5662
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.222
    :DRILL_EASE: 1.48
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-28 Wed 18:12]
    :END:
What are the eliminators
of a type?
**** Answer:
These are rules on how to
use the elements of a type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-04-22 Fri>
    :PROPERTIES:
    :ID:       46b0c6b6-592b-4201-aa85-ea4f6416a7fb
    :DRILL_LAST_INTERVAL: 272.4757
    :DRILL_REPEATS_SINCE_FAIL: 12
    :DRILL_TOTAL_REPEATS: 14
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:56]
    :END:
What are the eliminators of
the function type?
**** Answer:
The function type only has
one eliminator,
/function application/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-11-07 Mon>
    :PROPERTIES:
    :ID:       9c9c5c2f-9777-46c6-9066-5f1e7582f484
    :DRILL_LAST_INTERVAL: 494.7159
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-30 Wed 10:50]
    :END:
What is a dependent function
type?
**** Answer:
A type constructed from a type
/A:𝒰/ and a type family
/B:A→𝒰/ as /∏(x:A),B(x)/, interpreted
as functions whose return type
/B(x)/ depends on its argument 
type /x/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2023-03-30 Thu>
    :PROPERTIES:
    :ID:       7ff87fff-3fca-45ac-9c07-b4772c148665
    :DRILL_LAST_INTERVAL: 610.064
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-28 Wed 18:12]
    :END:
How is the dependent function
type /∏(x:A),B(x):𝒰/ related to
ordinary function types?
**** Answer:
If /B(x)≡B/ is the constant
family then
/∏(x:A),B(x)≡(A→B)/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-11-18 Thu>
    :PROPERTIES:
    :ID:       4f522476-5489-4ecf-b30d-f450793a8ca4
    :DRILL_LAST_INTERVAL: 105.4727
    :DRILL_REPEATS_SINCE_FAIL: 19
    :DRILL_TOTAL_REPEATS: 25
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.079
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:18]
    :END:
How are predicates
constructed in type theory?
**** Answer:
A predicate over a type
/A/ is a type family
/P: A→𝒰/ assigning to every
/a:A/ a type /P(a)/ corresponding
to the proposition that /P/ holds
for /a/.

*** Type Theory                                                       :drill:
    SCHEDULED: <2021-10-25 Mon>
    :PROPERTIES:
    :ID:       ad6bf50d-6fd3-4d7a-a1c1-9f636cfd6d4b
    :DRILL_LAST_INTERVAL: 548.9539
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-04-24 Fri 14:34]
    :END:
Why can the *0* type not
be populated in a
consistent type theory?
**** Answer:
Because its negation
¬ *0*: *0* → *0* is inhabited
by the identity function.
*** Type Theory                                                       :drill:
    SCHEDULED: <2023-02-07 Tue>
    :PROPERTIES:
    :ID:       e9f9f77c-cebd-4e3b-8f87-014f40f426b7
    :DRILL_LAST_INTERVAL: 588.7068
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-28 Mon 11:01]
    :END:
In which sense differs
type theory from first
order logic as deductive 
system?
**** Answer:
In contrast to first
order logic, type theory
has two judgements
 - /a:A/ "a is an object of type A"
 - /a≡b:A/ "a and b are definitionally
          equal objects of type A"
as compared to the one of
first order logic
/⊢ A/ "A has a proof".
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-09-04 Sat>
    :PROPERTIES:
    :ID:       492e384d-9355-491d-812c-b50a75dac1ea
    :DRILL_LAST_INTERVAL: 154.9685
    :DRILL_REPEATS_SINCE_FAIL: 16
    :DRILL_TOTAL_REPEATS: 20
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.099
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-02 Fri 18:46]
    :END:
What is /judgemental/
equality?
**** Answer:
This is about equality
of terms of the same
type by definition.
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-08-29 Sun>
    :PROPERTIES:
    :ID:       261b5fdc-ba59-462a-80b7-229f04edcd49
    :DRILL_LAST_INTERVAL: 178.3879
    :DRILL_REPEATS_SINCE_FAIL: 13
    :DRILL_TOTAL_REPEATS: 17
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.059
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-04 Thu 10:56]
    :END:
How is (internal) equality 
handled with types?
**** Answer:
For terms /a,b:A/ a type
/a=b/ exists. If there is
a term /t:a=b/ then terms
/a,b/ are said to be 
/propositionally/ equal.
*** Type Theory                                                       :drill:
    SCHEDULED: <2021-10-24 Sun>
    :PROPERTIES:
    :ID:       f3a4772d-0985-45b2-a83b-cf090019441b
    :DRILL_LAST_INTERVAL: 449.758
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-31 Fri 16:51]
    :END:
What is a /witness/?
**** Answer:
A term /a/ of type /A/
is called a witness
of type /A/ because
/a:A/ has meanings
"a has type A" and
"A has a proof", 
which is witnessed 
by term /a/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-07-25 Mon>
    :PROPERTIES:
    :ID:       62377aa7-2e68-4d86-8796-4d41f0f507c0
    :DRILL_LAST_INTERVAL: 573.2409
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-29 Tue 14:08]
    :END:
In which sense is the
interpretation of /a:A/
as /a∈A/ misleading?
**** Answer:
In the sense that
/a:A/ is the judgement
"A has a proof"
whereas /a∈A/ is a
proposition.
*** Type Theory                                                       :drill:
    SCHEDULED: <2022-08-09 Tue>
    :PROPERTIES:
    :ID:       a63bdac4-a23a-4586-a90b-b436485f1b77
    :DRILL_LAST_INTERVAL: 587.7579
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-12-29 Tue 14:00]
    :END:
In which sense is type
theory simpler than 
set theory?
**** Answer:
Set theory is not only
about sets but about the
interplay of sets and
propositions of first-order
logic. Type theory only has
/types/ and Propositions are
identified with particular 
types.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-12-23 Thu>
    :PROPERTIES:
    :ID:       8a817f89-30e2-49ee-8fae-d3dad4d3bbc9
    :DRILL_LAST_INTERVAL: 219.8803
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-17 Mon 22:24]
    :END:
  In which way are
  intuitionist and
  experimental logic
  similar?
**** Answer:
  Obtaining an experimental
  outcome or measurement is
  like obtaining a proof.
*** Experiments                                                       :drill:
    SCHEDULED: <2021-12-23 Thu>
    :PROPERTIES:
    :ID:       b3ced9e5-e5ed-4c2c-bd26-9d006011b067
    :DRILL_LAST_INTERVAL: 219.8803
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-17 Mon 22:24]
    :END:
  What is the difference
  between experimental and
  intuitionist logic?
**** Answer:
  The fact that in experimental
  logic the outcome can change,
  ie. in quantum mechanic. This
  is like forgetting a proof in
  intuitionist logic, which
  never happens there.
** Optimisation
*** Constraints                                                       :drill:
    SCHEDULED: <2022-04-17 Sun>
    :PROPERTIES:
    :ID:       6a6c0790-90b5-4268-b5ff-6ea32cdc1fe9
    :DRILL_LAST_INTERVAL: 612.9253
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-08-12 Wed 15:19]
    :END:
What is the geometry
of /Ax ≤ b, /x≥0/?
**** Answer:
A polyhedron in the 
surface /Ax≤b/.
*** Constraints                                                       :drill:
    SCHEDULED: <2022-03-06 Sun>
    :PROPERTIES:
    :ID:       943df75a-b505-4633-af31-c3352ba3a42f
    :DRILL_LAST_INTERVAL: 582.9511
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-31 Fri 16:54]
    :END:
What is a degenerate
corner of /Ax≤b/?
**** Answer:
A corner with too many
zeros. Normally, for
/x=(x₁,…,xₙ)/ and /A/ an
/n×m/ matrix, typical 
corners have /n-m/ zeros.
Degenerate corners have
more than /n-m/ zero
coordinates.
*** Constraints                                                       :drill:
    SCHEDULED: <2022-03-06 Sun>
    :PROPERTIES:
    :ID:       06439323-8be9-41e3-b0de-f77ef7c04b86
    :DRILL_LAST_INTERVAL: 582.9511
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-07-31 Fri 16:56]
    :END:
How does a linear
constraint /Ax=b/ affect
a gradient descent?
**** Answer:
For consecutive points
/xₖ/, xₖ₊₁ satisfying /Ax=b/,
the difference /Δx/ must
lie in the kernel of /A/. Thus
the steepest feasible descent
is along the projection of
the negative gradient into
the kernel of /A/ and not along
that gradient.
*** Iterations                                                        :drill:
    SCHEDULED: <2021-09-27 Mon>
    :PROPERTIES:
    :ID:       d4d95960-5441-439d-9602-0994d77448f7
    :DRILL_LAST_INTERVAL: 367.5085
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-24 Thu 21:33]
    :END:
Why is the reduced cost
/r=c-Aᵀ(AD²Aᵀ)⁻¹AD²c/ suitable
for finding directions in a
linear programming iteration?
**** Answer:
Because /r ∈/ Ker /AD²/, thus
/p=-D²r/ ∈ Ker /A/ is a suitable
direction in a problem with
equality constraints. 
*** Iterations                                                        :drill:
    SCHEDULED: <2022-01-17 Mon>
    :PROPERTIES:
    :ID:       5517fdae-f13f-4fc3-b0fe-25601bf877be
    :DRILL_LAST_INTERVAL: 440.0124
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-03 Tue 21:23]
    :END:
What is the reduced cost
/r=c-Aᵀ(AD²Aᵀ)⁻¹AD²c/ used
for in linear programming?
**** Answer:
It is used to find a direction
for the next iteration, in the
case of the simplex algorithm
constructing a direction from
a component /i/ with /rᵢ<0/, in
interior point methods using a
linear transformation of /r/. 
*** Iterations                                                        :drill:
    SCHEDULED: <2021-09-27 Mon>
    :PROPERTIES:
    :ID:       c7aa317f-0e8b-450b-ae25-66df5cdbc249
    :DRILL_LAST_INTERVAL: 367.5085
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-24 Thu 21:34]
    :END:
Where does the expression
/Aᵀ(AD²Aᵀ)⁻¹AD²c/ in iterative
methods for linear programs
come from?
**** Answer:
From least squares minimizing 
the function /‖D(c-Aᵀw)‖/ 
with respect to /w/. Then
/r=c-/Aᵀ(AD²Aᵀ)⁻¹AD²c/ 
is the vector of residuals
from the weighted least squares
solution to the problem of
minimizing /‖D(c-Aᵀw)‖/.
*** Simplex Method                                                    :drill:
    SCHEDULED: <2021-09-27 Mon>
    :PROPERTIES:
    :ID:       166e501b-c3d9-4588-98a8-db462bd1993c
    :DRILL_LAST_INTERVAL: 367.5085
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-24 Thu 21:34]
    :END:
How are leaving and
entering variables
related?
**** Answer:
For entering variable
/xᵢ/, the new direction
is determined as
/p=eᵢ-(B⁻¹Aeᵢ|0)ᵀ/ where
/A=(B|N)/ with /N/ representing
the zero variables of the 
current vertex /x/. The new
vertex is calculated as
/x+μ⁻¹p/ where /μ=max{pᵢ/xᵢ|xᵢ>0}/.
This calculation determines
the leaving variable.
*** Simplex Method                                                    :drill:
    SCHEDULED: <2022-03-28 Mon>
    :PROPERTIES:
    :ID:       70cc6e5b-9828-4332-ae15-8338465f8780
    :DRILL_LAST_INTERVAL: 604.179
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-08-01 Sat 21:37]
    :END:
How is the entering variable
determined at a simplex 
iteration?
**** Answer:
An index /i/ needs to be chosen
for which the reduced cost
function /r/ has a strictly 
negative value. If there are
several such indices, one of
the choice rules for entering
variables has to be invoked, 
such as the /Devex Algorithm/.

*** Simplex Method                                                    :drill:
    SCHEDULED: <2021-09-26 Sun>
    :PROPERTIES:
    :ID:       776858ba-96a0-485e-84bd-8b9d366b556e
    :DRILL_LAST_INTERVAL: 500.5509
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.715
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-05-13 Wed 16:27]
    :END:
What is a leaving
variable?
**** Answer:
A variable /xᵢ/ of the 
current vertex
/x=(x₁,…,xₙ)/ that becomes
zero in the next iteration.
*** Simplex Method                                                    :drill:
    SCHEDULED: <2023-11-03 Fri>
    :PROPERTIES:
    :ID:       08c7e9aa-175a-4c2f-8f50-df303e3f9818
    :DRILL_LAST_INTERVAL: 830.5246
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.375
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-25 Sun 09:08]
    :END:
What is an entering
variable?
**** Answer:
A variable /xᵢ/ of the 
current vertex 
/x=(x₁,…,xₙ)/ that becomes
nonzero when going
to the next vertex. Note
that vertices have /n-m/
zero coordinates where /m/
is the number of constraints.
*** Simplex Method                                                    :drill:
    SCHEDULED: <2022-07-08 Fri>
    :PROPERTIES:
    :ID:       78448f1a-ba49-4e63-88e2-10801611163c
    :DRILL_LAST_INTERVAL: 521.7703
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-01 Mon 16:01]
    :END:
In which sense is the 
simplex method deficient
in choosing a direction
for its next iteration?
**** Answer:
Instead of using the
whole reduced cost vector
r=(I-Aᵀ(AD²Aᵀ)⁻¹AD²)c to
construct an element of
Ker A, it only uses an 
index /i/ with /rᵢ<0/ to construct
/p=eᵢ-(B⁻¹Aeᵢ|0)ᵀ/ where 
/A=(B|N)/ with /B/ representing
the non-vanishing components
of the current vertex
/x=(b|0)/.
** Probability
*** Bayes                                                             :drill:
    SCHEDULED: <2021-09-06 Mon>
    :PROPERTIES:
    :ID:       c1526be5-29f0-4d66-b2a6-03d20f7a3a41
    :DRILL_LAST_INTERVAL: 304.1427
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-11-06 Fri 19:44]
    :END:
How can likelihood functions
be approximated by exponentials?
**** Answer:
Locally by Taylor expanding the 
log likelihood near a suitable
parameter such as the maximum
likelihood parameter /θ̂/. The 
likelihood itself becomes a 
product of exponentials of
/1⁄n!(θ-θ̂)ⁿ/. 
*** Bayes                                                             :drill:
    SCHEDULED: <2022-01-03 Mon>
    :PROPERTIES:
    :ID:       a2f894ef-e000-43ac-b4c9-c332c03be1ce
    :DRILL_LAST_INTERVAL: 305.2258
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-04 Thu 11:01]
    :END:
How to approximate a posterior
density using a maximum
likelihood parameter?
**** Answer:
By Taylor expanding the the
log likelihood /L(θ,x)/ around
the log-likelihood parameter
/θ̂/. Since /L'(θ̂)=0/, this is
dominated by the quadratic term
/½(θ-θ̂)²L"(θ̂)/. The likelihood
/l(θ,x)/ is the exponential of
that, hence locally a normal
distribution. In cases where
the likelihood dominates the
prior, the posterior is close
to the likelihood.
*** Bayes                                                             :drill:
    SCHEDULED: <2021-10-10 Sun>
    :PROPERTIES:
    :ID:       211663bc-0150-436d-914b-ae444102b5b7
    :DRILL_LAST_INTERVAL: 65.5144
    :DRILL_REPEATS_SINCE_FAIL: 11
    :DRILL_TOTAL_REPEATS: 18
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.056
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:19]
    :END:
What's the point of
maximum-likelihood
techniques in Bayesian
inference?
**** Answer:
In situations where the
prior is dominated by
the likelihood, the maximum
of the posterior /p(θ|x)/ is 
near /θ̂/ where the maximum
of the likelihood occurs. This
can be used to approximate the
posterior density near /θ̂/. 
*** Bayes                                                             :drill:
    SCHEDULED: <2023-02-02 Thu>
    :PROPERTIES:
    :ID:       7f4a800a-9314-4214-be2c-85b85078a3fe
    :DRILL_LAST_INTERVAL: 558.2905
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:59]
    :END:
What is a /reference/
prior in Bayesian
inference?
**** Answer:
This is a prior dominated
by the likelihood function
and represents the view-point
of someone who has no strong
opinions on the unknown
parameters.
*** Bayes                                                             :drill:
    SCHEDULED: <2022-05-14 Sat>
    :PROPERTIES:
    :ID:       3f80b667-30d9-4267-90f8-09fc421cfa67
    :DRILL_LAST_INTERVAL: 388.9091
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-20 Tue 13:37]
    :END:
 Where to get the
 likelihood function
 for Bayesian inference?
**** Answer:
The likelihood function
is determined by the
distribution of the
data.
*** Bayes                                                             :drill:
    SCHEDULED: <2023-05-04 Thu>
    :PROPERTIES:
    :ID:       86583197-f755-463d-b7ec-b34424ff842d
    :DRILL_LAST_INTERVAL: 637.4286
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:20]
    :END:
What is the interpretation
of /p(X|θ)/ in /p(θ|X)∝p(X|θ)p(θ)/?
**** Answer:
In that context it is considered
a function of /θ/ for a fixed
dataset /X/ and thus a likelihood.
*** Bayes                                                             :drill:
    SCHEDULED: <2022-07-25 Mon>
    :PROPERTIES:
    :ID:       4b1a0705-a08d-4471-b7fd-43a8c6dd4326
    :DRILL_LAST_INTERVAL: 437.9293
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-13 Thu 13:07]
    :END:
How is MCMC used in the
context of bayesian
inference?
**** Answer:
MCMC, or Markov Chain
Monte Carlo, is used to
generate samples for the
posterior /p(θ|x)=p(x|θ)p(θ)/p(x)/
from only the knowledge of
/p(x|θ)p(θ)/ in an attempt
to evade the calculation of
/p(x)/, which is often 
prohibitively expensive.
*** Bayes                                                             :drill:
    SCHEDULED: <2022-12-26 Mon>
    :PROPERTIES:
    :ID:       44a59c0f-4586-4a00-840e-454db86f0082
    :DRILL_LAST_INTERVAL: 546.0594
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-28 Mon 11:01]
    :END:
What is the point of
generating samples for 
a bayesian posterior?
**** Answer:
A bayesian posterior
/p(θ|x)∝p(x|θ)p(θ)/ is
usually only known up to
a multiplicative constant
/1/p(x)/ with /p(x)=∫p(x|θ)p(θ)dθ/,
which is often hard to compute.
Generating samples for /p(θ|x)/
from /p(x|θ)p(θ)/ allows to use
Monte Carlo methods to approximate
properties of /p(θ|x)/ such as its
expected value (ie for θ) or even
perform a kernel density estimate
for /p(θ|x)/ itself.
*** Distributions                                                     :drill:
    SCHEDULED: <2022-08-18 Thu>
    :PROPERTIES:
    :ID:       5160a65b-7917-4489-b5c5-123a680b0a49
    :DRILL_LAST_INTERVAL: 470.3722
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-05 Wed 12:25]
    :END:
What is the empirical
distribution?
**** Answer:
Given a sample from independent
identically distributed random
variables, the empirical
distribution is
Fₙ(x)=number of sample values <x
divided by sample size. 
*** Distributions                                                     :drill:
    SCHEDULED: <2022-05-09 Mon>
    :PROPERTIES:
    :ID:       02770c7b-dc72-44d2-86ca-72392fab66a6
    :DRILL_LAST_INTERVAL: 333.1393
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-10 Thu 11:09]
    :END:
How does the empirical distribution
compare to the true underlying 
distribution?
**** Answer:
The comparison most often used
is the Dvoretsky-Kiefer-Wolfowitz
inequality that says that
/|Fₙ(x)-F(x)|<ε/ with probability
/1-α/ for /ε²=(ln(2/α))/2n/.
*** Distributions                                                     :drill:
    SCHEDULED: <2022-03-14 Mon>
    :PROPERTIES:
    :ID:       2a8d3272-233e-4e57-854f-26b0a4b32451
    :DRILL_LAST_INTERVAL: 438.0016
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-31 Thu 11:01]
    :END:
What are the marginal
distributions of a joint
probability distribution
/μ/ of two random variables?
**** Answer:
They are /μ₁:a ↦ ∑μ(a,b)/, where
the sum goes over the outcomes
/b∈B/ of the second variable and
/μ₂:b ↦ ∑ₐμ(a,b)/ with /a/ over
the outcomes /a∈A/ of the first
variable.
*** Distributions                                                     :drill:
    SCHEDULED: <2021-09-02 Thu>
    :PROPERTIES:
    :ID:       a7259811-6452-47be-90b2-a927ad52aa3b
    :DRILL_LAST_INTERVAL: 331.3622
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-06 Tue 16:36]
    :END:
What distinguishes independent
random variables /V₁/, /V₂/ in terms 
of their distribution?
**** Answer:
The joint probability distribution
of independent random variables is
the (pure) tensor product 
/μ=μ₁⊗μ₂/ of its marginal distributions
/μ₁/, /μ₂/.
*** Distributions                                                     :drill:
    SCHEDULED: <2021-10-06 Wed>
    :PROPERTIES:
    :ID:       c07564c8-25a6-4627-95ba-6ed9d2c791ce
    :DRILL_LAST_INTERVAL: 348.4423
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-23 Fri 16:31]
    :END:
What is the algebraic
form of probability 
distributions over a
product space /A×B/
in terms of distributions
over /A/ and /B/, respectively.
**** Answer:
They are tensor products
/∑ᵢⱼcᵢⱼαᵢ⊗βⱼ/ where /αᵢ/,
/βⱼ/ are probability
distributions over /A/
and /B/ respectively.
*** Distributions                                                     :drill:
    SCHEDULED: <2022-11-26 Sat>
    :PROPERTIES:
    :ID:       2b190a37-9bc7-4f7a-be59-498a92580b42
    :DRILL_LAST_INTERVAL: 489.5213
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:57]
    :END:
What is the point of
/quasi-probability distributions/?
**** Answer:
That they yield /expectations/ like
normal probability distributions
even though some of the other Axioms
of Kolmogorov may not be satisfied.
This makes them useful in quantum theory
where expectations are required but
amplitudes can be negative.
*** Distributions                                                     :drill:
    SCHEDULED: <2022-01-17 Mon>
    :PROPERTIES:
    :ID:       4bd38616-73fe-4dd2-818f-7d4787a70f86
    :DRILL_LAST_INTERVAL: 512.4636
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.375
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-08-23 Sun 16:11]
    :END:
What is the feature that distinguishes
quasi-probability distributions from
ordinary probability distributions?
**** Answer:
Their lack of /σ-additivity/. Quasi
probabilities in quantum theory
also have negative regions.
*** Distributions:Conditional                                         :drill:
    SCHEDULED: <2022-12-26 Mon>
    :PROPERTIES:
    :ID:       12db2937-9c96-45b9-8601-c1e474c7f1e1
    :DRILL_LAST_INTERVAL: 546.0594
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-28 Mon 11:02]
    :END:
In which sense is a conditional
expectation a random variable?
**** Answer:
If both /X/ and /Y/ are random
variables then /E(X|Y)/ is a
random variable whose outcome is
the expectation /E(X|Y=y₀)/
when /Y/ has outcome /y₀/.
*** Distributions:Conditional                                         :drill:
    SCHEDULED: <2023-05-04 Thu>
    :PROPERTIES:
    :ID:       b9b58ee2-4576-4e83-a3c6-15f114d1634e
    :DRILL_LAST_INTERVAL: 637.4286
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:19]
    :END:
What are the meanings of
/p(X|θ)/?
**** Answer:
For a given value of /θ/,
/p(X|θ)/ is a density function
for /X/. For a given value of
/X/, /p(X|θ)/ is a function of
/θ/, called the likelihood
function.
*** Nonlocal Fields                                                   :drill:
    SCHEDULED: <2023-05-23 Tue>
    :PROPERTIES:
    :ID:       b7fa847e-c76a-4b6e-9450-e455fa646d3c
    :DRILL_LAST_INTERVAL: 806.1091
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.249
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-08 Mon 11:45]
    :END:
How are non-locality
and boundary conditions
related?
**** Answer:
Boundaries may induce 
non-locality, for example
if a gas is constrained by
a boundary causing reflection
of particles back into
the gas. This creates a
dependency on previous events
and causes a nonlocality in
time.
*** Nonlocal Fields                                                   :drill:
    SCHEDULED: <2022-04-01 Fri>
    :PROPERTIES:
    :ID:       96e3df09-a54e-4d90-b463-830e7bc2bcd4
    :DRILL_LAST_INTERVAL: 599.0004
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.375
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-08-10 Mon 16:36]
    :END:
What is a non-local field?
**** Answer:
A field /φ(p)+ρ∫φ(p+π)dπ/
where the value at
point /p/ doesn't depend
only on the value at /p/
but also on values at
other points /p+π/.
*** Processes                                                         :drill:
    SCHEDULED: <2022-11-06 Sun>
    :PROPERTIES:
    :ID:       6d3c54b4-eb0c-4b06-8f0f-ff0add0f1c58
    :DRILL_LAST_INTERVAL: 594.7168
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-21 Sun 13:28]
    :END:
What are the functions of
~μ, ν~ in a Hawkes process
with conditional intensity
~λ(t)=μ(t)+∫ᵗν(t-s)dNₛ~?
**** Answer:
~μ(t)~ represents the 
expected, predictable, or 
deterministic part of the 
intensity, ~ν(t)~ expresses the
influence of past events
~Tᵢ~ on the current value
of the intensity process ~λ(t)~.
*** Processes                                                         :drill:
    SCHEDULED: <2022-01-01 Sat>
    :PROPERTIES:
    :ID:       0801d690-1eea-4409-a568-27a10f11dbf9
    :DRILL_LAST_INTERVAL: 197.7483
    :DRILL_REPEATS_SINCE_FAIL: 16
    :DRILL_TOTAL_REPEATS: 19
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.157
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-17 Thu 12:28]
    :END:
What is a Hawkes process?
**** Answer:
A stationary point process
~Nₜ~ with conditional intensity
expressable as
~λ(t)=μ(t)+∫ᵗν(t-s)dNₛ~
with ~ν:ℝ⁺→ℝ⁺~.
*** Processes                                                         :drill:
    SCHEDULED: <2022-11-06 Sun>
    :PROPERTIES:
    :ID:       908b6ef8-55b8-430c-8fcd-17e59d4c5bf4
    :DRILL_LAST_INTERVAL: 594.7168
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-21 Sun 13:26]
    :END:
What is the /intensity/ of
a point-process?
**** Answer:
This is a property of
stationary point processes,
on ~ℝᵈ~ where the mean 
measure is given by
~Eξ(.)=λ∥.∥~, with ~∥.∥~ 
indicating Lebesgue measure
on ~ℝᵈ~. The factor ~λ~ is called
the intensity of the point
process.
*** Processes                                                         :drill:
    SCHEDULED: <2022-11-06 Sun>
    :PROPERTIES:
    :ID:       7770e41f-2ba1-41de-9484-992ed962726c
    :DRILL_LAST_INTERVAL: 594.7168
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-21 Sun 13:27]
    :END:
What is the σ-Algebra on
the set of counting measures
~N~ used in the definition of
point-processes?
**** Answer:
It is the smallest σ-Algebra
on ~N~ for which all
~f_B:N→ℤ₊~, ~ς ↦ ς(B)~ with
~B~ a Borel set of the under-
lying space become measurable.
*** Processes                                                         :drill:
    SCHEDULED: <2022-12-08 Thu>
    :PROPERTIES:
    :ID:       d85e0e70-e2b5-4949-a398-bd2124cebe16
    :DRILL_LAST_INTERVAL: 609.7776
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-07 Wed 10:01]
    :END:
What is a point process?
**** Answer:
A /random element/ with values
that are locally finite
counting measures on a
separable, second countable
Hausdorff space with its
usual ~σ~ algebra.
*** Quasi Probability                                                 :drill:
    SCHEDULED: <2024-05-30 Thu>
    :PROPERTIES:
    :ID:       43d44fdc-0cca-4370-bf44-934400a6ee03
    :DRILL_LAST_INTERVAL: 1018.6598
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-15 Sun 13:54]
    :END:
What does it mean to say
that a quasi-probability
function /f/ is not /σ/-additive?
**** Answer:
That the integral of /f/ over
a disjoint union /⋃̇̇ Aₙ/ of countably
many sets is not necessarily equal
to the countable sum of integrals
over the individual /Aₙ/.
*** Random Fields                                                     :drill:
    SCHEDULED: <2021-09-26 Sun>
    :PROPERTIES:
    :ID:       b7d9a6a9-b043-47a3-b80d-0c7ec17db8fa
    :DRILL_LAST_INTERVAL: 501.5443
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-05-12 Tue 15:36]
    :END:
 What is a /random element/?
**** Answer:
A generalization of a random
variable to a function
~X:Ω → E~ where ~(E,ε)~ is a
measurable space such that
~X⁻¹(B)~ has a probability
for every ~B∈ε~. Thus, it is
essentially a random variable
with values in ~E~ and not just
in ~ℝ~.
*** Random Generation                                                 :drill:
    SCHEDULED: <2023-05-04 Thu>
    :PROPERTIES:
    :ID:       9ae62407-ff33-4423-b983-993e9a9f8d52
    :DRILL_LAST_INTERVAL: 637.4286
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-08-05 Thu 08:18]
    :END:
What is Markov Chain
Monte Carlo (MCMC) all
about?
**** Answer:
This is about generating
random samples from a
distribution which is only
known up to a multiplicative
constant, such as an
unnormalized Bayesian
posterior.
** Statistics
*** Classification                                                    :drill:
    SCHEDULED: <2022-01-11 Tue>
    :PROPERTIES:
    :ID:       c734f2cc-3568-43ef-97e5-af56edf22413
    :DRILL_LAST_INTERVAL: 367.2197
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-09 Sat 12:14]
    :END:
How do linear classifiers
/gᵢ(*x*)= *wᵢᵗx* + wᵢ₀/ arise?
**** Answer:
From classification problems
where the class conditional
densities have normal 
distributions with the same 
covariance matrices /Σᵢ=Σ/. 
Using /gᵢ(*x*)=log p(*x* |ωᵢ) + log P(ωᵢ)/
and the fact that *xᵗ* Σᵢ *x* is 
independent of the class /i/, /gᵢ(*x*)/
becomes linear with weights
*wᵢ* = Σ⁻¹ *μᵢ* and bias
/wᵢ₀=-½ *μᵢᵗ* Σ⁻¹ *μᵢ* + P(ωᵢ)/.
*** Classification                                                    :drill:
    SCHEDULED: <2022-12-24 Sat>
    :PROPERTIES:
    :ID:       8bda3922-cb58-4254-9d30-853e18837e9d
    :DRILL_LAST_INTERVAL: 696.2702
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-27 Wed 21:33]
    :END:
Why should classifiers /gᵢ(*x*)/
be at most quadratic under 
reasonable circumstances?
**** Answer:
Because class conditional densities
will be close to normal in many
cases and the quadratic term is needed
to account for differences in covariance.
Thus, /gᵢ(*x*)= *xᵗ* Wᵢ *x* + *wᵢᵗx* + wᵢ₀/ with
/Wᵢ=-½Σᵢ⁻¹, *wᵢ* = Σᵢ⁻¹ *μᵢ*,/ and
/wᵢ₀=-½ *μᵢᵗ* Σᵢ⁻¹ *μᵢ* - ½log |Σᵢ| + log P(ωᵢ)/
should be sufficient for most classifications.
*** Classification                                                    :drill:
    SCHEDULED: <2022-10-19 Wed>
    :PROPERTIES:
    :ID:       644cd538-3b36-4231-b2b1-cf44fb8738af
    :DRILL_LAST_INTERVAL: 510.8339
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-26 Wed 11:57]
    :END:
How are classifiers generally
constructed?
**** Answer:
A feature vector *x* should
be classified as belonging
to class /ωᵢ/ for which 
/P(ωᵢ| *x*)/ is maximal. Thus,
classifiers /gᵢ(*x*)/ should be
monotonuous in /P(ωᵢ| *x*)/ and
are often chosen as
/gᵢ(*x*)=p(*x* |ωᵢ)P(ωᵢ)/ or
/gᵢ(*x*)=log p(*x* |ωᵢ) + log P(ωᵢ)/.
*** Classification                                                    :drill:
    SCHEDULED: <2023-04-27 Thu>
    :PROPERTIES:
    :ID:       61399ec2-1627-43cb-b6c8-aee950cc8438
    :DRILL_LAST_INTERVAL: 792.3338
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-24 Wed 11:04]
    :END:
What is the class conditional
density?
**** Answer:
The probability density
/p(*x|* ωᵢ)/ for the probability
of measuring feature vector
*x* if the true state of nature
is given by class /ωᵢ/.
*** Classification                                                    :drill:
    SCHEDULED: <2023-03-26 Sun>
    :PROPERTIES:
    :ID:       70ee4b91-339b-42d8-b0f9-b0437453ed8b
    :DRILL_LAST_INTERVAL: 766.6887
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-17 Wed 21:56]
    :END:
Why can the covariance matrix
/Σᵢ/ of a class conditional density
/p(*x* |ωᵢ)/ be assumed to be 
non-singular?
**** Answer:
Because a singular /Σᵢ/ would imply
that there is a component /xⱼ/ of the
feature vector with variance 0 or
that components are identical or
linearly related, a feature indicating
poor design.
*** Classification                                                    :drill:
    SCHEDULED: <2023-02-09 Thu>
    :PROPERTIES:
    :ID:       6485dccd-023c-4a17-9ce3-1c7098eabdd3
    :DRILL_LAST_INTERVAL: 561.2258
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-28 Wed 18:11]
    :END:
Why is the classification of
a feature vector *x* as belonging
to the class /i/ with the nearest
mean *μᵢ* not always satisfactory?
**** Answer:
Because the classification depends
on the class conditional densities.
The minimum-distance classification
is only warranted if the class 
conditional densities /p(*x* |ωᵢ)/ are
normal with covariance matrices
/Σᵢ=σ²/ and equal a priori probabilities
/P(ωᵢ)/.
*** Classification: Learning                                          :drill:
    SCHEDULED: <2022-12-24 Sat>
    :PROPERTIES:
    :ID:       62f12b78-bfcb-4f8a-8d7c-f2a7c86df5dd
    :DRILL_LAST_INTERVAL: 696.2702
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-27 Wed 21:31]
    :END:
What is the goal of learning
for classification purposes?
**** Answer:
The determination of the
class conditional densities
/p(*x* |ωᵢ)/ from samples
/Χᵢ={*xᵢ₁*,…, *xᵢₙ*}/.
*** Classification: Learning                                          :drill:
    SCHEDULED: <2022-01-31 Mon>
    :PROPERTIES:
    :ID:       f8665195-071a-4b19-bbf2-870cf7faa4ac
    :DRILL_LAST_INTERVAL: 462.8191
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-10-25 Sun 14:46]
    :END:
How is a class conditional
density obtained through a
maximum likelihood estimation?
**** Answer:
Here it is assumed that the
class conditional density is
known except for a parameter
vector *p* which determines the
exact density. The probability
to obtain the sample data 
/Χ={*x₁*,…, *xₙ*}/ for the current
class /ω/ is then
/p(Χ| *p*, ω)=∏p(*xₖ* | *p*, ω)/ 
with class conditional density
/p(*xₖ* | *p*,ω)/ for class /ω/ and
maximizing this for *p* is called
the /maximum likelihood/ estimate
for *p*.
*** Density Estimation                                                :drill:
    SCHEDULED: <2022-10-10 Mon>
    :PROPERTIES:
    :ID:       3cdb21b3-bd07-40fa-a82e-dbdbbdcf0f25
    :DRILL_LAST_INTERVAL: 656.5459
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-22 Tue 08:51]
    :END:
How to estimate the
density of a random
variable from a sample
with Parzen windows?
**** Answer:
Use the characteristic function
/φ(x)/ of the unit hypercube
centered at the origin, the
Parzen window, and 
calculate a weighed sum
/1/n∑ᵢ1/Vₙφᵢ/, of /φᵢ=φ((𝐱-𝐱ᵢ)/h)/,
where /n/ is the number of samples, 
/Vₙ/ the volume of a sampling hypercube
and /h/ its edge-length.
*** Density Estimation                                                :drill:
    SCHEDULED: <2022-10-10 Mon>
    :PROPERTIES:
    :ID:       3b15fdb1-74f2-4dd5-a1b3-ed3f0b0be836
    :DRILL_LAST_INTERVAL: 656.5459
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-22 Tue 08:52]
    :END:
What is the meaning of the
/φ((𝐱-𝐱ᵢ)/h)/ used in density
estimation where /φ/ is the
characteristic function of
the hypercube?
**** Answer:
It indicates whether sample
/𝐱ᵢ/ is in the hypercube with
edge-length /h/ and centered at
/𝐱/.
*** Density Estimation                                                :drill:
    SCHEDULED: <2023-06-26 Mon>
    :PROPERTIES:
    :ID:       1c24465f-dd43-4f11-b0ee-abbb14840329
    :DRILL_LAST_INTERVAL: 853.3659
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-23 Tue 21:43]
    :END:
How to count the number of
samples lying near a location
/𝐱/ ?
**** Answer:
As /∑ᵢφ(𝐱-𝐱ᵢ)/ where /φ/ is the
characteristic function of
the region defining /nearness/.
*** Estimation                                                        :drill:
    SCHEDULED: <2022-07-15 Fri>
    :PROPERTIES:
    :ID:       9e13a03d-46b9-460d-bcd4-0a5ad6ef1fbc
    :DRILL_LAST_INTERVAL: 583.454
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-09 Wed 08:18]
    :END:
What is the justification
for the principle of
/Occam's Razor/?
**** Answer:
The need to avoid overfitting
models to data. If data are
explained with a minimum of
assumptions then there is a
better chance to explain or
predict new data correctly.
*** Estimation                                                        :drill:
    SCHEDULED: <2022-07-15 Fri>
    :PROPERTIES:
    :ID:       2b1cc8eb-e644-4ab0-8d9e-c26ada59e033
    :DRILL_LAST_INTERVAL: 583.454
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-09 Wed 08:16]
    :END:
Why is overfitting harmful?
**** Answer:
Because a model that
overfits the data will
be bad at predicting
new observations.
*** Image Recognition: Matching                                       :drill:
    SCHEDULED: <2022-12-02 Fri>
    :PROPERTIES:
    :ID:       a37c5b22-a69f-4f9f-8b76-bea1c85bc97b
    :DRILL_LAST_INTERVAL: 642.4714
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-02-28 Sun 20:17]
    :END:
How does the cross-correlation
/Rₚₜ(m,n)=∑ᵢⱼp(i,j)t(i-m,j-n)/ between
a picture function /p(x,y)/ and a template
function /t(x,y)/ measure the template
match?
**** Answer:
A large value at a point /(m₀,n₀)/
indicates a good match. Think of
/Rₚₜ/ as another picture describing
the template match.
*** Image Recognition: Matching                                       :drill:
    SCHEDULED: <2023-12-19 Tue>
    :PROPERTIES:
    :ID:       4f7633c4-37ad-4bef-a09f-ae015fca72f3
    :DRILL_LAST_INTERVAL: 942.1875
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-21 Fri 11:57]
    :END:
Why can the term /∑ᵢⱼg²(i,j)/ in
the expanded square of
/E²(m,n)=∑ᵢⱼ(g(i,j)-t(i-m,j-n))²/
not be neglected when calculating
/E²(m,n)/?
**** Answer:
Because /∑ᵢⱼg²(i,j)/ implicitly 
depends on /m, n/ due to the 
restrictions imposed on /i, j/ 
with regards to the template 
/t(i-m,j-n)/ having to be inside 
the picture.
*** Image Recognition: Matching                                       :drill:
    SCHEDULED: <2023-12-19 Tue>
    :PROPERTIES:
    :ID:       9dec4862-96d0-441f-be07-57f9d4903918
    :DRILL_LAST_INTERVAL: 942.1875
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.857
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-05-21 Fri 11:56]
    :END:
Why is the cross-correlation
between an image and a template
sometimes used as a measure for
the quality of a template match?
**** Answer:
This comes from the euclidean distance
/E²(m,n)=∑ᵢⱼ(g(i,j)-t(i-m,j-n))²/ which,
after muliplying out the square, has
the middle term
/-2R(m,n)=-2∑ᵢⱼg(i,j)t(i-m,j-n)/,
which involves the cross-correlation
/R(m,n)/.
*** Learning:Q                                                        :drill:
    SCHEDULED: <2022-04-01 Fri>
    :PROPERTIES:
    :ID:       cb9b72d6-81e6-4f3f-a68c-b67e993f20ec
    :DRILL_LAST_INTERVAL: 388.9091
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-08 Mon 11:52]
    :END:
What is Q-learning
all about?
**** Answer:
Learning a function
/Q:S×A→ℝ/ indicating
the quality of
state-action combinations.
*** Learning:Q                                                        :drill:
    SCHEDULED: <2023-01-21 Sat>
    :PROPERTIES:
    :ID:       85f9303c-c6ad-4cb9-b339-021e7e9f1ff8
    :DRILL_LAST_INTERVAL: 586.479
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-14 Mon 12:33]
    :END:
How is the /Q/ function
in /Q/-learning used?
**** Answer:
It is used to find a path
from a given state /s/ to
a goal state by finding an
action /aₛ/ such that
/Q(s,aₛ)=max{Q(s,a)|a∈A}/.
The action will result in
a new state /s'/ where the
procedure is repeated until
a goal state is reached.
*** Learning:Q                                                        :drill:
    SCHEDULED: <2022-07-07 Thu>
    :PROPERTIES:
    :ID:       d921272a-66ea-4b44-ae77-671a4341c67e
    :DRILL_LAST_INTERVAL: 466.486
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-03-28 Sun 13:19]
    :END:
How is the /Q/ function
learned in /Q/-learning?
**** Answer:
The /Q/ function is initialised
to all zeroes. An initial
state /s₀/ is chosen together
with an action /a₀/ and /Q(s₀,a₀)/ is
updated via
/Q(s₀,a₀)←Q(s₀,a₀)+α(r(s₀,a₀)+γ*max{Q(s₁,a)|a∈A}-Q(s₀,a₀))/
where /r:S×A→ℝ/ is the reward function
for taking action /a/ in state /s/.
*** Learning:Q                                                        :drill:
    SCHEDULED: <2023-04-30 Sun>
    :PROPERTIES:
    :ID:       5c91173d-411d-4bac-a648-384d8612d08d
    :DRILL_LAST_INTERVAL: 641.4109
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.04
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-28 Wed 18:12]
    :END:
Why is the update of the /Q/
function often given as
/Q(s₀,a₀)←r(s₀,a₀)+γ*max{Q(s₁,a)|a∈A}/
rather than the full
/Q(s₀,a₀)←Q(s₀,a₀)+α(r(s₀,a₀)+γ*max{Q(s₁,a)|a∈A}-Q(s₀,a₀))/?
**** Answer:
The shorter expression arises from
setting the learning rate /α/ to
1, which is optimal in deterministic
environments.
*** Learning:Q                                                        :drill:
    SCHEDULED: <2023-01-21 Sat>
    :PROPERTIES:
    :ID:       9e564d19-6406-44f1-9779-3ae9f63a7fdd
    :DRILL_LAST_INTERVAL: 586.479
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-14 Mon 12:35]
    :END:
What is the role of /γ/
in
/Q(s₀,a₀)←Q(s₀,a₀)+α(r(s₀,a₀)+γ*max{Q(s₁,a)|a∈A}-Q(s₀,a₀))/?
**** Answer:
The discount factor /γ/ balances
the importance of next-step
rewards vs current rewards from
the reward function /r/.
Usually, /0<γ<1/.
*** Learning:Q                                                        :drill:
    SCHEDULED: <2021-09-03 Fri>
    :PROPERTIES:
    :ID:       e25ce32c-316f-4641-8d75-65f7f06ff67b
    :DRILL_LAST_INTERVAL: 333.3712
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.833
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-10-05 Mon 22:06]
    :END:
What is an /episode/
in Q-learning?
**** Answer:
That's a run of updates
of the /Q/ function from 
an initial state, often
randomly chosen, until
a goal state is reached.
*** Learning:Q                                                        :drill:
    SCHEDULED: <2023-04-22 Sat>
    :PROPERTIES:
    :ID:       27009e37-a2f5-4559-8f30-03b59f382590
    :DRILL_LAST_INTERVAL: 637.4286
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-07-24 Sat 18:58]
    :END:
Why is /0<γ<1/ in
/Q(s₀,a₀)←Q(s₀,a₀)+α(r(s₀,a₀)+γ*max{Q(s₁,a)|a∈A}-Q(s₀,a₀))/?
**** Answer:
Because larger values lead
to problems with convergence.
*** Regression                                                        :drill:
    SCHEDULED: <2021-12-09 Thu>
    :PROPERTIES:
    :ID:       a0a9974f-648c-4433-addb-4d526db51668
    :DRILL_LAST_INTERVAL: 449.6787
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.429
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-15 Tue 16:06]
    :END:
Do the variables in a
regession analysis have
to be independent?
**** Answer:
No, they are actually often
highly correlated. They are
usually only assumed to be
normally distributed so that
t-tests and F-tests can be run
to assess their relevance.
** R&D
*** Dynamics                                                          :drill:
    SCHEDULED: <2023-03-15 Wed>
    :PROPERTIES:
    :ID:       37ce3eda-2d16-4b3c-b9af-2e3b3a241a04
    :DRILL_LAST_INTERVAL: 651.4737
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-02 Wed 11:12]
    :END:
How to relate a dynamical
system to a logic?
**** Answer:
By means of an experimental
manual and its logic. Stimulation
of the system is like an 
experiment that results in an
orbit, so orbits are the
outcomes of experiments.
*** Dynamics                                                          :drill:
    SCHEDULED: <2021-08-17 Tue>
    :PROPERTIES:
    :ID:       d1ba6175-4660-493d-b4ba-c3f2663eb028
    :DRILL_LAST_INTERVAL: 343.3988
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.428
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-09-08 Tue 22:17]
    :END:
How to relate a dynamical
system to language?
**** Answer:
By Symbolic Dynamics. Every
orbit of a dynamical system
becomes an infinite string
of symbols. Countable subsets
can be interpreted as language,
these correspond to meaningful
orbits, ie. in a neural network.
*** Dynamics: Symbolic                                                :drill:
    SCHEDULED: <2022-04-01 Fri>
    :PROPERTIES:
    :ID:       74795f07-def7-4bef-81fb-4fa5dd195392
    :DRILL_LAST_INTERVAL: 462.5808
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.285
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-24 Thu 08:28]
    :END:
What would constitute
meaningful orbits of
a dynamic system?
**** Answer:
Essentially a choice of
countable subset of the
strings of orbits. The
chosen orbits can be 
rewritten in finite terms,
ie by enumeration. (Or a
change of partition?!)
*** Dynamics: Symbolic                                                :drill:
    SCHEDULED: <2023-11-18 Sat>
    :PROPERTIES:
    :ID:       8d493da2-fafb-4b8f-90c1-9b2de535cf9e
    :DRILL_LAST_INTERVAL: 877.365
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.714
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-06-24 Thu 10:14]
    :END:
Can every meaningful
orbit be rewritten to
become eventually periodic?
**** Answer:
Possibly, actually every
meaningful orbit can be
rewritten to be finite,
like, for example, algebraic
numbers.
*** Quantum Calc                                                      :drill:
    SCHEDULED: <2022-12-18 Sun>
    :PROPERTIES:
    :ID:       efbb0cea-6731-4833-b541-dbcf2f6aa1b9
    :DRILL_LAST_INTERVAL: 696.2702
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.572
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-01-21 Thu 10:55]
    :END:
In which sense can traces
be coefficients of vectors?
**** Answer:
There is an inner product
on operators defined by
/⟨A,B⟩=tr(AᴴB)/ with /H/ denoting
the conjugate transpose. These 
are coefficients of linear
combinations of vectors.
*** Quantum Calc                                                      :drill:
    SCHEDULED: <2022-01-02 Sun>
    :PROPERTIES:
    :ID:       6306c188-002d-42f1-acc5-f75a55182c19
    :DRILL_LAST_INTERVAL: 367.2197
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-31 Thu 11:04]
    :END:
In which sense are cycles
fixed points?
**** Answer:
Consider permutations: fixed
points have trace 1, all other
cycles have trace 0. In Shor,
co-periods have nonzero 
coefficients, all other coeffs
are 0. So in which sense are
coefficients traces of
permutation cycles?
*** Matrices                                                          :drill:
    SCHEDULED: <2022-10-28 Fri>
    :PROPERTIES:
    :ID:       140ece23-d2f9-4624-8651-63cdbb7d4629
    :DRILL_LAST_INTERVAL: 675.0025
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-12-22 Tue 08:52]
    :END:
Is it possible to interpret
matrix elements /aᵢⱼ/ as 
costs to travel from node
/j/ to /i/?
**** Answer:
Not with the usual matrix
multiplication. The problem
is that the cost of two step
travel from node /i/ to /j/ is
/minₖ{aᵢₖ+aₖⱼ}/ rather than
regular matrix multiplication.
This works only if multiplication
is defined as /a⊗b=a+b/ and 
summation as /a⊕b=min{a,b}/.
*** Matrices                                                          :drill:
    SCHEDULED: <2023-08-02 Wed>
    :PROPERTIES:
    :ID:       2f6c2036-aca0-49db-9e7b-cc9a10ed5d35
    :DRILL_LAST_INTERVAL: 841.2447
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.374
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2021-04-13 Tue 13:17]
    :END:
What is the most natural
interpretation of matrix
elements /aᵢⱼ/ in the sense
of connectivity between
nodes /i/ and /j/?
**** Answer:
The matrix element /aᵢⱼ/
designates some kind of
flow-through capacity
from node /j/ to node /i/.
This is also in keeping
with the usual matrix
multiplication, which
would model the flow of
quantities /xₖ/ through
a graph.
*** Matrices                                                          :drill:
    SCHEDULED: <2022-03-06 Sun>
    :PROPERTIES:
    :ID:       83e90127-e424-468d-8820-f6609ff96765
    :DRILL_LAST_INTERVAL: 525.7275
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-26 Sat 15:34]
    :END:
How to define a
relation /R(M)/ for 
a binary matrix that
is compatible with
permutation matrices?
**** Answer:
Define /R(M)={(i,j)|xⱼᵢ=1}/ 
which is interpretable as
preimage relation because
for a permutation matrix
/xⱼᵢ=1/ means that /xᵢ↦xⱼ/.
*** Matrices                                                          :drill:
    SCHEDULED: <2022-01-25 Tue>
    :PROPERTIES:
    :ID:       2fd846d2-e2c2-4341-99d2-4d839550708f
    :DRILL_LAST_INTERVAL: 511.1029
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.125
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2020-09-01 Tue 15:52]
    :END:
If permutation matrices
permute the indices of
vectors, how do more general
0-1 matrices act on indices?
**** Answer:
There would be a superposition
of indices which could collapse
to a certain index. On the 
other hand, the superposition
could relate to the pre-images
of an index. So if /xₙ↦xᵢ+xⱼ/ this
would mean that /i/ and /j/ are 
preimages of /n/.
Also compare to the interpretation
of 0-1 matrices as paths connecting
nodes.
*** Tensors                                                           :drill:
    SCHEDULED: <2022-08-01 Mon>
    :PROPERTIES:
    :ID:       bbb37512-6d33-44d1-a020-e72bc54d0859
    :DRILL_LAST_INTERVAL: 587.7579
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2020-12-21 Mon 08:15]
    :END:
How to use tensors
as algebraic types?
**** Answer:
Represent record types
as rows and union types
as columns. This allows
to represent finite
algebraic datatypes in
tensor notation.

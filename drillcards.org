# -*- eval: (activate-input-method 'TeX); -*-
#+STARTUP: nolatexpreview
* Installing org-drill: 
1. Add http://orgmode.org/elpa to the package-archives list
2. Use M-x list-packages to install org-plus-... packages
3. require cl and org-drill in init file AFTER org is loaded, otherwise
   M-x org-drill will be a bo match. cl is needed for copy-list function
* Android
** Apps
*** Browser                                                           :drill:
    SCHEDULED: <2019-01-30 Wed>
    :PROPERTIES:
    :ID:       007aa5b0-99ab-4510-b87d-518d6e5b130e
    :DRILL_LAST_INTERVAL: 77.818
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-13 Tue 18:32]
    :END:
What to do when unwanted
pop-ups appear, ie re
virus removal?
**** Answer:
Clear the browser cache. Go
to ~Settings → Apps~ and find
the browser. Tap ~Force Stop~
to shut it down then tap
~Storage~ and then ~Clear Cache~.
*** Uninstalling                                                      :drill:
    SCHEDULED: <2019-01-30 Wed>
    :PROPERTIES:
    :ID:       15f27d02-a0da-4324-99f4-9e24972e99f1
    :DRILL_LAST_INTERVAL: 77.818
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-13 Tue 18:30]
    :END:
What to do when an application
has a greyed out uninstall
button?
**** Answer:
There is a chance the app is
an administrator. Go to
~Settings -> Security ->Device administrators~
and see if it is listed there. If so,
check its box and deactivate it. Reboot
and it should be uninstallable in
the usual way.
** Devices
*** memory                                                            :drill:
    SCHEDULED: <2019-03-09 Sat>
    :PROPERTIES:
    :ID:       4620a751-46d0-44bc-bfb2-6b7635268d17
    :DRILL_LAST_INTERVAL: 115.3187
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-14 Wed 14:52]
    :END:
What's the main problem
with formatting SD-cards
as internal?
**** Answer:
Speed, because SD-cards 
are slower than internal
memory. If buying an
SD-card to boost internal
memory, make sure it is
high-speed, ie UHS-1 type
or better.
*** memory                                                            :drill:
    SCHEDULED: <2019-02-07 Thu>
    :PROPERTIES:
    :ID:       174f6457-edb9-4443-a938-6ce218abc7aa
    :DRILL_LAST_INTERVAL: 96.2695
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-03 Sat 15:36]
    :END:
How to deal with low
internal memory situations
on Android 6.0 and later
devices?
**** Answer:
Add a high speed SD-card and 
format it as internal. Then 
migrate the data.
*** memory                                                            :drill:
    SCHEDULED: <2019-03-24 Sun>
    :PROPERTIES:
    :ID:       f5c7a634-6827-4091-9d23-49004114af03
    :DRILL_LAST_INTERVAL: 123.8605
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-20 Tue 09:50]
    :END:
How to migrate data to an
SD-card formatted as 
internal?
**** Answer:
Go to ~Storage & USB~ and
click on the ~SD Card~ entry.
Open the ~...~ menu and select
~Migrate data~.
*** memory                                                            :drill:
    SCHEDULED: <2019-01-31 Thu>
    :PROPERTIES:
    :ID:       a03db9dd-3806-4a3c-8a37-9093e6172558
    :DRILL_LAST_INTERVAL: 90.9789
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-01 Thu 13:05]
    :END:
What are the consequences of
formatting an SD-card as 
internal on Android 6.0+?
**** Answer:
After migrating data, the
removal of the SD-card will
break applications that moved
their data to the SD-card
unless the data are moved back.
Thus, SD-cards formatted in
this way aren't meant to be
swapping in and out of the 
device.
* Cooking
** Beverages
*** French Press                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       7dc7c8fa-d0e2-4deb-8e69-996d185e1169
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-13 Tue 18:32]
    :END:
What is the problem if
the press goes down too
easily?
**** Answer:
The coffee is too coarse
and needs to be ground 
more finely.
*** French Press                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       bd5a542d-3949-4af5-a52d-81bd526f4acf
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-13 Tue 18:32]
    :END:
What is the problem if
the press is hard to
push down?
**** Answer:
This is a sign that
the coffee was ground
too finely.
* Development
** ai
*** Intelligence                                                      :drill:
    SCHEDULED: <2019-03-23 Sat>
    :PROPERTIES:
    :ID:       22e5e48c-d70c-4f2d-a1ef-4c1f1b83f1fc
    :DRILL_LAST_INTERVAL: 142.96
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:10]
    :END:
What is intelligence?
**** Answer:
The ability to efficiently
translate reality into a
language and to efficiently
manipulate the inherent logic
of a language.
*** Tensor Flow                                                       :drill:
    SCHEDULED: <2019-04-09 Tue>
    :PROPERTIES:
    :ID:       9bf3a859-c623-4594-bb79-bbbe12fce048
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-04 Sun 12:40]
    :END:
What is the concept of tensors
in /Tensor Flow/?
**** Answer:
A tensor in this context is simply
a multidimensional array.
*** Tensor Flow                                                       :drill:
    SCHEDULED: <2019-03-26 Tue>
    :PROPERTIES:
    :ID:       d1ba0d80-c2c2-4902-aabe-791b3ab307b8
    :DRILL_LAST_INTERVAL: 142.96
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-03 Sat 15:37]
    :END:
What is a /placeholder/?
**** Answer:
A tensor that is changed at
each session run, usually used
as tensor of input values.
*** Tensor Flow                                                       :drill:
    SCHEDULED: <2019-02-14 Thu>
    :PROPERTIES:
    :ID:       4f139b4f-7812-4159-9282-9ec2aa012cf8
    :DRILL_LAST_INTERVAL: 113.6409
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-23 Tue 16:22]
    :END:
What is a /variable/?
**** Answer:
A tensor used as an output
variable, usually containing
estimates for a model.
*** Tensor Flow                                                       :drill:
    SCHEDULED: <2019-03-26 Tue>
    :PROPERTIES:
    :ID:       ffbe5a2d-a068-4a2f-8f09-7008602becbd
    :DRILL_LAST_INTERVAL: 142.96
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-03 Sat 15:36]
    :END:
In which sense is Tensor Flow
monadic?
**** Answer:
 In the sense that there is
 the description of a computation
 that is then activated.
*** Tensor Flow                                                       :drill:
    SCHEDULED: <2019-02-28 Thu>
    :PROPERTIES:
    :ID:       7778b738-a78c-402f-a83a-d6d9b3e91a88
    :DRILL_LAST_INTERVAL: 122.0595
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-29 Mon 14:57]
    :END:
What is the computational
model of /Tensor Flow/?
**** Answer:
The construction of an expression
involving tensors and operations
on them as a graph that describes
a computation and the subsequent
execution of the description.
** elixir 
*** expressions                                                       :drill:
    SCHEDULED: <2019-02-25 Mon>
    :PROPERTIES:
    :ID:       ff63e6a6-71ff-4a92-81ca-59b9df263613
    :DRILL_LAST_INTERVAL: 59.1232
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:54]
    :END:
Why would implementing
a typed language like
Haskell for the Erlang
VM be difficult?
**** Answer:
It would probably work
if one forgoes the 
function overloading
in the Erlang VM in 
favour of type 
polymorphism.
*** expressions                                                       :drill:
    SCHEDULED: <2019-02-08 Fri>
    :PROPERTIES:
    :ID:       843da46f-cb5e-41eb-b891-141d6051cfac
    :DRILL_LAST_INTERVAL: 45.5764
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:13]
    :END:
What is the main
reason for the =.()=
kludge?
**** Answer:
The Erlang VM, which
essentially requires
Lisp 2 type implementations 
where variables and 
functions live in different
namespaces, hence the
different calling conventions
for variables referring to
functions and proper functions.
*** expressions                                                       :drill:
    SCHEDULED: <2019-02-13 Wed>
    :PROPERTIES:
    :ID:       68a77f35-01a7-4e43-8059-565cf9fe5570
    :DRILL_LAST_INTERVAL: 48.8593
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:58]
    :END:
Why do Erlang and Elixir
require different namespaces
for variables and functions?
**** Answer:
Because (named) functions are 
identified by both name and 
arity in the Erlang VM, which 
makes Lisp 1 implementations 
awkward.
*** expressions                                                       :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       40bee627-16e1-4bd6-a018-5389091ce1e9
    :DRILL_LAST_INTERVAL: 44.4678
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 16:56]
    :END:
What is the rap on
the =do:...=
expressions in elixir?
**** Answer:
These are actually 
keyword lists
and equivalent to
=[{:do,...}]=, which can
be rewritten as
=[do: ...]= due to some
syntactic sugar. If the 
keyword list is the last
argument of a function, the
square brackets can be
dropped and =do:...=
is the result.
*** functions                                                         :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       17411eea-ec02-4f93-a8e2-f3ac5c4a3d68
    :DRILL_LAST_INTERVAL: 55.0177
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:55]
    :END:
In how far do named
functions behave
differently from
anonymous ones?
**** Answer:
Anonymous functions
are closures, ie they
access values in their
environment. In contrast,
a =def= introduces a clean
name scope.
*** functions                                                         :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       e7f1857b-c908-4031-aeea-1e2d95d452ea
    :DRILL_LAST_INTERVAL: 55.0177
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:55]
    :END:
Why is argument permutation
important in Elixir?
**** Answer:
Because of piping, where
the result of a computation 
is sent to the first argument
of the function call that is
next in the pipe.
*** functions                                                         :drill:
    SCHEDULED: <2019-02-20 Wed>
    :PROPERTIES:
    :ID:       6bf7c911-9a5c-4986-8fa1-69a7382a7f9a
    :DRILL_LAST_INTERVAL: 55.0177
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:05]
    :END:
Why is the fudge with
the =.()= notation for
anonymous functions
needed in elixir?
**** Answer:
Mostly because of the 
different namespaces for
functions and variables.
But also, arguments
can be permuted in anonymous
functions defined by a capture,
which needs to sort out the
=&1, &2,...= etc.
*** functions                                                         :drill:
    SCHEDULED: <2019-02-20 Wed>
    :PROPERTIES:
    :ID:       01525ba3-ec3d-4a5b-a61b-b4d2e1d407b1
    :DRILL_LAST_INTERVAL: 55.0177
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:06]
    :END:
What's the problem
with the elixir
expression
=(&(&1 * 2).(5))=?
**** Answer:
According to /iex/, 
this is a function of
arity =1=, but applying
an argument to it as in
=(&(&1 * 2).(5)).(2)=
is accepted by the
compiler but results
in a run-time error
/BadFunctionError/, complaining
about expecting a function
but getting =4=.
*** functions                                                         :drill:
    SCHEDULED: <2019-02-13 Wed>
    :PROPERTIES:
    :ID:       910326aa-d24f-4a76-a11d-495f4c986f06
    :DRILL_LAST_INTERVAL: 48.8593
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:58]
    :END:
What's wrong with
the elixir pipe
=1 |> &(&1 * 2).()=?
**** Answer:
Elixir syntax quirks:
need extra parentheses:
=1 |> (&(&1 * 2)).()=
to make this work. 
According to /iex/,
=&(&1 * 2).(1)= is 
still a function.
*** functions                                                         :drill:
    SCHEDULED: <2019-02-08 Fri>
    :PROPERTIES:
    :ID:       91acb2bf-a498-4293-a90e-abfdf10065c4
    :DRILL_LAST_INTERVAL: 45.5764
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:14]
    :END:
What happens in
the elixir expression
=(&(&1 * 2).(5)).(2)=?
**** Answer:
This evaluates the product
to =4= and then complains
that it can't apply =5=
to that result.
*** piping                                                            :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       cabba64b-4d57-4e31-b1d9-6637fe788401
    :DRILL_LAST_INTERVAL: 55.0177
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:57]
    :END:
Why is piping actually
not such a great idea
for Elixir?
**** Answer:
Because Elixir aims to
be functional but piping
is imperative and should
be restricted to something
like monads.
In addition, it causes a 
lot of bad design decisions, 
such as function capturing 
and =.()=.
*** piping                                                            :drill:
    SCHEDULED: <2019-02-06 Wed>
    :PROPERTIES:
    :ID:       061a7832-7aa3-4360-935c-c4ee33239ca5
    :DRILL_LAST_INTERVAL: 44.4678
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:13]
    :END:
How to pipe something into
the second argument of a
function =Foo.bar/2=?
**** Answer:
With a capture 
=val |> (&Foo.bar(arg1,&1)).()=
where =arg1= is a constant for
the first argument. So
=Foo.bar= is called as
=Foo.bar(arg1,val)=.
*** processes							      :drill:
    SCHEDULED: <2019-02-05 Tue>
    :PROPERTIES:
    :ID:       3fb4f52e-25a2-4a2f-bbda-74edb157da01
    :DRILL_LAST_INTERVAL: 43.3861
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:13]
    :END:
What is a /GenServer/?
**** Answer:
A normal process with
some predefined behaviour
that allows error tracking
and makes it fit in a
supervision tree. In addition
it has a standard set of
interface functions.
*** piping                                                            :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       b5c94bd0-24dc-43fb-b267-69391b1b74ee
    :DRILL_LAST_INTERVAL: 55.0177
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:58]
    :END:
What is the mechanism
of piping in elixir?
**** Answer:
It pipes a value into 
the first argument of
a function /call/ to the
right.
** emacs
*** dired                                                             :drill:
    SCHEDULED: <2019-03-14 Thu>
    :PROPERTIES:
    :ID:       96f0638e-83e2-4767-9281-29941dbd7f39
    :DRILL_LAST_INTERVAL: 109.5693
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-24 Sat 12:28]
    :END:
How to copy a file name
from a dired window to the
clipboard?
**** Answer
Pressing ~w~ will copy the
file-name at point,
~0 w~ will copy the
complete path of the file
at point.
*** dired                                                             :drill:
    SCHEDULED: <2019-03-15 Fri>
    :PROPERTIES:
    :ID:       00cd7121-5f6d-4114-8949-1668d32c535b
    :DRILL_LAST_INTERVAL: 116.1691
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-19 Mon 16:50]
    :END:
How to open a file with
the default application
without any further 
configuration?
**** Answer:
Type ~!~ or ~&~ (for asynchronous
operations) and type ~xdg-open~
at the prompt.
*** dired                                                             :drill:
    SCHEDULED: <2019-02-14 Thu>
    :PROPERTIES:
    :ID:       8bac2d7a-f499-4ce9-b01c-d5fe2567f23a
    :DRILL_LAST_INTERVAL: 98.8359
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-07 Wed 12:14]
    :END:
How to make hidden files
disappear automatically in
a dired buffer?
**** Answer:
Write a function to do the
~%m <regexp>~ selection and
~k~ line-kill using
~dired-mark-files-regexp "^\\."~
and
~dired-do-kill-lines~ and add
it to one of the dired hooks run
when entering a directory.
*** dired                                                             :drill:
    SCHEDULED: <2019-02-17 Sun>
    :PROPERTIES:
    :ID:       00704dd6-826f-4674-a526-75a989c5dcb5
    :DRILL_LAST_INTERVAL: 80.2475
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-29 Thu 11:32]
    :END:
What is ~dired-after-readin-hook~
for?
**** Answer:
This is for functions to be run
whenever a ~revert-buffer~ event
occurs. Note that these functions
should not cause a ~revert-buffer~,
otherwise an infinite recursion
would occur.
*** dired                                                             :drill:
    SCHEDULED: <2019-02-21 Thu>
    :PROPERTIES:
    :ID:       7cde257f-313c-46ca-8ed9-12ac3efdfa3c
    :DRILL_LAST_INTERVAL: 102.4197
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-11 Sun 20:37]
    :END:
How to prevent dot-files
from being displayed in a 
dired window?
**** Answer:
Select them with ~%m ^\.~ and
press ~k~ to suppress their
display.
*** dired                                                             :drill:
    SCHEDULED: <2019-03-28 Thu>
    :PROPERTIES:
    :ID:       7ff99fbd-58a8-440c-a75d-8cf0aaa0a0dc
    :DRILL_LAST_INTERVAL: 129.8125
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:16]
    :END:
How to suppress the display
of certain files in a dired
window?
**** Answer:
If they can be described by
a regular expression, select
them with ~%m <regex>~ and press
~k~ to remove them from display.
*** dired                                                             :drill:
    SCHEDULED: <2019-03-28 Thu>
    :PROPERTIES:
    :ID:       75dbb131-db54-40bd-b6eb-0d7934228689
    :DRILL_LAST_INTERVAL: 129.8125
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:18]
    :END:
How to make suppressed files
reappear in a dired window?
**** Answer:
With ~revert-buffer~, which is
bound to ~g~ in a dired buffer.
*** elisp							      :drill:
    SCHEDULED: <2019-04-28 Sun>
    :PROPERTIES:
    :ID:       bd0866b9-d814-42f9-8f37-d5352e36c314
    :DRILL_LAST_INTERVAL: 211.8678
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.7
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-28 Fri 15:33]
    :END:
What is the difference between setting 
a variable with =set= vs =setq=?
**** Answer:
In =setq= there is no attempt to evaluate
the first argument, it is assumed quoted.
*** elisp							      :drill:
    SCHEDULED: <2019-07-01 Mon>
    :PROPERTIES:
    :ID:       85d6aa60-e332-4b78-8237-f498b08c5748
    :DRILL_LAST_INTERVAL: 215.9771
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-27 Tue 11:31]
    :END:
What is the difference between 
setting a variable with /set/ vs /let/?
**** Answer:
Variables set with =let varlist body=
are only visible within /body/.
*** elisp							      :drill:
    SCHEDULED: <2019-09-14 Sat>
    :PROPERTIES:
    :ID:       454a9228-a12f-4b0a-95b8-bdb511d7c400
    :DRILL_LAST_INTERVAL: 283.8175
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.04
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-04 Tue 14:14]
    :END:
What is the problem when variables
in the /varlist/ of a =let= have value
/nil/ even though values were assigned to them?
**** Answer:
Check for proper parenthesing: the /varlist/ 
can contain variablenames and =(variable value)=
pairs, only in the latter case is the =variable=
asigned a value. A list of the form 
=(symbol1 symbol2)= creates two variables names 
=symbol1= and =symbol2= with values =nil=, 
not a variable name =symbol1= with value 
=symbol2=.
*** elisp							      :drill:
    SCHEDULED: <2020-01-09 Thu>
    :PROPERTIES:
    :ID:       a274fee8-a3cf-4332-a890-abb36b312e6c
    :DRILL_LAST_INTERVAL: 368.0113
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-06 Sun 18:04]
    :END:
What is the difference between =funcall= 
and =apply=?
**** Answer:
They are both used to call functions, the
only difference is how arguments are handled.
Whilst =funcall= treats the arguments after the 
function as arguments of the function, =apply=
inserts them into the list given by the last 
argument.
*** elisp							      :drill:
    SCHEDULED: <2019-04-29 Mon>
    :PROPERTIES:
    :ID:       ea6336b3-1a9a-41c1-8bc8-0243842e4b9c
    :DRILL_LAST_INTERVAL: 214.5147
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 4.111
    :DRILL_EASE: 2.76
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-26 Wed 14:50]
    :END:
What is the problem when a call to =apply= 
results in a lisp error: /wrong-type-argument 
listp argname/?
**** Answer:
The last argument of =apply= must be a list.
*** ess                                                               :drill:
    SCHEDULED: <2019-02-05 Tue>
    :PROPERTIES:
    :ID:       5c29e5fb-166f-4719-b7dc-227e792a87fb
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:33]
    :END:
How to prevent the
underscore to =<-=
conversion when using
R in ess?
**** Answer:
Typing underscore
twice will convert it back.
Alternatively, run
=(ess-toggle-S-assign nil)=
in the scratch pad or .emacs
or configure
=ess-smart-S-assign= to use
something else.
*** help							      :drill:
    SCHEDULED: <2019-02-26 Tue>
    :PROPERTIES:
    :ID:       476f8fe2-1d65-47d5-a264-1535c569ea9d
    :DRILL_LAST_INTERVAL: 60.975
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:04]
    :END:
How to check if a
key-sequence is bound
to a function?
**** Answer:
With
=f1 k <key-sequence>=.
*** help							      :drill:
    SCHEDULED: <2019-02-11 Mon>
    :PROPERTIES:
    :ID:       c610f330-fb43-4e28-846f-b19118ec4fc8
    :DRILL_LAST_INTERVAL: 48.8593
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:14]
    :END:
How to find the 
key-binding for a
function?
**** Answer:
With the where-is
feature:
=f1 w <funcname>=.
*** maxima and emacs                                                  :drill:
    SCHEDULED: <2019-03-27 Wed>
    :PROPERTIES:
    :ID:       9225504c-7004-4d0a-bcf0-5420e12ac056
    :DRILL_LAST_INTERVAL: 129.3288
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.556
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:17]
    :END:
How useful is Maxima mode in
interacting with a maxima 
process from a file?
**** Answer:
Minor maxima mode is sufficient 
for the interaction. Major maxima
mode just adds some conveniences
like syntax highlighting, identation,
access to the help system etc.
*** maxima and emacs                                                  :drill:
    SCHEDULED: <2019-07-04 Thu>
    :PROPERTIES:
    :ID:       589df8d5-0af8-4526-ac3c-8a026c814a6a
    :DRILL_LAST_INTERVAL: 184.2865
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:46]
    :END:
How to send maxima output
to other buffers?
**** Answer:
With /M-x maxima-insert-last-output-tex/
from the recipient buffer or with one
of the functions from the In/Out menu
in the maxima buffer itself.
*** maxima and emacs                                                  :drill:
    SCHEDULED: <2019-03-04 Mon>
    :PROPERTIES:
    :ID:       b157fc2f-31fa-4511-a941-1d831df508d7
    :DRILL_LAST_INTERVAL: 142.4286
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:17]
    :END:
How to interact from a
file buffer with Maxima?
**** Answer:
In the simplest case by
enabling maxima minor mode
with /M-x maxima-minor-mode/
and then using the /C-c = .../
shortcuts to communicate with
the Maxima process.
*** modes                                                             :drill:
    SCHEDULED: <2019-03-31 Sun>
    :PROPERTIES:
    :ID:       1bb3c212-2f7f-421f-9862-3618be826c8f
    :DRILL_LAST_INTERVAL: 133.0989
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:19]
    :END:
How are minor modes
disabled interactively?
**** Answer:
Normally by calling the
minor mode function:
~M-x some-mode-function-mode~
because minor mode functions
should be written to toggle
the mode if called interactively
without a prefix argument. 
Alternatively, call the minor 
mode function with a negative 
prefix argument to disable it, 
with a positive one to enable 
it.
*** packages                                                          :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       342171b0-e1da-4aaf-8973-2278d7cbe964
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:00]
    :END:
How to uninstall packages
installed with /elpa/?
**** Answer:
Simply delete the
corresponding directory
in ~/.emacs/elpa. Note
that restarting emacs
will clean the =load-path=.
*** packages                                                          :drill:
    SCHEDULED: <2019-01-19 Sat>
    :PROPERTIES:
    :ID:       572cfadf-eabd-4894-adf6-4882fb06f99a
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:01]
    :END:
What to do if there 
is no package 
/org-plus-contrib/ in
the package list?
**** Answer:
Add https://orgmode.org/elpa/
to the =package-archives=
list in the configuration
file for emacs.
*** packages                                                          :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       e4d4e6ba-4f18-4f2e-8f8c-1a4dcb1770f0
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:46]
    :END:
What to do if there is
no =org-drill= command
available in an org file?
**** Answer:
Install /org-plus-contrib/.
Note that this requires
https://orgmode.org/elpa/
in the =package-archives=
list.
*** org-mode                                                          :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       c91ef50b-eb39-46f5-bb7e-f5964fe104ec
    :DRILL_LAST_INTERVAL: 60.975
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-17 Sat 14:29]
    :END:
How to escape slashes
and tildes when writing
file-paths?
**** Answer:
Put them in a =verbatim=
environment delimited
by =.
*** org-mode							      :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       9a994bce-9e78-4b2e-8946-bbf23a422aab
    :DRILL_LAST_INTERVAL: 48.7373
    :DRILL_REPEATS_SINCE_FAIL: 13
    :DRILL_TOTAL_REPEATS: 25
    :DRILL_FAILURE_COUNT: 4
    :DRILL_AVERAGE_QUALITY: 3.199
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-28 Wed 13:07]
    :END:
How to edit a source block?
**** Answer
Start a temporary buffer
in the native mode of the language with
ctrl-c ', edit and return to the org buffer
with ctrl-c '.
*** org-mode							      :drill:
    SCHEDULED: <2019-03-18 Mon>
    :PROPERTIES:
    :ID:       82776f42-ac4c-47ac-b03c-6cb5b1aca29e
    :DRILL_LAST_INTERVAL: 94.4877
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.455
    :DRILL_EASE: 1.9
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-14 Fri 14:55]
    :END:
How to insert a source block?
**** Answer:
Type *<s+TAB*, on a line by itself.
This will insert an empty source code 
block
#+BEGIN_EXAMPLE
#+BEGIN_SRC js

#+END_SRC
#+END_EXAMPLE
*** system                                                            :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       059a372a-cee6-4261-a4a7-f42144348b69
    :DRILL_LAST_INTERVAL: 121.1747
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-06 Sat 14:54]
    :END:
How to pipe stdin
into emacs?
**** Answer:
Normally not at all, use
/eshell/ or /M-!/ from within
emacs. The closest to piping
/echo string|emacs/ would be
/emacs –insert <(echo string)/
** gtk
*** Glade                                                             :drill:
    SCHEDULED: <2019-04-01 Mon>
    :PROPERTIES:
    :ID:       59cb39fe-f305-4457-99b8-c10a02bd5901
    :DRILL_LAST_INTERVAL: 100.4772
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 17:00]
    :END:
Where to put the
/glade/ file for an
application?
**** Answer:
Normally into ~$datadir/appname~.
However, it is more efficient
to use the ~Gio Resource~ API
and ~glib-compile-resources~ to
include it and other resources
as binaries into the program.
*** Glade                                                             :drill:
    SCHEDULED: <2019-05-09 Thu>
    :PROPERTIES:
    :ID:       39adf0ca-b1a8-4c8c-bd9b-7633c8105282
    :DRILL_LAST_INTERVAL: 132.7206
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:05]
    :END:
Does the /Widget name/
have to be set when 
developping interfaces 
with glade?
**** Answer:
No, but it is recommended
to set it to its /id/. This
way it can be styled
separately and it will
appear in ~widgetGetName~
and ~widgetGetPath~, which
makes debugging easier.
*** Glade                                                             :drill:
    SCHEDULED: <2019-06-02 Sun>
    :PROPERTIES:
    :ID:       db7ca2e8-0e28-4504-b11e-2bc57bf2aeed
    :DRILL_LAST_INTERVAL: 152.4375
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:47]
    :END:
What could be the
problem if a text
won't center in its
container?
**** Answer:
Check if there is
a trailing newline
and remove it.
*** Glade                                                             :drill:
    SCHEDULED: <2019-02-21 Thu>
    :PROPERTIES:
    :ID:       81aeee3a-8d0b-4e6b-a777-316f1cc22d42
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-04 Tue 14:14]
    :END:
What is the point
to have a widget
name in addition to
the window id?
**** Answer:
The widget-name and class
are used for css-type
styling. In addition,
they appear in the 
~widgetGetName~ and 
~widgetPath~ output.
The window id is 
merely used to extract
widgets from the builder.
** haskell
*** Equivalencies                                                     :drill:
    SCHEDULED: <2019-01-12 Sat>
    :PROPERTIES:
    :ID:       06a650ba-4265-4cb1-81cf-34b6ce73855f
    :DRILL_LAST_INTERVAL: 54.6176
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:15]
    :END:
Why is packing values
into a list with
something like
=flip (:) [] :: a -> [a]=
not such a superb idea?
**** Answer:
Because something like
~pure :: a->[] a~ or
~return :: a-> [] a~ seems
more appropriate since
list are both applicative
and monads. Called in the
right context, the type
annotations aren't even
necessary.
*** Equivalencies                                                     :drill:
    SCHEDULED: <2019-01-10 Thu>
    :PROPERTIES:
    :ID:       6cbdd105-1720-4c0d-b90b-f706b4659f05
    :DRILL_LAST_INTERVAL: 60.5827
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.25
    :DRILL_EASE: 2.56
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-11-10 Sat 12:01]
    :END:
Why are lambdas of the 
sort ~f=\x -> g x~ normally
not used?
**** Answer:
Matter of taste, but
=f = g= or
~f x = g x~ have the same
effect on the type of
~f~ and seem shorter.
*** Graphical UI                                                      :drill:
    SCHEDULED: <2019-02-01 Fri>
    :PROPERTIES:
    :ID:       52279f62-f8ff-4b0b-9277-27f1c2b219d6
    :DRILL_LAST_INTERVAL: 50.0864
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-13 Thu 16:16]
    :END:
Is there a better way to
turn off overloaded labels
in haskell-gi apart from
setting the flag for every
library involved?
**** Answer:
The flag-setting procedure
is depreciated as of
haskell-gi-0.21. Just list
=haskell-gi-overloading-0.0=
under ~extra-deps~ in the
stack.yaml file.
*** Graphical UI                                                      :drill:
    SCHEDULED: <2019-01-19 Sat>
    :PROPERTIES:
    :ID:       c10805dc-b69c-417b-956c-a1f3edba53f4
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:10]
    :END:
Should the /OverloadedLabels/
extension be turned off when
using haskell-gi libraries?
**** Answer:
Probably not, even though
the compiler takes longer,
the examples re setting
and getting attributes
only work with enabled
/OverloadedLabels/.
*** Graphical UI                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       abfed53e-a90c-4b08-afc9-032495b543c9
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-13 Tue 18:32]
    :END:
What is the /OverloadedLabels/
in /haskell-gi/ all about?
**** Answer:
This allows some abbreviations
of function names, for example
~widgetDoSomething w arg1 arg2 ...~
becomes
~#doSomething w arg1 arg2 ...~
where the ~#~ is set according
to the type of ~w~.
*** Graphical UI                                                      :drill:
    SCHEDULED: <2019-03-24 Sun>
    :PROPERTIES:
    :ID:       fe5d9ce8-8097-451d-97ab-5232dcf0a82b
    :DRILL_LAST_INTERVAL: 92.9635
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:31]
    :END:
What is the problem of
the Gtk bindings with
regards to type safety?
**** Answer:
The fact that the success of
casts to certain widget
types is only ascertained
at run-time. There should
be a mechanism like with the
persistent database where
*.glade files are analysed at
compile time like database
content, as well as the
types of new widgets.
*** Eta-JVM                                                           :drill:
    SCHEDULED: <2019-02-07 Thu>
    :PROPERTIES:
    :ID:       642f8607-14f4-466b-95e7-7c219f8bc85a
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:07]
    :END:
How to configure a haskell
stack project to be compatible 
with eta?
**** Answer:
As of [2018-11-23], eta
needs ghc-7.10.3, whose
last lts is 6.35, so
stack can be configured
to use that. Check for
libraries for eta on 
https://github.com/typelead/eta-hackage
and list them as extra
dependencies if they are 
newer than those from
lts 6.35.
*** Eta-JVM                                                           :drill:
    SCHEDULED: <2019-02-07 Thu>
    :PROPERTIES:
    :ID:       cde34e59-1e2f-4fbc-8d40-c5547c98a769
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:06]
    :END:
How to turn a stack project
into an /etlas/ project?
**** Answer:
Just move the .cabal file
over and put the sources
from /app/ and /src/ into the
/src/ directory of the /etlas/
project. These projects
just seem to be regular
/cabal/ projects.
*** Importing                                                         :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       2a1a6494-8fa1-42b9-9ede-aded843d9cd8
    :DRILL_LAST_INTERVAL: 25.0
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 16:50]
    :END:
Is there a difference
between =import ModuleName as MN=
and =import qualified ModuleName as MN=?
**** Answer:
Yes, in the first case names from
=ModuleName= are available both as
=name= and =MN.name=, in the second case
only =MN.name= would be in scope.
*** Libraries                                                         :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       52f7cbf3-854d-463a-8e87-c94fb8cb96f0
    :DRILL_LAST_INTERVAL: 19.8902
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:24]
    :END:
What to use for
differentiation
in Haskell?
**** Answer:
Library =ad= from
http://hackage.haskell.org/package/ad.
*** Language Extensions                                               :drill:
    SCHEDULED: <2019-02-08 Fri>
    :PROPERTIES:
    :ID:       ec725448-fcca-4827-87aa-973ed7bf1ae6
    :DRILL_LAST_INTERVAL: 56.3992
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-14 Fri 14:53]
    :END:
What does
~Typename{..}~
signify?
**** Answer:
This is a pattern match
of record ~Typename~ and
part of language extension
=RecordWildcards=.
*** Megaparsec Parsing                                                :drill:
    SCHEDULED: <2019-02-01 Fri>
    :PROPERTIES:
    :ID:       718f72d5-a181-425a-8adc-c8b3d2dee3f2
    :DRILL_LAST_INTERVAL: 48.6837
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-14 Fri 14:57]
    :END:
Why should megaparsec 
parsers not be built with
~many~ and ~satisfy~?
**** Answer:
Because Megaparsec has the
more efficient ~takeWhileP~
and ~takeWhile1P~ combinators.
If possible, these should be
used first.
*** Megaparsec Parsing                                                :drill:
    SCHEDULED: <2019-02-13 Wed>
    :PROPERTIES:
    :ID:       c0bad81a-fa4c-435a-87b9-158e5ee1228e
    :DRILL_LAST_INTERVAL: 58.0238
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:50]
    :END:
Why is ~parse~ not ideal
for testing Megaparsec
parsers in ghci?
**** Answer:
Because its output in case
of an error leaves to be 
desired. Use 
~parseTest <parser> <stringput>~
instead.
*** Megaparsec Parsing                                                :drill:
    SCHEDULED: <2019-02-17 Sun>
    :PROPERTIES:
    :ID:       4ec40236-383b-4b61-95d5-ce8c7f3a0e7f
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:54]
    :END:
Why is the description
of the second argument in
~parse::Parsec e s a -> String -> s-> ...~
as /source file/ a bit of a
misnomer?
**** Answer:
The second argument is a ~String~
describing a source to be used
as a description in error messages.
As such it is more general than
a source file.
*** Megaparsec Parsing                                                :drill:
    SCHEDULED: <2019-02-12 Tue>
    :PROPERTIES:
    :ID:       bc50b4e1-6941-4793-9b94-3d0c4e00a1d3
    :DRILL_LAST_INTERVAL: 58.0238
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-16 Sun 17:49]
    :END:
How to define a ~noSpace~ parser
to disallow spaces between a numeral
and its sign?
**** Answer:
Use 
~noSpace=space empty empty empty~
with ~space~ from the Char.Lexer
submodule. Then
~signed noSpace <numberParser>~
will not allow any spaces.
*** Megaparsec Parsing                                                :drill:
    SCHEDULED: <2019-02-24 Sun>
    :PROPERTIES:
    :ID:       4ba27761-77b1-4434-a2e3-daf10b27dd08
    :DRILL_LAST_INTERVAL: 66.586
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.25
    :DRILL_EASE: 2.6
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 15:03]
    :END:
What is the difference between
parsing a /decimal/ and an /integer/?
**** Answer:
Parsing an /integer/ is more
general in that white-space
is handled in addition to
the /decimal/.
*** Mutable References                                                :drill:
    SCHEDULED: <2019-03-06 Wed>
    :PROPERTIES:
    :ID:       9b5be327-b385-4703-bcb1-7088c114c007
    :DRILL_LAST_INTERVAL: 92.6338
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:28]
    :END:
Is it better to use STRef
or IORef for mutable
references?
**** Answer:
If the IO-functionality is
not required, use STRef
because its value can be
accessed in pure functions.
*** Option Parsing                                                    :drill:
    SCHEDULED: <2019-02-16 Sat>
    :PROPERTIES:
    :ID:       5c427f07-72fa-45a2-9a09-014e5c69c1bf
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-29 Thu 11:32]
    :END:
What to do when the
behaviour of ~auto~ in
Option.Applicative 
parsing is insufficient?
**** Answer:
Build alternatives to
~auto~ using ~eitherReader~
in a similar way to
~auto~. This can be used
to adapt pretty much
any parser to be used
for option parsing.
*** Option Parsing                                                    :drill:
    SCHEDULED: <2019-03-06 Wed>
    :PROPERTIES:
    :ID:       28adfa6a-bdad-4292-b057-dce64a50b4af
    :DRILL_LAST_INTERVAL: 95.8247
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-30 Fri 12:24]
    :END:
What does it mean to
allow multiple use of 
an option?
**** Answer:
This means to set up
option parsing so that
the same option can be
used multiple times in
accordance with getopt
behaviour.
*** Option Parsing                                                    :drill:
    SCHEDULED: <2019-04-21 Sun>
    :PROPERTIES:
    :ID:       0944ddfc-d04d-40d3-b55a-c3b9d0b56f0c
    :DRILL_LAST_INTERVAL: 124.321
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 12:07]
    :END:
How to enable multiple
options when parsing
with Options.Applicative?
**** Answer:
By combining parsers
with ~many~ or ~some~ from
typeclass ~Applicative~.
*** Option Parsing                                                    :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       b1ae3e7d-166d-4569-99ba-9f1f59151783
    :DRILL_LAST_INTERVAL: 31.4344
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 2.834
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-14 Fri 14:59]
    :END:
How to set up Options.Applicative
to parse a multiple use of a string 
option into a list of values?
**** Answer:
Construct an option parser
~single=option (str >>= return.words) (...)~
and concatenate them into
~multi=concat <$> some single~.
The ~multi~ can then be used to
initialise a list of strings.
*** Option Parsing                                                    :drill:
    SCHEDULED: <2019-03-25 Mon>
    :PROPERTIES:
    :ID:       41cd5845-028f-4f1e-857c-b7b490837cf2
    :DRILL_LAST_INTERVAL: 104.688
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-10 Mon 15:48]
    :END:
How to set up Options.Applicative
to accept several arguments for
an option?
**** Answer:
Not at all, this contravenes
POSIX conventions where an option
has either none or one argument.
*** Patterns                                                          :drill:
    SCHEDULED: <2019-01-21 Mon>
    :PROPERTIES:
    :ID:       5d646004-d20a-42d3-ba37-7f00357a7608
    :DRILL_LAST_INTERVAL: 43.085
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-09 Sun 14:36]
    :END:
What is the point of
record wildcards?
**** Answer:
In a pattern match
~f (R {..})= ...~
the field names of 
record ~R~ can be used
directly on the right
hand side.
*** Patterns                                                          :drill:
    SCHEDULED: <2019-02-14 Thu>
    :PROPERTIES:
    :ID:       80e7675c-fe8e-455f-9fbf-851824110e18
    :DRILL_LAST_INTERVAL: 60.975
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:23]
    :END:
What is the effect
of @ in a pattern
match?
**** Answer:
It introduces a name
for a pattern, eg
~s@(x:xs)~ introduces
the name ~s~ for the
pattern ~(x:xs)~.
*** Persistent Database						      :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       95bbedc2-6598-4497-a9ab-2d0ef5010141
    :DRILL_LAST_INTERVAL: 23.2095
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:16]
    :END:
What is the problem when
running a query without a
migration?
**** Answer:
This may result in runtime
errors if the database doesn't
exist or its schemata have 
changed from what Haskell
thinks they should be.
*** Persistent Database						      :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       76b97043-e5b8-466c-9dc8-5ac7ad1adb38
    :DRILL_LAST_INTERVAL: 23.2095
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:15]
    :END:
Is it possible to do a
=runSqlite= without a
migration?
**** Answer:
Only if it is given a type:
#+BEGIN_SRC haskell
runSqlite' :: (MonadUnliftIO m) => Text 
    -> ReaderT SqlBackend (NoLoggingT (ResourceT m)) a 
    -> m a
runSqlite' = runSqlite
#+END_SRC
because the compiler can not
infer the sql backend type
without a migration.
*** Persistent Database                                               :drill:
    SCHEDULED: <2019-02-12 Tue>
    :PROPERTIES:
    :ID:       24ce2105-3e0a-4d09-9eab-4fb1a8483583
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:53]
    :END:
How to do a /LIKE/
query with 
=Database.Persist=?
**** Answer:
Implement a Filter
#+BEGIN_SRC haskell
Filter Tablename 
       (Left $ T.concat ["%",value,"%"])
       (BackendSpecificFilter "like")
#+END_SRC
and use it in a =selectList=
query. For postgres,
use "ILIKE" instead of "like"
if case insensitive matching
is desired.
*** Projects                                                          :drill:
    SCHEDULED: <2019-03-03 Sun>
    :PROPERTIES:
    :ID:       5bf75dbb-5154-4d5f-aeca-cbb895a30c51
    :DRILL_LAST_INTERVAL: 57.3815
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:02]
    :END:
How to install =H= for
global access?
**** Answer:
Install /inline-r/ with
=stack install inline-r=,
put the /inline-r/ as
dependency into
=extra-deps= in the
global /stack.yaml/ and
=stack install H=. Then
run =stack exec H= outside
of a project directory.
*** Projects                                                          :drill:
    SCHEDULED: <2019-02-12 Tue>
    :PROPERTIES:
    :ID:       e8dc219a-6c86-4af1-84f9-ab36fb540ac6
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:55]
    :END:
Why does the =H= executable
in the global path not work?
**** Answer:
Because it is a /ghci/-wrapper
which tries to load modules
from the /inline-r/ library, which
would need to be installed with 
/cabal/. Try to run it as
=stack exec H=, which should work
if /inline-r/ is installed in the 
global /stack/ project.
*** Projects                                                          :drill:
    SCHEDULED: <2019-02-05 Tue>
    :PROPERTIES:
    :ID:       49051250-a767-47b4-b547-48bb1620ae85
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:26]
    :END:
What is the /Setup.hs/
file for in the project
directory?
**** Answer:
This is for package 
installation done
with the
=runhaskell configure=
=runhaskell build=
=runhaskell install=
sequence.
*** Records                                                           :drill:
    SCHEDULED: <2019-04-23 Tue>
    :PROPERTIES:
    :ID:       af990957-7f50-4f0b-b373-4f3af8188d58
    :DRILL_LAST_INTERVAL: 135.5658
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-08 Sat 15:35]
    :END:
How to define a default
for a record data-type?
**** Answer:
Use module ~Data.Default~ 
where a ~Default~ type-class
with one method ~def~ is
defined. Define an 
~instance Default Typename~
  ~where def= Typename {...}~
of that type-class and use
it.
*** Records                                                           :drill:
    SCHEDULED: <2019-04-02 Tue>
    :PROPERTIES:
    :ID:       e3d0bdac-2ae6-41b4-9e79-8a1afc750123
    :DRILL_LAST_INTERVAL: 117.4563
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 13:01]
    :END:
How to use the default of
a record type that is an
instance of ~Data.Default~?
**** Answer:
To get a record simply use
~valname=def~ for ~valname~ of
the right type or 
~valname=def {...}~ where
particular fields are 
changed in the curly 
brackets.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-04-07 Sun>
    :PROPERTIES:
    :ID:       cdffe517-05cc-4c0f-aaec-ade7fe6e06b8
    :DRILL_LAST_INTERVAL: 101.7564
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:55]
    :END:
How to download sources
of a package?
**** Answer:
~stack unpack <package> --to <directory>~
will create <directory>/<package> and put
the source of <package> in it. Note the
<package> can then be built using
the usual ~stack init~, ~stack build~
sequence.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-05-23 Thu>
    :PROPERTIES:
    :ID:       fe3f6605-3b40-4ae4-a983-8f0cf6c3c8bf
    :DRILL_LAST_INTERVAL: 139.4152
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:38]
    :END:
How to prevent heavy
downloads in a new stack project?
**** Answer:
By running
~stack init --resolver <resolver>~
with an existing /<resolver>/. This
way, the resolver packages don't 
need to be downloaded and an
existing compiler will be used,
rather than installed by
~stack build~.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       9e4793a7-2806-4128-aac9-54cf167f6794
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-12 Mon 15:44]
    :END:
What to do if
~stack new <projname>~
generates a lot of output?
**** Answer:
Normally nothing, it just
downloads a list of packages
available upstream. Aborting
~stack new~ may corrupt index
files used later by ~stack init~
and is discouraged.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-05-23 Thu>
    :PROPERTIES:
    :ID:       72bf6038-1fad-4b37-bd4a-dc5f3bc01c9b
    :DRILL_LAST_INTERVAL: 139.4152
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:40]
    :END:
When to set the 
resolver for a new 
project?
**** Answer:
In ~stack init --resolver <resolver>~
in the project directory created
by ~stack new~.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-03-22 Fri>
    :PROPERTIES:
    :ID:       38c86c4b-b664-4b90-b4fe-3ea267527e72
    :DRILL_LAST_INTERVAL: 92.9635
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 15:03]
    :END:
Is it possible to run
an executable from a
stack project globally?
**** Answer:
Set the ~STACK_YAML~ variable
to the ~stack.yaml~ file of the 
project in question before 
calling ~stack exec~, ~stack ghci~
et. al.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-03-29 Fri>
    :PROPERTIES:
    :ID:       52a765f9-0d8c-4d7e-9d42-75ab0ef833f6
    :DRILL_LAST_INTERVAL: 97.6271
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:23]
    :END:
How to install something
like /H/ globally with stack?
**** Answer:
Since /H/ calls /ghci/ and loads
some modules, these dependencies
probably need to be listed in
the ~extra-deps~ of the global
configuration before doing
a global ~stack install H~.
Or they should be given as
options in =stack build= as
ie =–extra-deps <library>=.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-03-31 Sun>
    :PROPERTIES:
    :ID:       1142bc6e-d5e6-4620-b2e8-d55dbce8dac0
    :DRILL_LAST_INTERVAL: 100.4772
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:26]
    :END:
What is the effect of
the ~--solver~ option
in ~stack init~?
**** Answer:
It creates an ~extra-deps:~
section in /stack.yaml/ where
it puts all the dependencies
listed in /package.yaml/ that
couldn't be found in the 
resolver.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-03-08 Fri>
    :PROPERTIES:
    :ID:       8b02051c-fc96-4886-b8ab-b3d5fe413c81
    :DRILL_LAST_INTERVAL: 80.6617
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:52]
    :END:
What to do if the
~stack new projname~ 
creates a directory 
but doesn't complete?
**** Answer:
Try to make changes and 
run 
~stack init --ignore-subdirs --force~
inside the created project-
directory.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-04-13 Sat>
    :PROPERTIES:
    :ID:       89f22ca5-c479-4e9a-b7b7-89548e7c4558
    :DRILL_LAST_INTERVAL: 104.688
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:58]
    :END:
What to do if 
~stack new projname~ complains
about missing package
identifiers in the indices?
**** Answer:
This is due to a corruption
in the indices, remove
~/.stack/indices and run
~stack init~ with options
~--ignore-subdirs~ and
~--force~ in the project
directory.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       f2ea2f06-02c2-4b79-82fa-415349c15d66
    :DRILL_LAST_INTERVAL: 80.6617
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-04 Tue 14:13]
    :END:
What is the best way
to access documentation
for dependent libraries
from a stack project?
**** Answer:
Pass the ~--haddock-deps~
flag to the build or
test commands to generate
local documentation and run
~stack haddock --open <dependency>~,
which will open it in
a web-browser.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-03-11 Mon>
    :PROPERTIES:
    :ID:       50a3cb7d-d17d-4fa7-8ce3-08f77f224700
    :DRILL_LAST_INTERVAL: 95.2953
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 12:54]
    :END:
Why is the ~--haddock~
flag not recommended
during development?
**** Answer:
It often takes too long
and generates documentation
that needs to be updated
anyway. Use 
~--haddock-deps~ instead to
just generate local 
documentation of dependencies.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       4f99d1ae-8a15-4be1-908b-c57fcd3f588f
    :DRILL_LAST_INTERVAL: 45.6543
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.875
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-28 Wed 13:06]
    :END:
How to generate searchable
documentation for a project?
**** Answer:
Run
~stack hoogle -- generate --local~
to generate a /hoogle/ database
and start a web-server that serves
a local hoogle search page via
~stack hoogle -- server --local --port=8080~
which can be accessed at
http://localhost:8080.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-02-21 Thu>
    :PROPERTIES:
    :ID:       d41f5b91-7f65-4a8e-8128-74e742e1b5f4
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-04 Tue 14:16]
    :END:
How should tools like ghc-mod,
hlint, hoogle or intero be
installed?
**** Answer:
Locally, in a project directory
with ~stack build <tool>~, or, better
yet ~stack build --copy-compiler-tool <tool>~.
This has the effect of just copying the
tool for projects using the same version
of the compiler even if the lts is
different. ~stack exec~ will then arrange
for the executables to end up in the 
correct path.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-04-15 Mon>
    :PROPERTIES:
    :ID:       b5a661db-a1ad-441d-8dd1-b06d98981479
    :DRILL_LAST_INTERVAL: 117.4563
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 15:02]
    :END:
Is there a way to
set language extensions
project-wide?
**** Answer:
Yes, they language
extensions listed under
/default-extensions/ in the
/.cabal/ file will be applied
project-wide.
*** Stack use                                                         :drill:
    SCHEDULED: <2019-05-06 Mon>
    :PROPERTIES:
    :ID:       e9208320-472c-45d6-ae43-44bba8efdfe1
    :DRILL_LAST_INTERVAL: 136.0679
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:28]
    :END:
What are the use cases
for ~stack install~?
**** Answer:
It should only be used
to install haskell 
packages unrelated to
development, such as
/pandoc/ but never things
like /ghc-mod/ or /intero/,
which should be sandboxed
with a project.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       637f3d43-d8d1-4cc7-9c3c-7c12a4d0ebef
    :DRILL_LAST_INTERVAL: 3.86
    :DRILL_REPEATS_SINCE_FAIL: 2
    :DRILL_TOTAL_REPEATS: 1
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-03 Thu 14:21]
    :END:
What is the main point
when constructing Gadts?
**** Answer:
That the constructors can
have any signature as long
as they return a =T a= for
some =a= when constructing
a =data T a=.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       c43161d2-52e1-4b6c-b601-0ee1dceea559
    :DRILL_LAST_INTERVAL: 3.86
    :DRILL_REPEATS_SINCE_FAIL: 2
    :DRILL_TOTAL_REPEATS: 1
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-03 Thu 14:22]
    :END:
What is the real clincher
for using Gadts?
**** Answer:
The ease of pattern matching
where things like
#+BEGIN_SRC haskell
eval (Lit i)=i
eval (IsZero b)=b
#+END_SRC
become possible for
a =data T a= with constructors
=Lit :: Int -> T Int=
and
=IsZero::Int -> T Bool=.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       8e91b202-18cc-4812-8941-4cb68fed97ee
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 13:57]
    :END:
Are there any datatypes
that are not algebraic
in Haskell?
**** Answer:
Yes, in-built datatypes like
=Int=, =Float= are not algebraic 
because they don't have 
constructors.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       ada8ad27-b160-44f2-a34e-f915af3b44b5
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:41]
    :END:
How to use row
polymorphism
in Haskell?
**** Answer:
This would have to
be implemented by a
type-class requiring
certain access functions
which implement access to
certain fields.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-22 Tue>
    :PROPERTIES:
    :ID:       9dd69844-db40-4302-97c5-ef6292bf953a
    :DRILL_LAST_INTERVAL: 23.212
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-30 Sun 15:44]
    :END:
What is row 
polymorphism?
**** Answer:
A way to have a
product type in
record notation
having certain
fields with every
record type having 
these fields matching.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       82b78de8-4e30-401e-9245-d694f7405a61
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:46]
    :END:
Why is the monad 
=((->) r :: * ->  * )=
considered a reader?
**** Answer:
Because =Reader= is essentially
a =newtype= around =(r -> a)=,
=newtype Reader r a = Reader { runReader :: r -> a}=
even though it is nowadays defined as the
identity version of =ReaderT=.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       fd6f0979-7aaa-4f1a-9d13-19e908461cc5
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:49]
    :END:
Why is =fmap . fmap= the same as
=fmap fmap fmap=?
**** Answer:
Because this brings in the 
=fmap= of =((->) e)=, which is
composition.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       8e719c1e-ee1f-4195-8a16-0e5ef82002f1
    :DRILL_LAST_INTERVAL: 8.2449
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.8
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:44]
    :END:
What is the significance
of the =((->) e)= monad
regarding λ-calculus?
**** Answer:
It implements the =K = λxy.x=
combinator as
=pure :: a -> e -> a=
and the =S = λxyz. xz(yz)= 
combinator as 
=<*> :: (e -> a -> b) -> (e -> a) -> e -> b=
in its =Applicative= instance. 
Every λ-calculus expression can be 
written using these two combinators.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       0b6c5c60-7949-4624-9bfc-bc888c233d1d
    :DRILL_LAST_INTERVAL: 21.1093
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 17:59]
    :END:
Why is something like 
~data Type = forall a.Const a~
called an existential data-type?
**** Answer:
Since constructors prove the
existence of something, one like
above proves the existence of an
=a= that leads to a value of =Type=.
Compare this to
~data Type a = Const a~
where =a= is universally
quantified, ie there is
a value of =Type= for every
=a=.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       f8d7d6c7-bf04-4d14-954c-4fb46c395ec1
    :DRILL_LAST_INTERVAL: 23.212
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:52]
    :END:
What is the logical
meaning of the arguments
in a type like
=Knockable s -> Door s ->…=?
**** Answer:
It means that the function
requires a proof that =s= is
/Knockable/ and a /Door/.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       7e581857-0446-4108-b094-a32242863369
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:53]
    :END:
Why are existential data-types
with singleton types =Sing s=
useful?
**** Answer:
Because for something like
=data Something = forall s. MkSth (Sing s)=
it is possible to match against
=MkSth a= checking for all the values,
=check (MkSth arg) = case arg of value1 ->;...=
*** Types                                                             :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       e04af4fc-d70a-42e6-8888-2ae3d346c250
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:53]
    :END:
Why is something like
#+BEGIN_SRC haskell
  Data Eq a => Set a = MkSet [a]
#+END_SRC
better declared using Gadt syntax?
**** Answer:
Because for
#+BEGIN_SRC haskell
data Set a where
  MkSet::Eq a => [a] -> Set a
#+END_SRC
a pattern match with =MkSet=
provides an implicit dictionary
for =Eq= whereas in the non-Gadt
version such a pattern match
would require an explicit
=Eq a= constraint.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       958d7ce6-8ca9-4606-9716-5f3a037e80a6
    :DRILL_LAST_INTERVAL: 20.386
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:21]
    :END:
What does it mean to
say that an existential
datatype is the collection
of its observations?
**** Answer:
Observations are the access 
functions provided by the
constraints. For example
=Integral= provides observation
=toInteger= whereas =Num= provides
no observations at all.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       7334cd5b-a50d-4ac4-95d2-1b8068923185
    :DRILL_LAST_INTERVAL: 23.212
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:18]
    :END:
Why is =a -> b= not always
the same as
=forall a b.a -> b=?
**** Answer:
Because the =forall= will 
change the scope of the
type variables =a, b= if
language extension
=ScopedTypeVariables= is in
effect.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-12 Sat>
    :PROPERTIES:
    :ID:       e95c7998-d3a3-4471-bdfe-77028d9a709a
    :DRILL_LAST_INTERVAL: 23.2095
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-20 Thu 13:16]
    :END:
What is the 
=LambdaCase= extension
in Haskell?
**** Answer:
Syntactic sugar that
allows to write
#+BEGIN_SRC haskell
\case
   First -> ...
   Second -> ...
#+END_SRC
instead of 
=\x -> case x of ...=.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       a2c85833-6883-45cc-9ce4-0a495fb9b074
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 14:58]
    :END:
What is a /singleton/
in Haskell?
**** Answer:
A type with exactly one 
inhabitant, usually a
parametrized type with
a type with one inhabitant
for each parameter value.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       86001f28-5ea1-40d2-ac0a-c6c53f29a587
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 14:52]
    :END:
What is the point of
getting a /kind/ in addition
to a /type/ in a declaration like
=data DoorState = Open|Closed|Locked=?
**** Answer:
It is now possible to restrict
type variables to be of kind
=DoorState= as in
~Door (s::DoorState) = MkDoor ...~
where (phantom) type =s= now
only can assume values
='Open=, ='Closed= and ='Locked=.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       343b73ab-a01b-4662-a953-7b0d00c12833
    :DRILL_LAST_INTERVAL: 13.293
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 2.751
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-02 Wed 12:49]
    :END:
How to obtain a singleton door state
from
=data DoorState = Open|Closed|Locked=?
**** Answer:
Using the =DataKinds= extension, it
is possible to write
#+BEGIN_SRC haskell
data SingDS::DoorState->* where
   SOpen::SingDS 'Open
   SClosed :: SingDS 'Closed
   SLocked :: SingDS 'Locked
#+END_SRC
*** Types                                                             :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       2fd5a316-b8ab-4334-90eb-2ea74835d0ce
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 14:50]
    :END:
What is the effect of
the Haskell =DataKinds=
extension on a definition
like
~data DoorState = Open | Closed | Locked~?
**** Answer:
In addition to a /type/ =DoorState=,
there is now also a /kind/ =DoorState=
with type constructors ='Open=,
='Closed= and ='Locked=.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       26f439b1-8084-41d0-b7f1-7489d979269e
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 14:51]
    :END:
Why does the
=ScopedTypeVariables=
extension become a necessity
when using /Type Literals/?
**** Answer:
Because the value of a type
literal is often needed in
a function, which can be
obtained from the type
variable, but only if it
is in scope.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       55571d9e-d579-4afe-a8a0-780c28bc02ca
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 14:55]
    :END:
What is the effect of the
=ScopedTypeVariables=
extension in Haskell?
**** Answer:
Free type variables can
be reused in the scope of 
a function, for example
to type subexpressions in
a =where= clause.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-12 Sat>
    :PROPERTIES:
    :ID:       c80ade29-4f7a-4a1a-aacb-3bc0d1802403
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-20 Thu 13:18]
    :END:
How to check if a
type-level natural number
is positive with the
GHC.TypeLits library?
**** Answer:
With a constraint of the 
form
#+BEGIN_SRC haskell
(KnownNat n, CmpNat n 0 ~ GT) => 
 List n a...
#+END_SRC
which would make sure that
the list argument is not
empty.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       f89b5d1b-c91d-4d88-8f14-fa4036730aac
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 11:55]
    :END:
Why is the GADT designation
a bit of a misnomer?
**** Answer:
Because it /generalises/
union types rather than
algebraic datatypes.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       ce889601-5b44-478e-83a7-65f80cde3eb7
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 11:55]
    :END:
What is the difference
between /Algebraic/ and
/Generalised Algebraic/
datatypes in terms of
the sets of their values?
**** Answer:
For /Algebraic/ datatypes
the sets of values are 
constructed as combinations
of disjoint unions and
cartesian products. For
/Generalised Algebraic/ 
datatypes, the sets of
values include fixed
points of operators on
sets as well.
https://cstheory.stackexchange.com/questions/10594/whats-the-difference-between-adts-gadts-and-inductive-types
*** Types                                                             :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       814a9a18-1398-4132-aa17-d6f799b20bfe
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 11:55]
    :END:
What is the difference
of /Algebraic/ and
/Generalised Algebraic/
datatypes in terms of
constructors?
**** Answer:
In an /Algebraic/ datatype,
every constructor for the
datatype returns a value
of the same type, ie in
union types. With 
/Generalised Algebraic/ types,
different constructors can
return values of different
types.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       a0496078-9d22-4ded-a6d1-eb72a7c3be49
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 11:53]
    :END:
What is the difference
between /Algebraic/ and
/Generalised Algebraic/
datatypes?
**** Answer:
/Generalised Algebraic/ 
datatypes are obtained
when type /operators/ are
defined recursively, ie
operators F of kind * -> *.
In contrast, merely algebraic
datatypes are obtained as
sums, products and recursively
defined /types/ but not 
/type operators/.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       98452516-45e9-49f6-97ab-cfe2e552b818
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 11:52]
    :END:
What are inductive types?
**** Answer:
These are /Generalised Algebraic/
data-types where the type variables
can assume not only types but also
values of the underlying types.
*** Types                                                             :drill:
    SCHEDULED: <2019-01-11 Fri>
    :PROPERTIES:
    :ID:       5de325cc-735f-4373-90ec-bd6c7f8ade8a
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 14:53]
    :END:
What is the advantage of having
inductive types over just having
GADTs?
**** Answer:
With inductive types the length
of lists can become part of the
type of the list.
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       03d23de7-95f5-44fa-86b3-5bbbd8fd8ab9
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:02]
    :END:
What is the point of =Nat=
in GHC.TyeLits if it is not
recursively defined?
**** Answer:
It is meant to be used more
as a documentation type than
a recursive one. Thus, vectors
or lists with length in their
type should be constructed
from their normal counterparts
using reification and reflection
to get the length types right.
The tools for that are all in
the library.
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       ade9ce49-60fa-4151-9b47-444ff1e2a238
    :DRILL_LAST_INTERVAL: 8.2449
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.8
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:38]
    :END:
How to check two =Nat= types
for equality?
**** Answer:
With =sameNat (Proxy::Proxy n) (Proxy::Proxy m)=,
which returns a =Maybe (n :~: m)=, which can be
pattern matched against the constructor 
=Refl= of =n :~: m=, ie as =Just Refl=.
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       973089b8-b37d-40d4-a04c-be120cad0beb
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:46]
    :END:
What is /reification/?
**** Answer:
The process of transforming
a value-level run-time property
to the type-level.
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       9d9eaf69-5c02-4676-95bf-474eec8ba33e
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:52]
    :END:
How to reify a natural
number to a type-level =Nat=?
**** Answer:
With =someNatVal n=, which
returns a proxy value of
type =Proxy m= packed in a
=SomeNat a=, so case matching
=SomeNat (Proxy::Proxy m)-> SomeConstr @m ...=
allows to construct something with
type =m= (using extension 
=TypeApplications= for the =@m=
syntax). 
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       48279d09-8b9d-4c24-8c28-945529b2fc2b
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:50]
    :END:
What is reflection?
**** Answer:
The process of transforming
a type to a value-level 
run-time property, the inverse
to reification.
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       6d4a160d-9aa4-40da-a41d-b6913646e5dd
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:47]
    :END:
How to reflect a type
level =Nat=?
**** Answer:
With =natVal=, which takes
a proxy of type =Proxy n=
and returns the corresponding
=n= as a natural number:
=natVal (Proxy::Proxy n)= or
=natVal (Proxy @n)= when using
=TypeApplications=.
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       4a184073-3ba7-4da3-abe5-112634907061
    :DRILL_LAST_INTERVAL: 23.212
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:18]
    :END:
How to evaluate type
level functions for
experimenting?
**** Answer:
In /ghci/ with 
=kind! <expression>=.
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       792dbc9f-2036-493e-82d6-b592d8aeff09
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:16]
    :END:
How to define a type
level =IF=?
**** Answer:
As
#+BEGIN_SRC haskell
type family IF c t f where
  IF 'True t f = t
  IF 'False t f = f
#+END_SRC
Note that this requires
extensions =DataKinds=
and =TypeLevels=.
*** Type arithmetic                                                   :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       387eef7a-4728-4b2f-8f58-d5bed992c965
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-20 Thu 13:02]
    :END:
How to define type
level functions?
**** Answer:
With /type families/:
#+BEGIN_SRC haskell
type family F a b where
– definitions here
#+END_SRC
defines a type level
function with name
=F= of two type variables.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       82ebc257-597d-4642-ad72-6b13593947d0
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:47]
    :END:
Why is the logic corresponding
to the Haskell type system richer
than traditional λ-calculus?
**** Answer:
Because it can prove =Not (Not a)=
by way of the =throw= and =catch=
mechanism with
=catch :: ((a -> Void) -> Void) -> a=
with 
=throw :: a -> Void=.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       3cbfb6c4-ba13-49cc-aed7-ce2cea210b85
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:51]
    :END:
What does =:kind!= in
/ghci/ do?
**** Answer:
It evaluates type families.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       62940337-e9e7-437b-98fe-b1e5a415df36
    :DRILL_LAST_INTERVAL: 23.2095
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-23 Sun 16:07]
    :END:
Why are data-kinds derived
from types and =*= treated
differently?
**** Answer:
Because the derived kinds are
more restricted as they can
only assume types generated
from their constructors. For
example the kind =Bool= can
only have types ='True= and
='False=.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       0b9f2944-7f8a-4334-ac07-daf4ad41dcbd
    :DRILL_LAST_INTERVAL: 19.2447
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:15]
    :END:
What is the difference
between the kinds produced
from types by extension
=DataKinds= and  * ?
**** Answer:
They are normally different
and don't match. However,
activating =PolyKinds= will
result in them both being
matched by kind variables ~k~.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       66073c9c-db7d-418c-98dd-4af932fba365
    :DRILL_LAST_INTERVAL: 19.2447
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:22]
    :END:
What is the difference
in kind annotations 
=F :: k -> *= and
G :: * -> * ?
**** Answer:
G is a type operator
producing a type from a type.
F, on the other hand, is an
operator that produces a type
from any kind, at least if
extension =PolyKinds= is active
because in that case =k= is 
considered a kind variable.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-27 Sun>
    :PROPERTIES:
    :ID:       0dacd1bb-8d05-479e-acd4-b5839addf7eb
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-16 Sun 17:47]
    :END:
What does =t1~t2= in the
context of a function
signature mean?
**** Answer:
An equality constraint 
indicating that types 
~t1~ and ~t2~ have to be 
the same. Note these 
constraints can also 
occur in class and 
instance contexts.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       97802e59-e281-415e-8f25-7a7f15cbda10
    :DRILL_LAST_INTERVAL: 60.975
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-14 Wed 14:52]
    :END:
How to use type applications
to indicate that types should
be derived by the compiler to
be the same?
**** Answer:
With named wildcards of the form
~@ _name~, as in ~@ ( _a -> _a)~.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-03-11 Mon>
    :PROPERTIES:
    :ID:       929a2445-3753-43b7-bf79-ad41ff269bc3
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 17:02]
    :END:
What to do if using type
applications on a function
if some types should be derived
by the compiler?
**** Answer:
Use wildcards of the form
~@ _~ instead of a function name.
Note this also works with 
things like ~@ (Maybe _)~.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-04-09 Tue>
    :PROPERTIES:
    :ID:       c97c549d-bae6-4ac3-ba4b-813375090ae2
    :DRILL_LAST_INTERVAL: 101.7564
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:52]
    :END:
How are ambiguities in the 
use of ~@~ as type-application
vs its use as as-pattern
resolved?
**** Answer:
If language extension
~TypeApplications~ is turned on
then a ~@~ with preceding
white-space is parsed as
type-application, otherwise
as /as-pattern/.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-05-01 Wed>
    :PROPERTIES:
    :ID:       c2c4cfbd-52bc-41d8-aea3-84be9ed41758
    :DRILL_LAST_INTERVAL: 117.4563
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:41]
    :END:
How are type applications
~@type~ and values ordered
in function calls using them?
**** Answer:
In rank 1 types type applications
follow the function name in left to
right order of the type variables,
then come the argument values. Type
applications for the next rank of
variables then follow these values
followed by their own values etc.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       10fe8bfe-8316-4d6c-bd47-653e9e3012d7
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-14 Wed 14:56]
    :END:
Is it possible to evaluate
~Λ~ expressions explicitly in
Haskell?
**** Answer:
Yes, with language extension
~TypeApplications~ this is
possible by using the ~@~
operator before the type-name. 
For example, ~read @Int~ returns
~read @Int :: String -> Int~.
*** Type manipulations                                                :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       6ab89465-7b29-4090-892e-b6a9bf7dc96e
    :DRILL_LAST_INTERVAL: 57.3956
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-13 Tue 18:31]
    :END:
What is type application
with ~@~ all about?
**** Answer:
This is about giving
explicit type arguments 
to polymorphic functions,
for example
~read @Int "3"~ will set
the type variable of
~read~ to ~Int~.
*** Type Rank                                                         :drill:
    SCHEDULED: <2019-03-22 Fri>
    :PROPERTIES:
    :ID:       98983e4b-b5c9-49ad-bf23-6909d1a012fe
    :DRILL_LAST_INTERVAL: 101.7564
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-10 Mon 15:51]
    :END:
What is the calling
mechanism for a rank 2
typed function in terms
of system F?
**** Answer:
After determining the type
for the type variables covered
by the outermost ~∀~, the 
resulting type is applied to
another ~Λ~ of the appropriate
type to obtain a ~λ~.
*** Type Rank                                                         :drill:
    SCHEDULED: <2019-04-13 Sat>
    :PROPERTIES:
    :ID:       b419272c-90d0-4910-82fc-00b537f5d206
    :DRILL_LAST_INTERVAL: 117.4563
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:48]
    :END:
What is the underlying
calling mechanism for
a rank 1 typed function 
in haskell in terms of
system F?
**** Answer:
It is ~Λt.λx:t.f(x)~ where
~(Λt.λx:t.f(x)) T~ returns
a function of type ~T~ to
which arguments of type 
~T~ can be applied.
*** Type Rank                                                         :drill:
    SCHEDULED: <2019-03-03 Sun>
    :PROPERTIES:
    :ID:       8b8d671b-fdbf-4402-87fa-577db5dfd90f
    :DRILL_LAST_INTERVAL: 90.3671
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:27]
    :END:
How does type selection
for rank 2 typed functions
differ from rank 1 types?
**** Answer:
For rank 1 typed functions,
the caller determines the
types, in rank 2 typed
functions, the higher type
variables are determined
by the implementation of 
the function, not its caller.
** purescript
*** Psc-package                                                       :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       598e21d3-4f68-46ce-8562-552f2ae17994
    :DRILL_LAST_INTERVAL: 19.884
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-03 Thu 14:19]
    :END:
How to create a purescript
project meant to work with 
/psc-package/ rather than
bower?
**** Answer:
Run 
=pulp --psc-package init=
in the project directory.
*** Psc-package                                                       :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       5b06663a-eb99-473c-b545-1793213c643d
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-03 Thu 14:16]
    :END:
Why is it better to use
=pulp --psc-package init=
rather than just
=pulp init= and then removing
/bower.json/ followed by
=psc-package init=?
**** Answer:
Because =pulp init= installs
some dependencies in addition
to /Prelude/ for running the
repl and in- and output. On
the other hand, =psc-package=
only installs /Prelude/
and some of the functionality
would be missing.
*** Psc-package                                                       :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       424913d1-9741-46ad-8bff-f526e6b243fe
    :DRILL_LAST_INTERVAL: 19.884
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-03 Thu 14:17]
    :END:
What is the problem with
=psc-package repl=?
**** Answer:
It requires the /psci-support/
package as a dependency. Install
with 
=psc-package install psci-support=
*** Psc-package installation                                          :drill:
    SCHEDULED: <2019-01-29 Tue>
    :PROPERTIES:
    :ID:       ae992127-3693-4e49-af52-038b38d60360
    :DRILL_LAST_INTERVAL: 23.7949
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 13:55]
    :END:
How should =psc-package= be 
installed?
**** Answer:
Ideally with =stack install=
run from inside a repository
clone. Source unpacking with
=stack unpack= doesn't seem
to work, it's probably not
on Hackage.
*** Pulp and Psc-Package                                              :drill:
    SCHEDULED: <2019-01-31 Thu>
    :PROPERTIES:
    :ID:       1b0b167c-48b2-4dbc-8ea7-66ae62787f84
    :DRILL_LAST_INTERVAL: 26.8803
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.667
    :DRILL_EASE: 2.7
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:41]
    :END:
How to make sure =pulp= uses
the dependencies from
=psc-package= instead of
=bower=?
**** Answer:
Whilst there is a 
=–psc-package= option
for =pulp= that can be used
in its commands, the easiest
way is to remove the =bower.json=
file, it will fall back
to the =psc-package= files.
*** Purescript installation                                           :drill:
    SCHEDULED: <2019-01-29 Tue>
    :PROPERTIES:
    :ID:       4e0772f9-83d8-44a4-b1d8-afa5af66acef
    :DRILL_LAST_INTERVAL: 23.7949
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 13:58]
    :END:
How should /purescript/ be
installed?
**** Answer:
Ideally with /stack install/
from either the github clone
or the source unpacked via
/stack unpack purescript/.
*** Purescript and Bower                                              :drill:
    SCHEDULED: <2019-01-28 Mon>
    :PROPERTIES:
    :ID:       43de4267-190e-4f32-abbf-f0b49cc51d5a
    :DRILL_LAST_INTERVAL: 23.212
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:00]
    :END:
What to do about Bower's
becoming obsolete?
**** Answer:
Use /psc-package/ as much
as possible, it is meant
as a stack-like replacement
to manage package dependencies.
*** Syntax                                                            :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       db6192ec-fcf8-42b5-a7ea-b8f22c7319b9
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:36]
    :END:
What does the =~>= arrow
signify in purescript?
**** Answer:
It indicates a natural
transformation between
functors =F₁:: * -> *= and
=F₂:: * -> *= where
=f :: F₁ ~> F₂= means
=f :: F₁ a -> F₂ a=,
ie the type variable can be 
omitted.
** javascript
*** npm installation                                                  :drill:
    SCHEDULED: <2019-01-27 Sun>
    :PROPERTIES:
    :ID:       c746e0a9-cf5c-47d6-abf9-32328ff92cef
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:37]
    :END:
What's the problem if the
installation script of a
package fails due to 
permissions, even if run
as =sudo npm install...=?
**** Answer:
Installation scripts usually
are not safe since =npm= packages
are not checked. Therefore they
are never run as root unless 
=–unsafe-perm=true= is given as
an option to the npm install command.
*** javascript var declaration 					      :drill:
    SCHEDULED: <2019-08-27 Tue>
    :PROPERTIES:
    :ID:       52e458c1-db4a-4ad4-a6ba-8be27a7c5733
    :DRILL_LAST_INTERVAL: 316.2701
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-15 Mon 17:24]
    :END:
What turns javascript variables declared
 with /var/ into a minefield for the normal
programmer?
**** Answer
The fact that they are not block-scoped but
function scoped. Thus, a variable declared in
a loop will be visible even before the loop
in its ambient function. This leads to 
unexpected behaviour. In addition, it is 
possible to make a /var/ declaration
several times with the same variable.
*** javascript var declaration					      :drill:
    SCHEDULED: <2019-10-19 Sat>
    :PROPERTIES:
    :ID:       5fa57496-c309-4ccb-8b53-0f62c54db15f
    :DRILL_LAST_INTERVAL: 331.4922
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.1
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-22 Thu 12:29]
    :END:
What needs to be observed when 
declaring variables?
**** Answer
Prefer the /let/ keyword over /var/ when 
declaring or defining variables. 

*** javascript for loops					      :drill:
    SCHEDULED: <2019-12-25 Wed>
    :PROPERTIES:
    :ID:       577eb5cf-4831-4bd4-822e-326de1bbbfd8
    :DRILL_LAST_INTERVAL: 364.2881
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.38
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:57]
    :END:
What to do about the /for .. in/ problems
when looping over arrays?
**** Answer
Use a /for ... of/ loop instead of 
/for ... in/, ie 
#+BEGIN_SRC js
for(var item of arr){
//do something with array arr here
}
#+END_SRC
*** javascript for loops					      :drill:
    SCHEDULED: <2019-02-20 Wed>
    :PROPERTIES:
    :ID:       3326e9e1-54ea-4d61-aee7-8b0e6c3feafe
    :DRILL_LAST_INTERVAL: 166.496
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.62
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-07 Fri 13:31]
    :END:
What is the problem with /for .. in/
loops over arrays?
**** Answer
A /for .. in/ loop loops over
the property keys of the array object,
not just the indices.
*** javascript for loops					      :drill:
    SCHEDULED: <2019-07-09 Tue>
    :PROPERTIES:
    :ID:       83079dcd-f141-4d6e-ab90-8571ac5b23c7
    :DRILL_LAST_INTERVAL: 257.4684
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.143
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-25 Thu 12:42]
    :END:
Can the /for .. of/ loop be used to
iterate over objects?
**** Answer
If the specification is ES6
or higher. For TypeScript generating
javascript for ES5 or lower, the object 
needs to have a /length/ property for this 
to work because the generated code
is a classical for loop with an index
variable.
*** typescript typing						      :drill:
    SCHEDULED: <2020-06-05 Fri>
    :PROPERTIES:
    :ID:       0c8ffb27-599d-4e13-bca2-59fcdb8b5e34
    :DRILL_LAST_INTERVAL: 543.0768
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.5
    :DRILL_EASE: 2.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-10 Mon 15:48]
    :END:
What does it mean to say that typescript is
structurally typed?
**** Answer
This means that typescript considers types with
the same internal structure the same, even though
they may have different names.
*** typescript enum						      :drill:
    SCHEDULED: <2020-03-11 Wed>
    :PROPERTIES:
    :ID:       06796314-185f-48ae-8c9a-8a35d8d0ef46
    :DRILL_LAST_INTERVAL: 463.0903
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.167
    :DRILL_EASE: 2.52
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-12-04 Tue 14:14]
    :END:
Why is there no string based enum type?
**** Answer
Because typescript has string literal types and
string based enums can be easily constructed
as union of these.
*** typescript typing 						      :drill:
    SCHEDULED: <2019-06-10 Mon>
    :PROPERTIES:
    :ID:       72c84d1b-63f7-4833-93ee-0e39499fb6f3
    :DRILL_LAST_INTERVAL: 262.6525
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.833
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-09-20 Thu 16:27]
    :END:
Is there a way to achieve nominal typing in
typescript?
**** Answer:
Since /enum/s are nominally typed, define a
dedicated /enum/ for a type and form the 
intersection of the two. Note that this does
not work if the type is a /number/ because 
/enum/'s are compatible with /number/.
*** typescript functions					      :drill:
    SCHEDULED: <2019-10-08 Tue>
    :PROPERTIES:
    :ID:       6da9a381-4c72-4937-a8ff-87e11e841e61
    :DRILL_LAST_INTERVAL: 345.8205
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-27 Sat 12:51]
    :END:
Why is using /bind(...)/ on functions a bad 
idea?
**** Answer:
Because all type information is lost due to 
/bind/ returning /any/.
*** typescript functions					      :drill:
    SCHEDULED: <2019-03-19 Tue>
    :PROPERTIES:
    :ID:       adbea4df-d86b-4855-9529-79c9867975c6
    :DRILL_LAST_INTERVAL: 197.1253
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-03 Mon 16:19]
    :END:
Why is /bind/ not necessary for binding 
variables to a function?
**** Answer:
Because arguments can be bound with Currying or 
a simple arrow function:
=let bound = (x:type) = > fctn(x,...);=
*** typescript functions					      :drill:
    SCHEDULED: <2019-10-28 Mon>
    :PROPERTIES:
    :ID:       50983de0-fc32-4b5a-bdec-12502b96b70a
    :DRILL_LAST_INTERVAL: 365.8856
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.42
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-10-27 Sat 12:55]
    :END:
How to replace /bind/ for /this/ binding?
**** Answer:
For methods that are expected to be passed
around, use an arrow function when defining
its class instead of a normal method definition.
*** typescript functions 					      :drill:
    SCHEDULED: <2019-03-19 Tue>
    :PROPERTIES:
    :ID:       e154baa2-a70c-4038-ac1e-6b0c588022f8
    :DRILL_LAST_INTERVAL: 197.1253
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-03 Mon 16:24]
    :END:
How to use Currying?
**** Answer:
Just use a chain of arrow functions:
=let fctn2=(x1:type1)=>(x2:type2)=>do something;=
defines a 2-parameter function which can be
partially applied:
=let fctn1=fctn2(value1);=
*** typescript typing 						      :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       450a3901-2083-4209-8264-05ad4cb4dd58
    :DRILL_LAST_INTERVAL: 32.8589
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.418
    :DRILL_EASE: 2.0
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 17:02]
    :END:
What is a union of types?
**** Answer:
A type =type1|type2= which can be assigned
an object of /type1/ or an object of /type2/.
*** typescript typing 						      :drill:
    SCHEDULED: <2020-01-03 Fri>
    :PROPERTIES:
    :ID:       3986e32d-3b56-4c6c-9de3-c6e6c7796beb
    :DRILL_LAST_INTERVAL: 415.311
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-14 Wed 14:56]
    :END:
What is an /intersection/ of types?
**** Answer:
A type =type1&type2= which has a member of
/type1/ as well as a member of /type2/.
*** typescript types						      :drill:
    SCHEDULED: <2020-03-29 Sun>
    :PROPERTIES:
    :ID:       5d7e94f4-bebd-4ee4-833c-48e0b495beb4
    :DRILL_LAST_INTERVAL: 488.8944
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.333
    :DRILL_EASE: 2.7
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-26 Mon 12:01]
    :END:
What is the point of =!!varname= for a variable
with name /varname/?
**** Answer:
This turns a variable of any type into a
/boolean/ with its proper truth value. Note
that a single =!= negates the /truthy/ value 
of the variable into a /boolean truth/ value
and a second one negates it back in the 
opposite /boolean truth/ value.
*** typescript types						      :drill:
    SCHEDULED: <2019-12-28 Sat>
    :PROPERTIES:
    :ID:       a1b4769e-3dc5-4eaa-ae99-165d4ef03cfb
    :DRILL_LAST_INTERVAL: 405.1814
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.833
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:11]
    :END:
Why should an /interface/ be preferred over a
/class/ whenever possible?
**** Answer:
Because an /interface/ has zero runtime 
impact.
*** typescript types 						      :drill:
    SCHEDULED: <2019-05-26 Sun>
    :PROPERTIES:
    :ID:       734b414c-e936-4b9d-baac-966a4d4b89a3
    :DRILL_LAST_INTERVAL: 248.3804
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-20 Thu 16:19]
    :END:
How can types be defined recursively?
**** Answer:
With a type alias using generics:
=type tname<T> = T & {// use tname<T> here}=.
*** typescript classes						      :drill:
    SCHEDULED: <2019-08-13 Tue>
    :PROPERTIES:
    :ID:       cec6ef43-99a3-4cd0-8840-586a56c6c3e6
    :DRILL_LAST_INTERVAL: 305.5033
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-11 Thu 10:50]
    :END:
How are member initializations from constructor
parameters made more convenient?
**** Answer:
By allowing access modifiers in constructor
parameters where
=constructor(public x:type){}=
is equivalent to
=constructor(x:type){ this.x = x}=
*** typescript classes						      :drill:
    SCHEDULED: <2019-01-26 Sat>
    :PROPERTIES:
    :ID:       c4129116-f90e-4ad5-9fbb-7843da2ac577
    :DRILL_LAST_INTERVAL: 239.8124
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.8
    :DRILL_EASE: 2.9
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-05-31 Thu 10:50]
    :END:
In which way differs constructor naming in
typescript from languages like C++ or Java?
**** Answer:
The name of the constructor is always 
=constructor= rather than the class name 
as in C++ or Java.
*** typescript classes 						      :drill:
    SCHEDULED: <2020-01-19 Sun>
    :PROPERTIES:
    :ID:       99a03428-f963-4df5-9b07-becd245926e5
    :DRILL_LAST_INTERVAL: 431.1762
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.167
    :DRILL_EASE: 2.56
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-14 Wed 14:51]
    :END:
Do all members of a class have to be initialised
through the class constructor?
**** Answer:
No, any member can be initialised outside
the constructor, which is often used for
defaults. In fact, a constructor isn't even
necessary.
*** typescript classes 	 				      :drill:
    SCHEDULED: <2020-01-26 Sun>
    :PROPERTIES:
    :ID:       e3dad0aa-0eca-4817-b407-66a488214183
    :DRILL_LAST_INTERVAL: 440.4045
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.66
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-12 Mon 15:45]
    :END:
What needs to be observed in constructors of
derived classes?
**** Answer:
In general, the constructor of the superclass 
has to be called. Use =super= to do that.
*** typescript classes 	 				      :drill:
    SCHEDULED: <2019-06-15 Sat>
    :PROPERTIES:
    :ID:       67da1017-12ef-4f7d-a700-3e054125fbb3
    :DRILL_LAST_INTERVAL: 169.2724
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.334
    :DRILL_EASE: 1.58
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:54]
    :END:
What is the problem with defining functions not
as methods but as members, for example by
assigning an arrow function to a member?
**** Answer:
They cannot be overridden in a derived class 
with the same name because they are not part
of the prototype chain.
*** typescript classes 	 				      :drill:
    SCHEDULED: <2020-07-15 Wed>
    :PROPERTIES:
    :ID:       3601bed3-0b17-45ab-a681-e6dd6ef083ed
    :DRILL_LAST_INTERVAL: 576.0479
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.667
    :DRILL_EASE: 2.9
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:53]
    :END:
How to call a function defined in a super class
as a member rather than a method?
**** Answer:
With =this.functioname(...)= rather than 
=super.functioname(...)= as would be the case
with methods.
*** typescript classes 	 				      :drill:
    SCHEDULED: <2019-07-13 Sat>
    :PROPERTIES:
    :ID:       3a763f6b-3a94-4c02-b537-8bad51f1b0da
    :DRILL_LAST_INTERVAL: 279.7072
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-06 Sat 14:56]
    :END:
Why can functions defined as members rather
than methods not have the same name in a 
derived class and its base class?
**** Answer:
Because they must be accessed through /this/.
Since the /this/ of the derived class contains
the members of the derived class and those of
the base class, having the same name would 
lead to conflicts.
*** typescript classes 	 				      :drill:
    SCHEDULED: <2020-01-14 Tue>
    :PROPERTIES:
    :ID:       f3d26521-acee-48b1-9b49-dd9a2890187b
    :DRILL_LAST_INTERVAL: 419.4442
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.833
    :DRILL_EASE: 2.32
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-21 Wed 13:36]
    :END:
What is the rationale behind the mutable /this/
pointer of functions defined as members in 
javascript objects?
**** Answer:
The fact that functions used as callbacks 
sometimes need the context of the caller 
combined with the ease of obtaining the 
context of the defining object through the
use of closures, ie. the =that = this= method.
*** typescript classes 	 				      :drill:
    SCHEDULED: <2019-08-05 Mon>
    :PROPERTIES:
    :ID:       1bd2988b-09f6-405d-a0fb-3089561857b7
    :DRILL_LAST_INTERVAL: 296.3001
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:23]
    :END:
What is the difference between defining a 
function as a member of a class via the 
/function/ keyword and the fat arrow lambda
notation?
**** Answer:
The value of /this/ is different. Defining
=this.funcname = function(...){...}= sets /this/
to the calling context of whoever calls 
=objname.funcname()=. On the other hand, with
=this.funcname = (...) => {...}=, =this= always
refers to the =this= of the defining context, 
no matter who calls =objname.funcname=.
** ubuntu
*** terminal                                                          :drill:
    SCHEDULED: <2019-02-03 Sun>
    :PROPERTIES:
    :ID:       08fa9fdc-2ff0-49d5-8bc5-520f485382c0
    :DRILL_LAST_INTERVAL: 43.3861
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 16:56]
    :END:
How to put a unicode
character into an lxterminal?
**** Answer:
Use something like
=echo -e '\u<unicode>'=.
*** packaging                                                         :drill:
    SCHEDULED: <2019-01-31 Thu>
    :PROPERTIES:
    :ID:       d65f8c52-6344-411b-93a6-144792165dbb
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-30 Fri 12:24]
    :END:
What is a good way
to package applications
so that they can be
installed by any user
across many linux
distributions?
**** Answer:
It seems like ~AppImage~
is the way to go, see
https://appimage.org/.
*** user interface                                                    :drill:
    SCHEDULED: <2019-04-07 Sun>
    :PROPERTIES:
    :ID:       367911e5-2556-4fab-9e73-6796ddde7398
    :DRILL_LAST_INTERVAL: 90.7022
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-06 Sun 18:04]
    :END:
How to switch to a terminal
and back from the graphical 
interface?
**** Answer:
With ~ctrl-alt-F1~ to get to
a terminal and ~ctrl-alt-F7~
to get back to graphics.
*** user interface                                                    :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       0665f3b1-a732-486c-af24-f858ff9a521c
    :DRILL_LAST_INTERVAL: 124.2252
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-14 Fri 14:34]
    :END:
What to do if the graphical
user interface has become
irresponsive?
**** Answer:
Switch to a terminal with 
~ctrl-alt-F1~, log in and stop
the display manager, ie
~sudo service lightdm stop~
or restart it.
*** user interface                                                    :drill:
    SCHEDULED: <2019-02-26 Tue>
    :PROPERTIES:
    :ID:       f79fd0a7-7f5c-472d-93dd-0ee0fe476973
    :DRILL_LAST_INTERVAL: 151.875
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-27 Thu 16:23]
    :END:
What is the proper way to 
shut down the X-server in
an emergency?
**** Answer:
Switch to a terminal with
~ctrl-alt-F1~ and run
~sudo service lightdm stop~

** web
*** Development                                                       :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       553f5de5-0a53-4877-afe2-32b2ce8a7bfd
    :DRILL_LAST_INTERVAL: 23.212
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:36]
    :END:
What to use for functional
javascript development
as a Haskell programmer?
**** Answer:
It seems that /Purescript/
is a language that has
almost Haskell syntax and
compiles to javascript.
See
https://arow.info/blog/posts/2015-12-17-purescript-intro.html
*** Hakyll                                                            :drill:
    SCHEDULED: <2019-05-19 Sun>
    :PROPERTIES:
    :ID:       fc0796ab-ac69-4533-9260-57da97327e08
    :DRILL_LAST_INTERVAL: 152.4375
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 12:04]
    :END:
What's the rap on
the url string for
~MathJax url~ when 
configuring the pandoc
compiler for MathJax?
**** Answer:
It should point to a
MathJax.js load script.
If empty, it will point
to a default, ie the 
Cloudflare CDN. Note
that the loading of this
has to be configured
separately for hakyll.
*** Hakyll                                                            :drill:
    SCHEDULED: <2019-03-12 Tue>
    :PROPERTIES:
    :ID:       12b70b83-18ec-4090-a2ef-900f5257ceeb
    :DRILL_LAST_INTERVAL: 101.7564
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-30 Fri 12:24]
    :END:
What is the effect
of ~defaultContext~?
**** Answer:
It allows the use of
predefined templates, such
as ~$body$~, ~$url$~, ~$path$~ as
well as template names
defined in meta-data in
associated template files.
*** Hakyll                                                            :drill:
    SCHEDULED: <2019-05-20 Mon>
    :PROPERTIES:
    :ID:       67c31465-fdc2-4fd5-b0d8-d7e83b476b57
    :DRILL_LAST_INTERVAL: 152.4375
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 15:01]
    :END:
How are the variables
enclosed in ~$<varname>$~
in the template files
initialised?
**** Answer:
With the /context/ functions
given as second argument
to the ~loadAndApplyTemplate~
calls. They will be applied
to the template file indicated
in the first argument.
*** Hakyll                                                            :drill:
    SCHEDULED: <2019-05-08 Wed>
    :PROPERTIES:
    :ID:       7634049d-859c-4504-bf02-3762da3da527
    :DRILL_LAST_INTERVAL: 143.9775
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:30]
    :END:
Is it absolutely necessary
to include the date in the
filenames in the ~posts~ directory?
**** Answer:
No, this is only a fallback
when it is not included in
the metadata. Add a
~published: data~ metadata field
in the file itself near the
title or in a separate meta-
data file in the case of
binary files.
*** Hakyll                                                            :drill:
    SCHEDULED: <2019-02-08 Fri>
    :PROPERTIES:
    :ID:       4fbd7c76-7726-4db9-8575-baa24d7ccefb
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-21 Wed 13:37]
    :END:
Is it possible to make
hakyll use images to 
display latex?
**** Answer:
Possibly by setting the
~HTMLMathMethod~ to 
~WebTex String~ where the
~String~ is a url-string
pointing to a conversion
script running dvipng or
dvisvgm on the input
(like in Mnemosyne).
*** Hakyll                                                            :drill:
    SCHEDULED: <2019-05-09 Thu>
    :PROPERTIES:
    :ID:       4760ec29-df5d-4e67-8ff7-7a63941b835c
    :DRILL_LAST_INTERVAL: 143.9775
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-16 Sun 17:51]
    :END:
How to get the ~ReaderOptions~ and
~WriterOptions~ when using 
~pandocCompileWith~?
**** Answer:
They are instances of ~Data.Default~
and provide defaults via their
respective ~def~ functions. In
addition there are
~defaultHakyllReaderOptions~ and
~defaultHakyllWriterOptions~ that can
be configured and used.
*** Hakyll                                                            :drill:
    SCHEDULED: <2019-03-11 Mon>
    :PROPERTIES:
    :ID:       1f843020-598b-4747-acd5-18da77b95d33
    :DRILL_LAST_INTERVAL: 101.7564
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-29 Thu 11:31]
    :END:
How to make the pandoc
compiler generate output
for /MathJax/ when encountering
latex?
**** Answer:
Use ~pandocCompilerWith~ with
~writerHtmlMathMethod~ set to
~MathJax urlstring~ in its
~WriterOptions~ argument. The
~urlstring~ is a string indicating
the location of /MathJax.js/ or
the empty string.
*** Hakyll                                                            :drill:
    SCHEDULED: <2019-02-05 Tue>
    :PROPERTIES:
    :ID:       f41d7373-8d25-4dae-b3bc-dba1c6ab1f19
    :DRILL_LAST_INTERVAL: 78.0832
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-19 Mon 16:51]
    :END:
What's the problem if
hakyll complains about
a ~Missing field $date$ in context ...~?
**** Answer:
The files in ~posts~ must indicate
the date, either in the filename, ie
~2018-09-05-example.org~ or as
metadata under the ~published:~ 
field.
*** Phoenix                                                           :drill:
    SCHEDULED: <2019-02-01 Fri>
    :PROPERTIES:
    :ID:       11b1b245-5ec1-484f-b93c-86204fff1d26
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:30]
    :END:
What to do if 
~mix ecto.create~ comes
up with an error
~could not load <name>.Repo, error: :nofile~?
**** Answer:
The repository may have to
be created first:
~mix ecto.gen.repo -r <name>.Repo~.
*** Phoenix                                                           :drill:
    SCHEDULED: <2019-02-06 Wed>
    :PROPERTIES:
    :ID:       339a8de7-f61f-433c-88a5-4312242c55a6
    :DRILL_LAST_INTERVAL: 45.5764
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 16:57]
    :END:
What is the path of
an sqlite database
in =config/dev.exs=
relative to?
**** Answer:
The path in 
=adapter: Sqlite.Ecto=
=database: "<path2sqlite>.sqlite"=
is relative to the project
directory.
*** Phoenix                                                           :drill:
    SCHEDULED: <2019-02-01 Fri>
    :PROPERTIES:
    :ID:       2451beaf-aa9a-4f1b-ad21-2f828c9fe01e
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:32]
    :END:
How to use Phoenix
with sqlite instead of
postgres or mysql?
**** Answer:
After generating the project
replace all postgres 
dependencies by
={:sqlite_ecto, "~> 1.0.0"},=
in the =defp deps do=  
dependency section in /mix.exs/ 
and reconfigure the database
connection in config/dev.exs
to use
=adapter: Sqlite.Ecto= and
=database: "<pathtodatabase>.sqlite"=.
*** Phoenix                                                           :drill:
    SCHEDULED: <2019-02-02 Sat>
    :PROPERTIES:
    :ID:       a3ed2c99-c03c-4a34-83b3-7cb2e2d5eaf7
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 17:02]
    :END:
What to do if
running ~mix deps.get~
fails to fetch records
due to a timeout?
**** Answer:
Decrease http concurrency
by running
~HEX_HTTP_CONCURRENCY=1 mix deps.get~
or increase timeouts with
~HEX_HTTP_TIMEOUT=120 mix deps.get~,
or possibly both.
** version control
*** git and hakyll                                                    :drill:
    SCHEDULED: <2019-05-15 Wed>
    :PROPERTIES:
    :ID:       ebbe955a-ce11-42d2-8ebe-e54da44312e2
    :DRILL_LAST_INTERVAL: 144.5242
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:26]
    :END:
How come the project
for a hakyll-driven 
github.io site has no
master branch?
**** Answer:
That's due to the workflow
whereby the master branch is
only temporary on the client.
It is fetched and checked out
just before copying the ~_site~
files to the main directory
and then deleted after pushing
the changes.
*** github                                                            :drill:
    SCHEDULED: <2019-03-09 Sat>
    :PROPERTIES:
    :ID:       9e7899d6-b0d9-4f09-a29d-830cfcbba1c4
    :DRILL_LAST_INTERVAL: 80.6617
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 12:04]
    :END:
Is it always necessary
to push a private development
branch to github and create
a pull request to update the
master branch on github?
**** Answer:
No, it is also possible
to rebase in the private 
branch and then push with
~git push <remote> HEAD:master~
which will push the head
of the current branch to 
the master on <remote>.
*** git in emacs                                                      :drill:
    SCHEDULED: <2019-03-03 Sun>
    :PROPERTIES:
    :ID:       ffe7aafc-2116-4e83-8a15-66372e666112
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-28 Fri 15:33]
    :END:
What happens if answering /yes/
to the checkout question when
saving a file under git control
in emacs?
**** Answer:
The buffer of the file switches
to /readonly/ after saving the 
content. The only way to edit
it afterwards is to check it 
back in.
*** git in emacs                                                      :drill:
    SCHEDULED: <2019-02-15 Fri>
    :PROPERTIES:
    :ID:       7d88dd8a-b454-4a64-86f5-2dcf28a9f428
    :DRILL_LAST_INTERVAL: 142.4286
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-26 Wed 14:50]
    :END:
What happens when checking in
a file under git control in
emacs?
**** Answer:
A buffer for a commit message
pops up. After writing it,
hit ~C-c C-c~ and the file will
be added and committed.
*** git                                                               :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       80d00555-53c8-45bb-97e1-b0f89ae75089
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:15]
    :END:
What is a 
/lightweight/ tag?
**** Answer:
A tag with no other information,
such as a tag message, attached
to it. Create it with
=git -tag <version> [commit]=
with no -a, -m or -s option.
*** git                                                               :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       1911d00c-406f-46b9-96b7-4e5670cdaaff
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:15]
    :END:
How to give a commit
a name?
**** Answer:
By tagging it  with
=git tag -a <version> [commit]=
where the current commit is assumed
if no commit number is given.
*** git                                                               :drill:
    SCHEDULED: <2019-02-07 Thu>
    :PROPERTIES:
    :ID:       6b5f1721-7099-4b22-8902-88e9800706ed
    :DRILL_LAST_INTERVAL: 44.4678
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:32]
    :END:
What is a tag?
**** Answer:
A name for a commit that
makes it easier to reference
it, for example in 
=git show <tag>=.
It usually is some kind
of version name.
*** git                                                               :drill:
    SCHEDULED: <2019-02-07 Thu>
    :PROPERTIES:
    :ID:       3da77a82-6168-4e08-be79-901c241c0be9
    :DRILL_LAST_INTERVAL: 44.4678
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:30]
    :END:
Is it possible to
check out a particular
commit?
**** Answer:
Yes, both commits and tags
can be checked out but they 
put the repo in the /detached 
head/ state where all commits 
made will be lost upon 
leaving (ie another checkout) 
unless a new branch is created.
*** git                                                               :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       5be67af8-56dd-4691-9a3f-6cf36950a906
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:13]
    :END:
How to fetch a
specific tag from 
a remote?
**** Answer:
With a /refspec/ of
the form =refs/tags/<tagid>=
for the remote /rrefspec/ in
=git fetch origin <rrefspec>:<lrefspec>=
which fetches the remote to
the local /lrefspec/.
*** git                                                               :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       0dfb93d4-cbb9-459c-96d5-3557c429f68d
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:12]
    :END:
How to fetch a remote
tag and put it in a
new local branch?
**** Answer:
Use =refs/head/<name>= in
=git fetch refs/tags/<tagid>:refs/head/<name>=
to put it in a new branch /name/.
*** git                                                               :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       829023a3-edf5-464e-966f-fc837053311c
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:15]
    :END:
What is the problem
if after a =git pull=
=git status= reports
changed files?
**** Answer:
The project may have
submodules. Run
=git submodule sync=
followed by
=git submodule update —recursive=
and see if that helps.
*** git                                                               :drill:
    SCHEDULED: <2019-03-04 Mon>
    :PROPERTIES:
    :ID:       9c2a4598-06de-4ed8-995c-7911333ef557
    :DRILL_LAST_INTERVAL: 86.9675
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-07 Fri 12:58]
    :END:
What to do with a file
that was accidentally
added and committed but
wasn't meant to be tracked?
**** Answer:
~git rm –cached <file>~
This will stage the removal
of the file from the repo
but leave it in the local 
directory as untracked file.
*** git                                                               :drill:
    SCHEDULED: <2019-02-18 Mon>
    :PROPERTIES:
    :ID:       f059841f-1afa-472f-a5d4-0a6060c32ae7
    :DRILL_LAST_INTERVAL: 125.0843
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-10-16 Tue 15:36]
    :END:

What does it mean to 
/stage the removal/ of
a file as in
~git rm –cached <file>~?
**** Answer:
The file becomes locally
untracked and pushing the
change to a repo will cause
every puller to lose it.
*** git                                                               :drill:
    SCHEDULED: <2019-01-25 Fri>
    :PROPERTIES:
    :ID:       67fb07ba-8a68-4525-974b-fd216b99a697
    :DRILL_LAST_INTERVAL: 45.6543
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.1
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-10 Mon 15:48]
    :END:
How to undo a 
~git add~ before 
committing?
**** Answer:
With
~git reset <file>~ to
undo a ~git add~ for a
certain file or with
~git reset~ to unstage
all due changes.
*** git                                                               :drill:
    SCHEDULED: <2019-05-14 Tue>
    :PROPERTIES:
    :ID:       cc9ebcad-a727-4d9e-bcdb-a19685dac067
    :DRILL_LAST_INTERVAL: 139.5227
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:26]
    :END:
How to get versioning information
for commits?
**** Answer:
With /git describe/, for example
~git describe --tags~ will show the
version of the current HEAD.
*** git                                                               :drill:
    SCHEDULED: <2019-02-12 Tue>
    :PROPERTIES:
    :ID:       9c4b2f7d-428b-4de0-8ca3-c353ac51de4c
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-25 Sun 13:09]
    :END:
How to check if the
remote was updated?
**** Answer:
With ~git remote show origin~.
*** git 							      :drill:
    SCHEDULED: <2019-01-11 Fri>
    :PROPERTIES:
    :ID:       d4a5db39-5c21-4995-bffc-4651b109e447
    :DRILL_LAST_INTERVAL: 224.5541
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.6
    :DRILL_EASE: 2.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-05-31 Thu 10:44]
    :END:
What is the first thing to do
when entering a directory managed with /git/?
**** Answer
Run /git-status/ to see if there are any
changes that need to be added for a commit
and if things are in sync with remote
repositories.
* Documents
** Pdf
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-30 Wed>
    :PROPERTIES:
    :ID:       6cd39566-3b13-46f1-be9c-285b21059372
    :DRILL_LAST_INTERVAL: 28.5942
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:52]
    :END:
How are indirect objects
defined?
**** Answer:
By =obj-number gen-number=
followed by the value of
the object embedded between
the =obj= and =endobj= keywords.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-02-01 Fri>
    :PROPERTIES:
    :ID:       efb08112-0753-482f-980c-0a75783cf1a4
    :DRILL_LAST_INTERVAL: 57.8097
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-05 Wed 12:59]
    :END:
How are indirect objects
used in pdf-files?
**** Answer:
An indirect object with
object number =on= and generation
number =gn= can be refered to
as =on gn R= with keyword
=R= denoting a reference.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       61d277e3-8cd9-4dbf-9cfb-4da52d398230
    :DRILL_LAST_INTERVAL: 48.3358
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:29]
    :END:
What does =10 0 obj=
in a decompressed pdf
file signify?
**** Answer:
The beginning of an
indirect object with
object number 10 and
generation number 0.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-02-06 Wed>
    :PROPERTIES:
    :ID:       b7bb87d7-dcf6-4124-a795-08b4e9256eb6
    :DRILL_LAST_INTERVAL: 60.975
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-07 Fri 12:59]
    :END:
What is the meaning
of hexadecimal characters
in angle brackets in an 
uncompressed pdf file, ie
=/V <fe...>=?
**** Answer:
It is a string with
two hex characters representing
a byte. Note that
pdf has two ways to
represent strings:
- as literal strings
  enclosed in parentheses
  (string)
- as hexadecimal strings
  enclosed in angle
  brackets
  <hexstring>
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-22 Tue>
    :PROPERTIES:
    :ID:       aed6dfef-2511-47ba-b550-7e31cee29a7c
    :DRILL_LAST_INTERVAL: 49.5409
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:27]
    :END:
What does =/T= stand for in
a (decompressed) Pdf-file?
**** Answer:
The =xref zero offset=.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       8814cc63-2ec7-40cd-9975-c020feb4cad1
    :DRILL_LAST_INTERVAL: 48.3358
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:26]
    :END:
Where does the value for
a form field go?
**** Answer:
To key =/V= in a dictionary.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-28 Mon>
    :PROPERTIES:
    :ID:       8b5c316e-7d92-4e39-bda2-6e3b488ceb23
    :DRILL_LAST_INTERVAL: 55.995
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:28]
    :END:
What do the double pointy
brackets =<< .. >>= in a 
decompressed Pdf file mean?
**** Answer:
They enclose a =dictionary=, which
is an object type containing 
a list of key-value pairs.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       6e7352bd-360a-4c4d-8a52-4e0ee9765806
    :DRILL_LAST_INTERVAL: 48.3358
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:28]
    :END:
What are the entities starting
with =/=, such as =/V=, =/TU=, in a 
decompressed pdf file called?
**** Answer:
They are =name objects= and are
names that mean something to
a pdf-reader. They are often used
as keys in a dictionary.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-12 Sat>
    :PROPERTIES:
    :ID:       da2722e1-acf1-429e-8b49-d78b6258987f
    :DRILL_LAST_INTERVAL: 41.8754
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-01 Sat 16:13]
    :END:
Where does text go in a pdf
file?
**** Answer:
Into a =stream= object between
=BT= (Begin Text) and =ET= (End Text)
markers as prefix argument to a
=Tj= instruction, as in
=(Hello World!)Tj=.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-22 Tue>
    :PROPERTIES:
    :ID:       b0a9059e-d4b4-4ff2-9aac-388784c2a775
    :DRILL_LAST_INTERVAL: 49.5409
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:28]
    :END:
What does =Td= between begin and 
end text markers signify?
**** Answer:
It is an instruction that 
determines the text position
as in =175 720 Td=.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       fe46303f-18c3-4df4-91f0-d90ccba4b526
    :DRILL_LAST_INTERVAL: 42.9258
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-01 Sat 16:15]
    :END:
Why does a pdf-stream always come
with a dictionary?
**** Answer:
Because a stream requires at
least an indication of its
length, described by a 
=/Length= mapping in a dictionary.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       81ce7e36-129e-43ac-8ad5-525b07ed705b
    :DRILL_LAST_INTERVAL: 48.3358
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-03 Mon 13:26]
    :END:
What does =/TU= stand for
in a (decompressed) Pdf-file?
**** Answer:
That is the alternate field
name for a form field, the
name presented to users.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-26 Sat>
    :PROPERTIES:
    :ID:       04b15be7-3b88-4610-aecc-b04d42b3c9d7
    :DRILL_LAST_INTERVAL: 54.6176
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-02 Sun 15:42]
    :END:
How to analyse pdf files on
the command line?
**** Answer:
Convert them to =qdf= format
with ~qpdf –qdf <infile.pdf> <outfile.pdf>~
and read them into a text-editor.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-02-05 Tue>
    :PROPERTIES:
    :ID:       fed97cf2-a901-46e6-9b3b-4b98c11d5e15
    :DRILL_LAST_INTERVAL: 62.5
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-05 Wed 12:57]
    :END:
What to do if a pdf-qfd file
becomes unreadable after bringing
it up in an editor?
**** Answer:
This happens in editors like ~vim~
which do conversions. Bring it up
as a binary file to prevent them,
ie. ~gvim -b <filename>~.
*** Analysis                                                          :drill:
    SCHEDULED: <2019-01-10 Thu>
    :PROPERTIES:
    :ID:       759e488a-ca77-4630-8f85-4a889838d633
    :DRILL_LAST_INTERVAL: 41.8754
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-29 Thu 11:31]
    :END:
What to do if a pdf-qfd file
becomes unreadable after making
changes in it?
**** Answer:
Try to run 
~fix-qfd <infile.pdf >outfile.pdf~
and see if that fixes the problem.
Otherwise read the documentation
of ~qpdf~ re ~qfd~ to see if the edit
was a legal one.
** Conversions
*** How to convert latex to svg? 				      :drill:
    :PROPERTIES:
    :ID:       59330d5e-20ac-4fec-b116-9eae36b3979e
    :END:
**** Answer
The most direct method would be
to install mathjax-node using
/npm install -g mathjax-node/ and
then to use its /tex2svg/ command. 
Alternatively, use /dvisvgm/ to convert
dvi to svg because this is part of a
tex-installation.
* Gnosis
** Alchemy
*** hermes                                                            :drill:
    SCHEDULED: <2019-03-22 Fri>
    :PROPERTIES:
    :ID:       4c21095d-4073-42f9-a149-ede18945d795
    :DRILL_LAST_INTERVAL: 78.3907
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-03 Thu 14:22]
    :END:
In which sense conforms
Condensed Matter Physics
with the =As Above So Below=
paradigm?
**** Answer:
It manages to derive some
universal principles of 
quantum fields by experiments
on matter. This seems to 
suggest that matter (below) 
follows the same laws as
the quantum vacuum (above).
*** elements                                                          :drill:
    SCHEDULED: <2019-03-06 Wed>
    :PROPERTIES:
    :ID:       b1442090-8141-4dfc-b139-992b914758c0
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-10-01 Mon 22:49]
    :END:
In which sense are air
and water the same?
**** Answer:
Air is like a water not
subject to gravity. Whereas
water flows downward, air
probes and disperses in all
directions equally.
*** mercury                                                           :drill:
    SCHEDULED: <2019-03-12 Tue>
    :PROPERTIES:
    :ID:       9b8af379-0c48-4978-b7e6-c7be48cb0cfc
    :DRILL_LAST_INTERVAL: 133.53
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-29 Mon 14:51]
    :END:
What is the principle
of Mercury?
**** Answer:
Probing and extension subject
to gravity. It probes its 
environment and extends into
favourable conditions thus 
causing dispersion.
*** mercury                                                           :drill:
    SCHEDULED: <2019-05-17 Fri>
    :PROPERTIES:
    :ID:       bfb1ad04-e7f7-4cf6-8403-0f96ea1e5c8f
    :DRILL_LAST_INTERVAL: 174.4301
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
:DRILL_FAILURE_COUNT: 0
:DRILL_AVERAGE_QUALITY: 3.167
:DRILL_EASE: 1.8
:DRILL_LAST_QUALITY: 3
:DRILL_LAST_REVIEWED: [2018-11-24 Sat 12:27]
    :END:
What is the /monkey/ from an alchemistic
point of view?
**** Answer:
Ever probing Mercury.
The aspect of Mercury in the mind. A
constantly probing and chattering 
agent. Although more airy than
watery due to the lack of direction
towards a centre of gravity.
*** the stone                                                         :drill:
    SCHEDULED: <2019-03-28 Thu>
    :PROPERTIES:
    :ID:       91e1efa3-6381-4fc0-8157-9c4617e55f64
    :DRILL_LAST_INTERVAL: 101.7564
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-16 Sun 17:48]
    :END:
In which sense is
/the kingdom/ of the
gospel of St Thomas
similar to the stone?
**** Answer:
It seems to be something
that grows from a small
seed, if you have it,
you will be given more.
Also compare to the /Tao/.
** Astrology
*** Eclipses                                                          :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       9c0b5123-0645-4d86-a37c-2253907aa2c3
    :DRILL_LAST_INTERVAL: 95.5713
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:26]
    :END:
What is the constellation
for a lunar eclipse?
**** Answer:
The moon is in opposition
to the sun and the true node
is in conjunction with the sun.
(Can a lunar eclipse occur with
the true node in opposition to the
sun?)
*** Cycles                                                            :drill:
    SCHEDULED: <2019-03-06 Wed>
    :PROPERTIES:
    :ID:       ffdeeaa9-0bc4-4c9f-a93d-ee2becb7c031
    :DRILL_LAST_INTERVAL: 142.4286
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-15 Mon 17:23]
    :END:
 What seems to be the most
 prominent seven year cycle?
**** Answer:
The occurence of consecutive
aspects of saturn, most notably
with the native sun.
** Naq Hammadi
*** The Mustard Seed                                                  :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       b8b21574-6eea-4433-8832-1a02ce79213b
    :DRILL_LAST_INTERVAL: 56.191
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-29 Thu 11:33]
    :END:
What is it that grows
from the mustard seed
in Christian terms?
**** Answer:
It is called ~faith~
and needs to grow into
a living being.
*** The Word                                                          :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       6fc02f7a-dea4-4668-907e-43f1bb76cbf2
    :DRILL_LAST_INTERVAL: 57.8097
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-20 Tue 09:50]
    :END:
What is the /Word/?
**** Answer:
The inherent purity that
is corrupted by its 
environment, an analogy
to the teachings of Jesus
residing in a corrupt body,
the Church.
*** Adam & Eve                                                        :drill:
    SCHEDULED: <2019-01-12 Sat>
    :PROPERTIES:
    :ID:       a09c24da-6487-4c2c-935e-5f622f69fe3d
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-23 Sun 16:06]
    :END:
In which sense did the
expulsion from paradise
bar access to the tree
of life?
**** Answer:
The resulting life of
toil results in distraction
by worldly affairs and 
prevents devotion to the 
/Holy Spirit/.
(The Hypostasis of
the Archeons, The
Reality of the Rulers)
*** Adam & Eve                                                        :drill:
    SCHEDULED: <2019-01-18 Fri>
    :PROPERTIES:
    :ID:       31dd4770-cf89-4bf6-a6a6-0aff486446d5
    :DRILL_LAST_INTERVAL: 60.975
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:08]
    :END:
Why did Adam die?
**** Answer:
Because he only had
a soul but not the
spirit.
(The Hypostasis of
the Archeons, The
Reality of the Rulers)
** Meditation
*** Language and Reality                                              :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       9593e137-26bf-4fa5-9659-216756405a0d
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:37]
    :END:
What happens after language
and worries stop?
**** Answer:
Access to the underlying
eternal reality begins, 
often perceived like a
door into the light or
the feeling of something 
unchangeable inside,
the Tao?
*** Language and Reality                                              :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       ee8310e0-3362-4937-a8fb-15055f706a95
    :DRILL_LAST_INTERVAL: 142.4286
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-04 Thu 14:29]
    :END:
What would reality look
like without language?
**** Answer:
Some sort of quantum 
superposition until it
collapses into a state 
that can be named or 
otherwise pinpointed.
*** Language and Reality                                              :drill:
    SCHEDULED: <2019-06-26 Wed>
    :PROPERTIES:
    :ID:       da3a1808-ba6d-4ff5-be7c-176bf38a455b
    :DRILL_LAST_INTERVAL: 184.2865
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:13]
    :END:
In which sense is language
like a quantum measurement?
**** Answer:
In the sense that reality
collapses into a word or
sentence just like a state
vector collapses to give a
measurement.
*** Self-Knowledge                                                    :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       7a201c84-df05-4c49-9fbb-335c09f48090
    :DRILL_LAST_INTERVAL: 118.5199
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-18 Tue 13:57]
    :END:
How could Astrology be used
to obtain knowledge of
oneself?
**** Answer:
By developing the true 
horoscope of oneself. Derive
planetary positions according
to your own character traits
as perceived by yourself.
*** Zen                                                               :drill:
    SCHEDULED: <2019-08-13 Tue>
    :PROPERTIES:
    :ID:       fc716a71-2964-4afd-8909-47bab460da0a
    :DRILL_LAST_INTERVAL: 235.3892
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:32]
    :END:
Why the obsession of Zen with
breaking away from words?
**** Answer:
This is meant to get rid of
the confusion of language 
with reality. Reality is more 
varied than language, the Tao
that can be named is not the 
eternal Tao.
* Language
** Chinese
*** Characters                                                        :drill:
    SCHEDULED: <2019-01-18 Fri>
    :PROPERTIES:
    :ID:       8248419e-ec16-408b-a1a6-e700b5b16d48
    :DRILL_LAST_INTERVAL: 17.1836
    :DRILL_REPEATS_SINCE_FAIL: 11
    :DRILL_TOTAL_REPEATS: 24
    :DRILL_FAILURE_COUNT: 7
    :DRILL_AVERAGE_QUALITY: 2.708
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:50]
    :END:
的
**** Answer:
possessive, adjectival suffix
*** Characters                                                        :drill:
    SCHEDULED: <2019-01-21 Mon>
    :PROPERTIES:
    :ID:       731e55ab-070b-4fd0-846a-69feeae964f8
    :DRILL_LAST_INTERVAL: 23.0272
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.9
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:03]
    :END:
我的
**** Answer:
my
*** Characters                                                        :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       b91e6fb5-326b-45d1-9e3d-921d80c2da9d
    :DRILL_LAST_INTERVAL: 59.1478
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 5
    :DRILL_AVERAGE_QUALITY: 2.545
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-10 Sat 12:02]
    :END:
我
**** Answer:
Personal Pronoun first person: I, me, we, us
*** Characters                                                        :drill:
    SCHEDULED: <2019-02-05 Tue>
    :PROPERTIES:
    :ID:       6c12b2b5-554d-4572-82b3-52c0f8c410b7
    :DRILL_LAST_INTERVAL: 78.0832
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-19 Mon 16:49]
    :END:
一
**** Answer:
one, a little
*** Characters                                                        :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       8fbf1c2f-dd1a-4f24-9dc7-eab876b9f928
    :DRILL_LAST_INTERVAL: 7.6096
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 38
    :DRILL_FAILURE_COUNT: 14
    :DRILL_AVERAGE_QUALITY: 2.632
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:43]
    :END:
是
**** Answers:
to be; indeed, yes, right; demonstrative pronoun
*** Characters                                                        :drill:
    SCHEDULED: <2019-01-21 Mon>
    :PROPERTIES:
    :ID:       813e8718-8c89-46fc-bb21-bec2f9401647
    :DRILL_LAST_INTERVAL: 23.0272
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 2.819
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:03]
    :END:
不
**** Answer:
negative prefix; no, not; un-;
*** Characters                                                        :drill:
    SCHEDULED: <2019-01-31 Thu>
    :PROPERTIES:
    :ID:       b8d57f8a-79a4-4257-9333-9365db72d541
    :DRILL_LAST_INTERVAL: 27.2629
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 2.751
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:41]
    :END:
目 
**** Answer:
eye; look, see; division, topic
* Mathematics
** Algebra
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       b46a3f0a-f3d1-4722-a424-9ed5672a520e
    :DRILL_LAST_INTERVAL: 42.0307
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 13:02]
    :END:
What distinguishes natural
from unnatural transformations
between functors /F, G/?
**** Answer:
In a natural transformation,
the commutativity in
/η(Y)∘F(f)=G(f)∘η(X)/ only
depends on objects 
/X, Y/ of the source
category but not on
the morphism /f/. In an
unnatural transformation
there are morphisms where
this commutativity with
/η(X), η(Y)/ is violated.
*** Categories                                                        :drill:
    SCHEDULED: <2019-02-07 Thu>
    :PROPERTIES:
    :ID:       a87e7b23-ac56-4703-a3cc-8236a806bbee
    :DRILL_LAST_INTERVAL: 58.0238
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-11 Tue 11:44]
    :END:
What is a transformation
between functors 
/F, G:C→D/?
**** Answer:
A collection of arrows
/η(X):F(X)→G(X)/ in category
/D/ indexed by objects /X/
from category /C/.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-19 Sat>
    :PROPERTIES:
    :ID:       ebdb23af-95a6-4cdf-b483-73bcc1efdcb1
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:52]
    :END:
What is a topos?
**** Answer:
A certain type of category
abstracting the notion of
/position/.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-19 Sat>
    :PROPERTIES:
    :ID:       ca76b2af-e2f1-4040-bdcb-3926278e9319
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:53]
    :END:
What is a finite limit
in set-theoretic terms?
**** Answer:
A finite cartesian product of sets.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       7c5e9b07-cf55-4d5a-b4ce-3d96e23c896b
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:44]
    :END:
What is a finite colimit
in set-theoretic terms?
**** Answer:
A finite disjoint union
of sets.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       b0314792-8af2-4037-920e-c4210128880a
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:45]
    :END:
What are the consequences
of a category having
finite limits and colimits?
**** Answer:
The presence of initial and
terminal objects as well as
equalizers and coequalizer.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       e11fc233-0bd1-4065-9f8e-4c096bd4e01e
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:43]
    :END:
Why is the presence of
an initial object
in a category with
finite limits and colimits not
surprising?
**** Answer:
Because a finite colimit of
no object would correpond 
to a disjoint union of no
sets, hence the empty set
which is a special case of
an initial object.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       821e8936-b5a9-4774-a1a5-e1092df32e2c
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:41]
    :END:
Why is the presence of
terminal objects in a 
category with finite limits
and colimits not surprising?
**** Answer:
Terminal objects are like
one element sets, since 
there is an initial set
a terminal object should
be constructible by packing
the initial object.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       ca810609-4bec-48f9-a667-914678224c87
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:39]
    :END:
What is an equalizer
in a category?
**** Answer:
The equivalent of the subset
consisting of all /x ∈ X/ such that
/f(x)=g(x)/ for morpisms /X→Y/.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-22 Tue>
    :PROPERTIES:
    :ID:       9d3ae010-5d67-485e-99ea-4fa9669686e3
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-30 Sun 15:44]
    :END:
What is a coequalizer in
a category?
**** Answer:
The equivalent of a quotient
set of /X/ by the relation /(a,b)∈ R/
iff /a=f(y), b=g(y)/ (or vice versa)
for morphisms /f,g:Y→X/.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       4542132e-192b-488a-b6f1-1c3253798523
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:35]
    :END:
What does it mean for
a category to have
exponentials?
**** Answer:
It means there is an object
/X^Y/ for every pair of objects
which acts like the set of
functions from X to Y.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-18 Fri>
    :PROPERTIES:
    :ID:       a743d327-d62c-4252-98e7-4e7144cbd547
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:57]
    :END:
What is a subobject
classifier?
**** Answer:
A subobject classifier /Ω/ is
an object that behaves like
/{0,1}/ for sets where functions
/f:X→Ω/ correspond to subsets
of /X/. In general, morphisms
/f:X→Ω/ correspond to subobjects
of /X/.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-18 Fri>
    :PROPERTIES:
    :ID:       14a52f96-0d50-446e-b79f-21ddf33f27c3
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:55]
    :END:
How to construct a topos
from finite sets?
**** Answer:
For the category of finite, ordered
sets Δ, a presheaf is a
simplicial set and the category
of these presheaves is a topos.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-18 Fri>
    :PROPERTIES:
    :ID:       f90d67ec-c9f2-4dfd-8b33-3cd44bfb9bd0
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:56]
    :END:
What is the simplex
category /Δ/?
**** Answer:
The category of finite,
(linearly) ordered sets whose
morphisms are (nonstrictly)
order preserving maps.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-10 Thu>
    :PROPERTIES:
    :ID:       329ce0e8-4f7b-409f-9e83-a6d3d8d4a154
    :DRILL_LAST_INTERVAL: 8.2449
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.8
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-02 Wed 12:50]
    :END:
What is a simplicial
set in the categorical
sense?
**** Answer:
A contravariant functor
from the simplex category
to the category of sets:
/σ:Δ->Set/, or equivalently,
a covariant functor
/σ:Δᵒᵖ→Set/.
*** Categories                                                        :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       50d70dcb-b8fb-45b2-968b-571734bf2d04
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:41]
    :END:
How to construct a category
from simplicial sets?
**** Answer:
Since a simplicial set is
a contravariant functor /σ:Δ→Set/,
a category can be constructed
using these functors as objects
and natural transformations
between them as morphisms.
*** Relativity                                                        :drill:
    SCHEDULED: <2019-03-23 Sat>
    :PROPERTIES:
    :ID:       434f9b4f-17e7-475c-9088-db39a07b4449
    :DRILL_LAST_INTERVAL: 142.96
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:13]
    :END:
What is the Lorentz group?
**** Answer:
In its full generality it
is the matrix Lie group
preserving the quadratic form
/t²-x²-y²-z²/ also called /O(1,3)/.
*** Relativity                                                        :drill:
    SCHEDULED: <2019-02-26 Tue>
    :PROPERTIES:
    :ID:       3a955d9b-ffa7-439e-978c-a24fb7c02d72
    :DRILL_LAST_INTERVAL: 122.0595
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-27 Sat 12:54]
    :END:
What is the topological structure
of the Lorentz group?
**** Answer:
It is a non-compact non-abelian
Lie-group consisting of four
connected components that are
doubly connected.
*** Relativity                                                        :drill:
    SCHEDULED: <2019-03-23 Sat>
    :PROPERTIES:
    :ID:       6eb0da88-c77d-4253-8386-70fe55e2805a
    :DRILL_LAST_INTERVAL: 142.96
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:11]
    :END:
What is the orthochronous
subgroup of the Lorentz group?
**** Answer:
These are the elements of the
Lorentz group that preserve the
direction of time.
*** Relativity                                                        :drill:
    SCHEDULED: <2019-01-26 Sat>
    :PROPERTIES:
    :ID:       35442c44-395a-4284-b286-5c7c9ecf0649
    :DRILL_LAST_INTERVAL: 63.4506
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-24 Sat 12:27]
    :END:
What are proper Lorentz transformations?
**** Answer:
Lorentz transformations of determinant 1,
they preserve orientation and form the 
subgroup /SO(1,3)/.
*** Relativity                                                        :drill:
    SCHEDULED: <2019-01-27 Sun>
    :PROPERTIES:
    :ID:       6e6c8903-3cda-4c5c-a6ae-21c0bcafee0b
    :DRILL_LAST_INTERVAL: 101.3126
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-18 Thu 14:27]
    :END:
What is the group /SO⁺(1,3)/?
**** Answer:
This is the subgroup of proper,
orthochronous Lorentz transformations,
also called the /restricted/ Lorentz
group.
*** Relativity                                                        :drill:
    SCHEDULED: <2019-04-06 Sat>
    :PROPERTIES:
    :ID:       0475cd80-546c-499a-a746-13812b44a37c
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-01 Thu 13:08]
    :END:
What is the topological characteristic
of the restricted Lorentz group?
**** Answer:
It is the connected component of the
Lorentz group that contains the 
identity.
*** Relativity                                                        :drill:
    SCHEDULED: <2019-02-26 Tue>
    :PROPERTIES:
    :ID:       bd3d567e-b144-4327-a636-4933015ef2b0
    :DRILL_LAST_INTERVAL: 122.0595
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-27 Sat 12:54]
    :END:
What is the algebraic structure of
/O(1,3)/ in terms of the restricted
Lorentz group?
**** Answer:
The quotient O(1,3)/SO⁺(1,3) is isomorphic
the the group spanned by time-reversal and
space-inversion. Thus, any arbitrary
Lorentz transformation is a semi-direct
product of an element of /SO⁺(1,3)/ and
a space-time inversion. 
*** Relativity                                                        :drill:
    SCHEDULED: <2019-02-26 Tue>
    :PROPERTIES:
    :ID:       a46646d7-9068-4eea-8e20-a42747f2b4ba
    :DRILL_LAST_INTERVAL: 122.0595
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-27 Sat 12:53]
    :END:
How are elements of /SO⁺(1,3)/ usually
written?
**** Answer:
Since /SO⁺(1,3)/ is generated by spatial
rotations and Lorentz boosts, it can
be written as a product of those.
*** Quantum Algebras						      :drill:
    SCHEDULED: <2019-01-30 Wed>
    :PROPERTIES:
    :ID:       09a1eb47-7c07-4543-893c-c77430442c2f
    :DRILL_LAST_INTERVAL: 98.1306
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-24 Wed 12:56]
    :END:
With bounded operators
resembling the complex
numbers, is there something
like the polar representation?
**** Answer:
Yes, it is called the
/Polar Decomposition/ of a
bounded operator. Every bounded
operator /T/ can be written as
/T=UA/ where /U/ is a partial
isometry and /A/ is a positive
operator such that 
/ker T=ker A=ker U/.
*** Quantum Algebras						      :drill:
    SCHEDULED: <2019-02-22 Fri>
    :PROPERTIES:
    :ID:       03c6cdba-9412-4ecc-84e8-ca4e032669c4
    :DRILL_LAST_INTERVAL: 114.0285
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:09]
    :END:
Is the polar decomposition
of a bounded operator unique?
**** Answer:
If /T=UA=VB/ with partial isometries
/U, V/ and positive operators /A, B/
with /ker U=ker A/ and /ker V=ker B/
then /U=V/ and /A=B/.
*** Quantum Algebras						      :drill:
    SCHEDULED: <2019-05-18 Sat>
    :PROPERTIES:
    :ID:       71612fc3-65a0-4dc2-b7de-b6bf73ebb4cc
    :DRILL_LAST_INTERVAL: 139.5227
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:01]
    :END:
In which sense does the positive
operator /A/ in the polar decomposition
/T=UA/ of bounded operator /T/ play the
role of a length?
**** Answer:
/A/ is the positive square root of
/T*T=|T|²/. Since positive operators
are self adjoint, they behave in a
sense like positive real numbers, so
/|T|/ is a bit like a length.
*** Quantum Algebras						      :drill:
    SCHEDULED: <2019-02-06 Wed>
    :PROPERTIES:
    :ID:       7468d8bb-a84d-4e9f-8d79-2691a9c754ae
    :DRILL_LAST_INTERVAL: 103.8369
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-25 Thu 12:41]
    :END:
What is a partial isometry?
**** Answer:
A bounded operator /U/ that is an
isometry on the orthogonal complement
of its kernel.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-05-18 Sat>
    :PROPERTIES:
    :ID:       fe7e44f5-356b-4040-ac38-4aa80d0ffe4c
    :DRILL_LAST_INTERVAL: 139.5227
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:02]
    :END:
How is the norm of /Z/
related to the norms of
its components in its
cartesian decomposition
/Z=X+iY/?
**** Answer:
This is governed by the
triangle equality. In addition,
/‖Zx‖²=‖Xx‖²+‖Yx‖² ∀x∈ℍ/ is
equivalent to /Z/ being normal.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-04-17 Wed>
    :PROPERTIES:
    :ID:       138ead87-8967-44d6-b7ae-4915f86db453
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-12 Mon 15:45]
    :END:
Do the /X, Y/ in the cartesian
decomposition /Z=X+iY/ of a
bounded operator /Z/ always
commute?
**** Answer:
No, that is a feature of /normal/
operators, ie 
/XY=YX ⇔ Z is normal/.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-01-28 Mon>
    :PROPERTIES:
    :ID:       230b8cca-164b-43d3-aa37-652243f0c2a1
    :DRILL_LAST_INTERVAL: 97.7668
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-22 Mon 15:07]
    :END:
In which sense do bounded operators
on a Hilbert space resemble complex
numbers?
**** Answer:
Every bounded operator can be written
as /Z=X+iY/ with unique self adjoint 
operators /X, Y/. 
Thus, bounded operators are 
like complex numbers with self adjoint
operators playing the role of real
numbers.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-05-12 Sun>
    :PROPERTIES:
    :ID:       3672fd79-e972-48f4-8a42-39e5d9f40748
    :DRILL_LAST_INTERVAL: 174.9488
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.2
    :DRILL_EASE: 2.6
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:09]
    :END:
Are bounded operators on a Hilbert
space always compact?
**** Answer:
No, that's actually a misnomer,
bounded operators are /continuous/
rather than compact.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-04-02 Tue>
    :PROPERTIES:
    :ID:       226978c1-231d-42e1-ba0e-093f6ff1d2c1
    :DRILL_LAST_INTERVAL: 143.4915
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-10 Sat 11:59]
    :END:
What is a continuous operator on
a Hilbert space?
**** Answer:
An operator such that
/xₙ→x/ implies /Txₙ→Tx/.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-03-21 Thu>
    :PROPERTIES:
    :ID:       8622b9c0-8f9c-4fbe-906e-c507c1aa0b4c
    :DRILL_LAST_INTERVAL: 140.6887
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:10]
    :END:
How are isometric operators related
to unitary ones?
**** Answer:
Isometric operators are like unitary
operators except that they may not be
surjective.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       46ad0d7a-2654-4e47-a6fa-0945e2d7c6a0
    :DRILL_LAST_INTERVAL: 13.096
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.9
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:35]
    :END:
How are Heisenberg groups
related to symplectic vector
spaces?
**** Answer:
It is possible to construct
a Heisenberg group /H(V)/ on
any symplectic vector space
/(V,ω)/ by defining
/(v,t)(v',t')=(v+v',t+t'+½ω(v,v')/
on the set /V×ℝ/.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-03-23 Sat>
    :PROPERTIES:
    :ID:       b75eb632-c84b-4a38-a203-433a5b5ff764
    :DRILL_LAST_INTERVAL: 142.96
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:10]
    :END:
What is the point of constructing
Heisenberg groups from symplectic
vector spaces?
**** Answer:
In the Darboux basis of the
space the coefficients are
like canonically conjugate
variables and with the Heisenberg
group on them they obtain
quantum-mechanical meaning.
*** Quantum Algebras                                                  :drill:
    SCHEDULED: <2019-04-19 Fri>
    :PROPERTIES:
    :ID:       3b67b442-fee1-4123-84f1-d3d18e493b7c
    :DRILL_LAST_INTERVAL: 135.5237
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.556
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-04 Tue 14:16]
    :END:
What is the connection of
the Heisenberg group to
the Weyl algebra?
**** Answer:
The Weyl algebra is a quotient
of the universal envelopping 
algebra of the Lie-algebra of the 
Heisenberg group obtained by
mapping the canonical variables
to the differential operators and
coordinates.
*** p-adic numbers						      :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       6b76eb5b-5272-43cc-bc15-ca08c97ca9a5
    :DRILL_LAST_INTERVAL: 64.465
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 14
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.001
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-05 Mon 16:50]
    :END:
What is the ring of /p/-adic integers?
**** Answer:
The /inverse/ limit of the rings /ℤ/pⁿℤ/, 
ie all integer sequences /(aₙ)/ 
such that /aₙ ∈ ℤ/pⁿℤ/ and 
/aₙ≡ aₘ mod pⁿ/ if /n ≤ m/.
*** p-adic numbers						      :drill:
    SCHEDULED: <2019-12-20 Fri>
    :PROPERTIES:
    :ID:       175b7088-8e94-4a76-a02e-28d0862befc3
    :DRILL_LAST_INTERVAL: 397.1835
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.833
    :DRILL_EASE: 2.28
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:05]
    :END:
In which sense can numbers /m∈ℕ/ be considered
p-adic?
**** Answer:
By forming the sequence /(aₙ)/ as 
/aₙ≡m mod pⁿ/.
*** p-adic numbers						      :drill:
    SCHEDULED: <2020-06-06 Sat>
    :PROPERTIES:
    :ID:       7a74d5b4-5299-46ad-a4d4-015704c152d0
    :DRILL_LAST_INTERVAL: 543.0768
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.5
    :DRILL_EASE: 2.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-11 Tue 11:44]
    :END:
How are the ring operations defined on the 
/p/-adic integers?
**** Answer:
By componentwise addition and multiplication 
of the sequences.
*** p-adic numbers						      :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       0021bc5b-d1d1-484c-baa0-dc550d0a6674
    :DRILL_LAST_INTERVAL: 155.4831
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-08-21 Tue 10:58]
    :END:
How are the sequences /(aₙ)/ 
representing /p/-adic integers related to 
their usual series representation 
/∑ₙ bₙpⁿ/?
**** Answer:
By the partial sums of the series, which yield 
the elements of the sequence as 
/aₙ=∑ⁿbₘpᵐ/.
*** Permutations                                                      :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       246283cb-8d0e-49e4-9234-ca98cc53273f
    :DRILL_LAST_INTERVAL: 48.6837
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:52]
    :END:
What is the main interest
when considering containment
of permutations?
**** Answer:
The interest actually lies
with /avoidance/. A permutation
/π/ avoids /σ/ if /π/ doesn't contain
/σ/. Of interest is the number
/Sₙ(π)/, which is the number of
/n/-permutations avoiding /π/. For
every /π/ there is a constant
/c(π)/ such that /Sₙ(π)≤c(π)ⁿ/.

*** Permutations                                                      :drill:
    SCHEDULED: <2019-02-12 Tue>
    :PROPERTIES:
    :ID:       3a9f2ded-95cf-4d48-a678-bc52e8baccc1
    :DRILL_LAST_INTERVAL: 54.8198
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 15:01]
    :END:
How is containment of
permutations expressed
in terms of permutation
matrices?
**** Answer:
In terms of matrix
containment. An /nxn/ 
matrix /A/ contains a
/kxl/ matrix /P/ if /A/ has
a submatrix /D/, possibly
obtained by deleting rows
and columns, such that
/P=D/. Note that this is
usually only defined for
binary matrices.
*** Permutations                                                      :drill:
    SCHEDULED: <2019-02-06 Wed>
    :PROPERTIES:
    :ID:       406e45b3-19b0-4c9e-bf5f-2ad40947cc04
    :DRILL_LAST_INTERVAL: 49.8974
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 12:02]
    :END:
How is containment of
permutations /σ/ on /[k]/
in /π/ on /[n]/ with /k<n/
defined in functional 
terms?
**** Answer:
The permutation /σ/ is
contained in /π/ if there
exists a strictly increasing
/τ: [k]→[n]/ such that 
/π∘τ(i) < π∘τ(j) ⇔ σ(i) < σ(j)/.
*** Permutations                                                      :drill:
    SCHEDULED: <2019-01-26 Sat>
    :PROPERTIES:
    :ID:       ec453812-83e7-4f47-bc7a-92c7b2d4007e
    :DRILL_LAST_INTERVAL: 42.1729
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:32]
    :END:
What does it mean for
a permutation to contain
another (shorter) 
permutation?
**** Answer:
A permutation /π/ on /[n]/ is
said to contain /σ/ on /[k]/
if there exist integers
/1≤x₁<x₂…<xₖ≤n/ such that
/π(xᵢ)<π(xⱼ) ⇔ σ(i)<σ(j)/
for /1≤i,j≤k/.
** Geometry
*** Finite                                                            :drill:
    SCHEDULED: <2019-01-18 Fri>
    :PROPERTIES:
    :ID:       8946f43b-ab5f-4a98-9191-86a8a82b44ff
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:53]
    :END:
What is a 
Simplicial Set?
**** Answer:
A generalization of directed
multigraphs to higher dimensions,
containing, amongst other things,
simplexes and their faces.
*** Fractional Calculus                                               :drill:
    SCHEDULED: <2019-05-06 Mon>
    :PROPERTIES:
    :ID:       52a74e90-6eec-438a-8dc7-f3d68539bf6f
    :DRILL_LAST_INTERVAL: 124.321
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 2.715
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-02 Wed 12:50]
    :END:
How does Heaviside solve
/∂ₓ²u=a²∂ₜu/?
**** Answer:
By treating /∂ₜ/ as a constant
and using ODE techniques to
arrive at solutions /u(x,t)/ that 
are linear combinations of
/exp(±a∂ₜ^½x)/. Expanding and
factoring out the fractional
derivative then yields the
result.
*** Fractional Calculus                                               :drill:
    SCHEDULED: <2019-04-15 Mon>
    :PROPERTIES:
    :ID:       eb154591-92d3-4a8d-8413-e80fd67e322a
    :DRILL_LAST_INTERVAL: 110.3969
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:57]
    :END:
How can fractional derivatives
be used to approximate functions?
**** Answer:
By using the fractional Taylor
Theorem
f(x+h)=f(x)+∂ₓᵖf|ₓhᵖ/Γ(p+1)+R
for /0<p≤1/, ie the tangent
approximation is replaced
by a power law.
*** Fractional Calculus                                               :drill:
    SCHEDULED: <2019-03-24 Sun>
    :PROPERTIES:
    :ID:       0102aa47-f1bb-4a4f-988e-3f9f78617127
    :DRILL_LAST_INTERVAL: 98.0332
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-16 Sun 17:47]
    :END:
How do fractional derivatives
occur naturally?
**** Answer:
When expanding expressions
containing /∂ₓ/ into power
series, for example in the
solution of the heat
equation according to
Heaviside.
*** Differential                                                      :drill:
    SCHEDULED: <2019-01-29 Tue>
    :PROPERTIES:
    :ID:       1e427a6d-45a3-4405-ba22-ed0226d9f680
    :DRILL_LAST_INTERVAL: 130.6455
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-20 Thu 16:17]
    :END:
Why can a vector field
be considered a differential
operator?
**** Answer:
Because it can be viewed as
a field of directional 
derivatives. As such, it
assigns to every sufficiently
smooth function a field of
directional derivatives, an
assignment that can be expressed
as a differential operator.
*** Differential						      :drill:
    SCHEDULED: <2019-02-20 Wed>
    :PROPERTIES:
    :ID:       e05ccbee-8415-4796-a494-64f2c880e243
    :DRILL_LAST_INTERVAL: 162.9166
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.778
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-10 Mon 15:06]
    :END:
What does the vector field /∂ₓ/
look like in two dimensions?
**** Answer:
These are the unit arrows pointing
in the direction of constant /y/, ie
to the right in the normal /x,y/ plane.
*** Differential						      :drill:
    SCHEDULED: <2019-01-27 Sun>
    :PROPERTIES:
    :ID:       9e335c5e-2c9a-4089-af6c-ff02c2211346
    :DRILL_LAST_INTERVAL: 81.2246
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.231
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-07 Wed 12:14]
    :END:
Why are the partial differential 
operators in the unit directions 
considered a basis for vector-fields?
**** Answer:
Because vector fields are linear operators
assigning to each scalar field a field 
of directional derivatives given by the
directions of the vectors in the vector field. 
*** Differential						      :drill:
    SCHEDULED: <2019-02-25 Mon>
    :PROPERTIES:
    :ID:       f34ab62f-12a9-4edb-a4fb-2500c8359cee
    :DRILL_LAST_INTERVAL: 51.4751
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:03]
    :END:
What is the problem when trying to define a 
derivative of vector fields on a manifold?
**** Answer:
In most cases the difference /v(x+hw)-v(x)/
doesn't make sense because the vectors
involved are not in the same tangent space.
Using coordinate-wise differences doesn't 
help because it makes the
result dependent on the choice of 
coordinate system.
*** Differential						      :drill:
    SCHEDULED: <2019-07-31 Wed>
    :PROPERTIES:
    :ID:       e72d3169-660c-409c-8b65-1b87edc11af5
    :DRILL_LAST_INTERVAL: 254.7944
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:14]
    :END:
Why is it a problem that the ordinary
derivative of vector fields is not 
tensorial?
**** Answer:
Because this means that this derivative
depends on the choice of coordinate system.
*** Differential						      :drill:
    SCHEDULED: <2019-08-15 Thu>
    :PROPERTIES:
    :ID:       63934d3f-1f6a-4e4d-b1e5-0d1ddcb7e024
    :DRILL_LAST_INTERVAL: 267.235
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-21 Wed 13:38]
    :END:
What is the geometric idea of calculating
the covariant derivative of a vector field?
**** Answer:
To calculate the derivative of the vector
field at /x/, the vector /v(x+tw)/ undergoes
a parallel transport into the tangent
space at /x/ and is compared to /v(x)/. 
*** Differential						      :drill:
    SCHEDULED: <2019-09-29 Sun>
    :PROPERTIES:
    :ID:       29efe539-ce68-4447-a25d-8d5f21b06a52
    :DRILL_LAST_INTERVAL: 281.7128
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:30]
    :END:
What is the idea of parallel transport
of tangent vectors on a manifold as used
in the calculation of the covariant
derivative?
**** Answer:
The embedding of the manifold in an Euclidean
space is used, where parallel transport is 
well defined. The vectors are transported in
the ambient space and projected onto the tangent
spaces of the manifold.
*** Differential						      :drill:
    SCHEDULED: <2019-07-23 Tue>
    :PROPERTIES:
    :ID:       a61437ca-4da8-4081-833f-bed25acc53ea
    :DRILL_LAST_INTERVAL: 247.6347
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-17 Sat 14:29]
    :END:
What is the advantage of the Lie derivative
over covariant derivatives on a manifold? 
**** Answer:
Covariant derivatives depend on the metric of
the manifold whereas Lie-type derivatives don't.
*** Tensors                                                           :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       430cf2d5-9fe9-4146-8906-9729b5db6616
    :DRILL_LAST_INTERVAL: 56.4053
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:58]
    :END:
Why can tensors always
be represented in two
dimensions?
**** Answer:
Because there are only
two types of indices, namely
upper and lower. These
can be assigned to columns and 
rows, respectively, so any 
tensor can be represented 
recursively as a 
combination of rows or 
columns of rows or
columns.
*** Tensors                                                           :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       9e2a7e79-2ef5-4bd7-88f4-8f27e0940e60
    :DRILL_LAST_INTERVAL: 56.4053
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:00]
    :END:
Where does the name
/contravariant/ for
coefficients of basis
vectors come from?
**** Answer:
If a vector is to be
basis independent, its 
coefficients have to
/contra-vary/ with a change
of basis in order to
compensate for the change
in basis.
*** Tensors                                                           :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       51379d18-165a-4cc6-b65f-b099ee1f8410
    :DRILL_LAST_INTERVAL: 56.4053
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:02]
    :END:
What is the tensor
/aᵢʲ/ in terms of rows
and columns?
**** Answer:
It is a column vector
of row vectors, in other
words a matrix.
*** Tensors                                                           :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       d82607ec-9d03-4bb3-ba8a-5bb87b7c78f2
    :DRILL_LAST_INTERVAL: 56.4053
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:59]
    :END:
Why is /(aᵢⱼ)/ not a
matrix in tensor terms?
**** Answer:
Because it is a row vector
of row vectors and doesn't
have columns, like a matrix
would.
*** Tensors                                                           :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       f6f54257-424c-4e8a-a81d-e16ef804ba70
    :DRILL_LAST_INTERVAL: 56.4053
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.75
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:01]
    :END:
What does /aᵢʲₖ/ describe in
terms of rows and columns?
**** Answer:
It is a row of columns 
containing rows, in other
words a row of matrices.
*** Tensors                                                           :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       9464c4fd-3e96-4728-853e-c2cb8829d548
    :DRILL_LAST_INTERVAL: 56.4053
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:00]
    :END:
How to describe a column
of matrices in tensor
notation?
**** Answer:
As /aᵢʲᵏ/.
*** Tensors                                                           :drill:
    SCHEDULED: <2019-02-09 Sat>
    :PROPERTIES:
    :ID:       3e7b1bfc-50c1-485e-ad8c-9364d6310634
    :DRILL_LAST_INTERVAL: 44.4678
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:08]
    :END:
How can tensor indices
be related to rows and
columns?
**** Answer:
In the usual notation
with vectors as columns, 
contravariant vectors
/(aⁱ)/ correspond to
column vectors and covariant
tensors /(aᵢ)/ to rows. The rest
follows from considering
higher order tensors as row
or columns of lower order
tensors according to the position
of the last index.
** Logic
*** Curry Howard                                                      :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       d03c26c3-aab0-4698-b521-e29e6fc4749d
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:49]
    :END:
How to prove theorems
using the /Curry Howard/
correspondence?
**** Answer:
Construct the type corresponding
to the theorem and find a value
that has that type.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       7c3adb87-fa54-4399-aff1-23f35aca4797
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:48]
    :END:
Why is there no function
=f::a->b= in Haskell?
**** Answer:
Because there is no way
to turn a general type
=a= into another general
type =b=, something has
to be known about these
types.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       c9bea7ad-208e-421c-bfde-b674a9a61baa
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:51]
    :END:
When is the proposition
=a→b= true according to
the /Curry Howard/
correspondence?
**** Answer:
Whenever the corresponding
type =a -> b= is inhabited,
ie there is a function
=f::a -> b=.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2019-01-18 Fri>
    :PROPERTIES:
    :ID:       fe7ec71f-4892-47e9-a3d1-2526ca9174b5
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:49]
    :END:
What is the problem with
the /bottom type/ =⊥= from
a logical perspective?
**** Answer:
Since every type contains
the bottom type =⊥=, every
theorem in the corresponding
logic would be true, thus
making it inconsistent.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       b9a0ed46-415a-49cc-bcb6-74c6347a5164
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:48]
    :END:
How is negation expressed 
in the Curry Howard
correspondence?
**** Answer:
As =type Not a = =a -> Void= in 
Haskell syntax where =Void= is an 
empty data-type, ie. one 
without a constructor.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       beaeb7c9-f556-49dc-9d26-e9f2844b032b
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:47]
    :END:
Why is the logic corresponding 
to the standard /λ/ calculus
intuitionistic?
**** Answer:
Because in its type system
=Not Not a= can not be proven.
It would correspond to type
=((a -> Void) -> Void) -> a=,
for which there is no standard
/λ/-expression.
*** Curry Howard                                                      :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       77f0fd8e-bb8f-4d05-b6c0-3290dae05e45
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:51]
    :END:
What does a constructor
prove in the Curry-Howard
correpondence?
**** Answer:
That depends on its exact
function signature but 
essentially it proves that
a type is populated, possibly
depending on other types.
*** Linear                                                            :drill:
    SCHEDULED: <2019-03-19 Tue>
    :PROPERTIES:
    :ID:       be051ebc-472a-4588-9a64-2ace8cbce06c
    :DRILL_LAST_INTERVAL: 134.0293
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-05 Mon 16:46]
    :END:
What is the difference between
the two conjunctions ⊗ and &
in linear logic?
**** Answer:
Values of /A⊗B/ are strict, both
components are necessary. 
Values of /A&B/ are lazy.
*** Linear                                                            :drill:
    SCHEDULED: <2019-02-25 Mon>
    :PROPERTIES:
    :ID:       023f42b9-fe61-4afb-870d-fbc821eddb82
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-22 Sat 13:24]
    :END:
Why is /A&B/ in linear logic more
similar to classical conjunction
than /A⊗B/?
**** Answer:
Because there is no projection
for ⊗, ie no rules /A⊗B→A/ 
nor /A⊗B→B/.
*** Linear                                                            :drill:
    SCHEDULED: <2019-03-25 Mon>
    :PROPERTIES:
    :ID:       707c1469-4d69-4e34-87ab-c2fe6d2b9b29
    :DRILL_LAST_INTERVAL: 137.0312
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-08 Thu 12:10]
    :END:
Why is linear logic suitable
for both quantum mechanics and
functional programming?
**** Answer:
Because of its distinction 
between strict and lazy 
evaluation, which occurs in
quantum mechanics in the form
of unitary evolution.
*** Linear                                                            :drill:
    SCHEDULED: <2019-03-19 Tue>
    :PROPERTIES:
    :ID:       ce923632-2b4b-49f8-8f78-b8ee22bb711f
    :DRILL_LAST_INTERVAL: 134.0293
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-05 Mon 16:45]
    :END:
What is the bang operator
good for in linear logic?
**** Answer:
It is used to consume resources,
ie evaluate a lazy expression
in functional programming or
make a measurement in a
quantum system.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2019-09-04 Wed>
    :PROPERTIES:
    :ID:       0eb08fe5-6743-4e72-8a50-fe05c4ba46d0
    :DRILL_LAST_INTERVAL: 241.618
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:01]
    :END:
What is the meaning of
/A₁, A₂,…, Aₙ ⊦ B/ in 
linear logic?
**** Answer:
This means /B/ is a 
consequent of
/A₁⊗A₂⊗…⊗Aₙ/, ie.
/A₁⊗…⊗Aₙ ⊦ B/.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       f85d5687-848c-4475-bdc3-7367277727f2
    :DRILL_LAST_INTERVAL: 4.1986
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 17
    :DRILL_FAILURE_COUNT: 4
    :DRILL_AVERAGE_QUALITY: 2.766
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:36]
    :END:
What is the /linear constraint/
imposed by linear logic?
**** Answer:
The constraint that proofs 
can use neither /weakening/ nor
/contraction/.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2019-01-07 Mon>
    :PROPERTIES:
    :ID:       fa0ddc86-9cc4-4d00-8f59-827489d0a404
    :DRILL_LAST_INTERVAL: 122.3774
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-07 Fri 13:29]
    :END:
In which sense is the use of
the tensor symbol ⊗ for the
second conjunction in linear
logic appropriate?
**** Answer:
In a quantum sense because
/A⊗B/ seems to aptly describe
the behaviour of entangled
quantum systems. Measuring
/A⊗B/ allows no conclusions
regarding the respective states 
of the components /A,B/.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2019-02-27 Wed>
    :PROPERTIES:
    :ID:       329ca527-1a7e-44a2-bdf8-4cd413d047bb
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-24 Mon 18:56]
    :END:
Why is it impossible to
prove /A,B ⊦ A/ in linear logic?
**** Answer:
Since this means /A⊗B⊦A/, this 
would lead to /⊦A⊗B⊸A/ which is
known not to hold.
*** Linear Logic                                                      :drill:
    SCHEDULED: <2019-02-16 Sat>
    :PROPERTIES:
    :ID:       1c0e49f3-9259-454f-bc57-070b37fe7c99
    :DRILL_LAST_INTERVAL: 146.529
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-22 Sat 13:24]
    :END:
How is a proof of sequent
/A₁,…,Aₙ⊦A/ of linear logic 
translated to a combinator?
**** Answer:
As /φ:A₁⊗…⊗Aₙ→A/.
*** Logic                                                             :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       c9db5a0c-6a96-4fcb-88d1-75384c9b5f73
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:40]
    :END:
What is the difference
between a /Proposition/
/A/ and a judgement /⊢ A/?
**** Answer:
A proposition /A/ is an 
internal statement of a 
theory whereas the 
judgement /⊢ A/ is a 
meta-statement. For
example in first order
logic where the only
judgement is the possession
of a proof, /⊢ A/ means
"A has a proof".
*** Logic                                                             :drill:
    SCHEDULED: <2019-01-25 Fri>
    :PROPERTIES:
    :ID:       c1b224ec-841a-4b58-a5a6-5e8a204ffb4b
    :DRILL_LAST_INTERVAL: 23.7949
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:43]
    :END:
What is the difference 
between a /Proposition/
and a /Theorem/?
**** Answer:
/Propositions/ are statements
that can be assumed, proved,
disproved, negated etc whereas
/Theorems/ are /Propositions/
which have been proven.
*** Logic                                                             :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       cb6fc0af-77da-4e91-98ef-90d1aed3c686
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 17:59]
    :END:
What is Gödelization
all about?
**** Answer:
The construction of a
theorem that has no proof
and is not false by indexing
theorems and their proofs.
*** Logic                                                             :drill:
    SCHEDULED: <2019-01-12 Sat>
    :PROPERTIES:
    :ID:       93392f52-8d6d-4eed-a127-2b057e29f77d
    :DRILL_LAST_INTERVAL: 21.9075
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-21 Fri 11:17]
    :END:
Why the emphasis on
the fact that there 
are true theorems 
that can not be proved in
an undecidable theory?
**** Answer:
Because false Theorems can
never be proved in a 
consistent theory. Thus,
the defining feature of
undecidability is the 
existence of non-false
theorems that can't be
proved.
*** Logic                                                             :drill:
    SCHEDULED: <2019-02-28 Thu>
    :PROPERTIES:
    :ID:       dab9155b-c5f1-4313-95c0-8be841ff24f2
    :DRILL_LAST_INTERVAL: 142.4286
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-09 Tue 17:12]
    :END:
Why is /A ⊢ B/ not the same
as /⊢ A → B/?
**** Answer:
Because it means /B/ can be 
deduced from /A/ independently
of the logic used. The implication
arrow is tied to the logic used
and may not even be available in
a given logic. For example, in
linear logic /A ⊢ B/ means 
/⊢ A ⊸ B/, there is no /→/.
*** Logic                                                             :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       85181995-f4ac-4ded-9e96-27da446e58a8
    :DRILL_LAST_INTERVAL: 24.39
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-16 Sun 17:31]
    :END:
What is the redeeming
quality of Presburger
Arithmetic?
**** Answer:
It is decidable, even 
though the proofs may
be exponentially long.
*** Logic                                                             :drill:
    SCHEDULED: <2019-01-11 Fri>
    :PROPERTIES:
    :ID:       57be8bcf-64d7-4a76-9ec0-269249e590bc
    :DRILL_LAST_INTERVAL: 18.2207
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:15]
    :END:
What is a /combinator/?
**** Answer:
A name /φ:A→B/ for a proof of
sequent /A⊦B/.
*** System F                                                          :drill:
    SCHEDULED: <2019-05-01 Wed>
    :PROPERTIES:
    :ID:       fe468ff3-b8f5-44c2-8fdc-2fd0411d0980
    :DRILL_LAST_INTERVAL: 132.7206
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 15:00]
    :END:
What does something
like ~Λt.λx:t.x~ mean?
**** Answer:
The ~Λ~ is a type level
lambda, in this case a
function that takes a type
as argument and returns a
function ~t → t~, ie the
identity.
*** System F                                                          :drill:
    SCHEDULED: <2019-05-01 Wed>
    :PROPERTIES:
    :ID:       8fc7702f-6082-4871-9f3f-52905332fe7e
    :DRILL_LAST_INTERVAL: 132.7206
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 14:59]
    :END:
How to use an expression
like ~Λt.λx:t.x~?
**** Answer:
As, for example
~(Λt.λx:t.x) Int 5 =~
~(λx:Int.x) 5 = 5~,
ie with a type argument
and an argument of that
type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       27ee6471-e73d-45e1-8bc7-2dd01a959da2
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 13:56]
    :END:
Why is a dependent function
type for /A:𝒰/ and /B:A→𝒰/ 
written as a product
/∏(a:A),B(a)/?
**** Answer:
Because of its similarity
to a cartesian product where
the sequences consist of
function values indexed by
the corresponding arguments.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       a87dc826-c122-4c02-a398-323e88e4fbbd
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 13:57]
    :END:
Why is a dependent pair
type for /A:𝒰/ and
/B:A→𝒰/ written as a sum
/∑(x:A),B(x)/?
**** Answer:
Because of its similarity
with disjoiunt unions as
it consists of pairs
/(a,b)/ with /a:A/ and /b:B(a)/,
where /a/ can be interpreted
as an index and /b/ as value 
correponding to index /a/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       59c45430-c18b-44c9-8634-97330af6f80b
    :DRILL_LAST_INTERVAL: 9.517
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:01]
    :END:
What's the point of defining
the recursor
/rec(A×B,C) g (a,b):≡g a b/
for product type /A×B/?
**** Answer:
It allows to define every
function /f:A×B→C/ via currying
/f:≡rec(A×B,C) g/ with a
/g:A→B→C/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-11 Fri>
    :PROPERTIES:
    :ID:       fa29f301-2d77-4313-b38a-af89653769cc
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-02 Wed 12:49]
    :END:
How to express a property
of natural numbers type
theoretically?
**** Answer:
As a family of types
/P:ℕ→𝒰/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       628fe854-e0ef-4657-853c-b9dc7d05f346
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:35]
    :END:
What are the elimination
rules for the product
type /A×B/?
**** Answer:
Functions /f:A×B→C/
out of the product 
type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       747e5dee-673e-42e9-9ade-c4d02b68a49e
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:38]
    :END:
What are the computation
rules of the product type
/A×B/?
**** Answer:
That /f:A×B→C/
is judgementally equal
to a function application
of /g:A→B→C/ via
/f((a,b)):≡ g(a)(b)./
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       6063aab4-098a-460a-a2c5-b80171f99513
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:46]
    :END:
What are the introduction
rules for a product type
/A×B/?
**** Answer:
Elements of /A×B/ are constructed
from /a:A/ and /b:B/ as tuples
/(a,b):A×B/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       9aa3075b-6b04-44f9-903a-8b4eb95ee655
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:45]
    :END:
What are the constructor
of function types?
**** Answer:
Lambda expressions
/λx.Φ/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       f9817a42-8b33-4c24-aa80-181f63bacb1c
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:40]
    :END:
What is a /computation rule/
for a type?
**** Answer:
It expresses how an
eliminator acts on a
constructor.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       5c576202-e425-4fb2-a036-b4ef5349f747
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:42]
    :END:
What is the computation 
rule for a function type?
**** Answer:
That /(λx.Φ)(a)/ is judgementally
equal to substitution of /a/ for
/x/ in /Φ/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       e3971e4b-8952-4776-bc44-fe98cc2e9769
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:39]
    :END:
What is an /inductive/
type?
**** Answer:
An inductive type is
a type exhaustively
generated by its 
constructors, there are
no elements beyond those
constructed by the 
constructors.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       960e1e54-a7bf-4996-84b5-cbbb178a8e35
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:35]
    :END:
What is a computation
rule for a type?
**** Answer:
A rule that describes how 
an eliminator acts on a
constructor.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       f91ca1ea-7334-49ea-8ef4-36c2b9193db8
    :DRILL_LAST_INTERVAL: 9.517
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-30 Sun 15:45]
    :END:
What are /introduction/
rules for a type?
**** Answer:
These are the constructors
of a type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       27ccbe6d-3929-49de-9335-f64a8e5258af
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:43]
    :END:
What are the eliminators
of a type?
**** Answer:
These are rules on how to
use the elements of a type.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       46b0c6b6-592b-4201-aa85-ea4f6416a7fb
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:44]
    :END:
What are the eliminators of
the function type?
**** Answer:
The function type only has
one eliminator,
/function application/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       9c9c5c2f-9777-46c6-9066-5f1e7582f484
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:37]
    :END:
What is a dependent function
type?
**** Answer:
A type constructed from a type
/A:𝒰/ and a type family
/B:A→𝒰/ as /∏(x:A),B(x)/, interpreted
as functions whose return type
/B(x)/ depends on its argument 
type /x/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       7ff87fff-3fca-45ac-9c07-b4772c148665
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:34]
    :END:
How is the dependent function
type /∏(x:A),B(x):𝒰/ related to
ordinary function types?
**** Answer:
If /B(x)≡B/ is the constant
family then
/∏(x:A),B(x)≡(A→B)/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       4f522476-5489-4ecf-b30d-f450793a8ca4
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:45]
    :END:
How are predicates
constructed in type theory?
**** Answer:
A predicate over a type
/A/ is a type family
/P: A→𝒰/ assigning to every
/a:A/ a type /P(a)/ corresponding
to the proposition that /P/ holds
for /a/.

*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-10 Thu>
    :PROPERTIES:
    :ID:       ad6bf50d-6fd3-4d7a-a1c1-9f636cfd6d4b
    :DRILL_LAST_INTERVAL: 9.756
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:44]
    :END:
Why can the *0* type not
be populated in a
consistent type theory?
**** Answer:
Because its negation
¬ *0*: *0* → *0* is inhabited
by the identity function.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-21 Mon>
    :PROPERTIES:
    :ID:       e9f9f77c-cebd-4e3b-8f87-014f40f426b7
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:42]
    :END:
In which sense differs
type theory from first
order logic as deductive 
system?
**** Answer:
In contrast to first
order logic, type theory
has two judgements
 - /a:A/ "a is an objec of type A"
 - /a≡b:A/ "a and b are definitionally
          equal objects of type A"
as compared to the one of
first order logic
/⊢ A/ "A has a proof".
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       492e384d-9355-491d-812c-b50a75dac1ea
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:43]
    :END:
What is /judgemental/
equality?
**** Answer:
This is about equality
of terms of the same
type by definition.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       261b5fdc-ba59-462a-80b7-229f04edcd49
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:42]
    :END:
How is (internal) equality 
handled with types?
**** Answer:
For terms /a,b:A/ a type
/a=b/ exists. If there is
a term /t:a=b/ then terms
/a,b/ are said to be 
/propositionally/ equal.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       f3a4772d-0985-45b2-a83b-cf090019441b
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:39]
    :END:
What is a /witness/?
**** Answer:
A term /a/ of type /A/
is called a witness
of type /A/ because
/a:A/ has meanings
"a has type A" and
"A has a proof", 
which is witnessed 
by term /a/.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       62377aa7-2e68-4d86-8796-4d41f0f507c0
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:43]
    :END:
In which sense is the
interpretation of /a:A/
as /a∈A/ misleading?
**** Answer:
In the sense that
/a:A/ is the judgement
"A has a proof"
whereas /a∈A/ is a
proposition.
*** Type Theory                                                       :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       a63bdac4-a23a-4586-a90b-b436485f1b77
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:44]
    :END:
In which sense is type
theory simpler than 
set theory?
**** Answer:
Set theory is not only
about sets but about the
interplay of sets and
propositions of first-order
logic. Type theory only has
/types/ and Propositions are
identified with particular 
types.
** Probability
*** Processes                                                         :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       6d3c54b4-eb0c-4b06-8f0f-ff0add0f1c58
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 13:00]
    :END:
What are the functions of
~μ, ν~ in a Hawkes process
with conditional intensity
~λ(t)=μ(t)+∫ᵗν(t-s)dNₛ~?
**** Answer:
~μ(t)~ represents the 
expected, predictable, or 
deterministic part of the 
intensity, ~ν(t)~ expresses the
influence of past events
~Tᵢ~ on the current value
of the intensity process ~λ(t)~.
*** Processes                                                         :drill:
    SCHEDULED: <2019-01-11 Fri>
    :PROPERTIES:
    :ID:       0801d690-1eea-4409-a568-27a10f11dbf9
    :DRILL_LAST_INTERVAL: 33.3973
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.889
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-09 Sun 14:36]
    :END:
What is a Hawkes process?
**** Answer:
A stationary point process
~Nₜ~ with conditional intensity
expressable as
~λ(t)=μ(t)+∫ᵗν(t-s)dNₛ~
with ~ν:ℝ⁺→ℝ⁺~.
*** Processes                                                         :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       908b6ef8-55b8-430c-8fcd-17e59d4c5bf4
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 12:56]
    :END:
What is the /intensity/ of
a point-process?
**** Answer:
This is a property of
stationary point processes,
on ~ℝᵈ~ where the mean 
measure is given by
~Eξ(.)=λ∥.∥~, with ~∥.∥~ 
indicating Lebesgue measure
on ~ℝᵈ~. The factor ~λ~ is called
the intensity of the point
process.
*** Processes                                                         :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       7770e41f-2ba1-41de-9484-992ed962726c
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 12:55]
    :END:
What is the σ-Algebra on
the set of counting measures
~N~ used in the definition of
point-processes?
**** Answer:
It is the smallest σ-Algebra
on ~N~ for which all
~f_B:N→ℤ₊~, ~ς ↦ ς(B)~ with
~B~ a Borel set of the under-
lying space become measurable.
*** Processes                                                         :drill:
    SCHEDULED: <2019-02-23 Sat>
    :PROPERTIES:
    :ID:       d85e0e70-e2b5-4949-a398-bd2124cebe16
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 12:53]
    :END:
What is a point process?
**** Answer:
A /random element/ with values
that are locally finite
counting measures on a
separable, second countable
Hausdorff space with its
usual ~σ~ algebra.
*** Nonlocal Fields                                                   :drill:
    SCHEDULED: <2019-03-18 Mon>
    :PROPERTIES:
    :ID:       96e3df09-a54e-4d90-b463-830e7bc2bcd4
    :DRILL_LAST_INTERVAL: 92.9635
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:24]
    :END:
What is a non-local field?
**** Answer:
A field /φ(p)+ρ∫φ(p+π)dπ/
where the value at
point /p/ doesn't depend
only on the value at /p/
but also on values at
other points /p+π/.
*** Nonlocal Fields                                                   :drill:
    SCHEDULED: <2019-04-15 Mon>
    :PROPERTIES:
    :ID:       b7fa847e-c76a-4b6e-9450-e455fa646d3c
    :DRILL_LAST_INTERVAL: 110.3969
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:54]
    :END:
How are non-locality
and boundary conditions
related?
**** Answer:
Boundaries may induce 
non-locality, for example
if a gas is constrained by
a boundary causing reflection
of particles back into
the gas. This creates a
dependency on previous events
and causes a nonlocality in
time.
*** Random Fields                                                     :drill:
    SCHEDULED: <2019-02-25 Mon>
    :PROPERTIES:
    :ID:       b7d9a6a9-b043-47a3-b80d-0c7ec17db8fa
    :DRILL_LAST_INTERVAL: 80.6617
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 12:51]
    :END:
 What is a /random element/?
**** Answer:
A generalization of a random
variable to a function
~X:Ω → E~ where ~(E,ε)~ is a
measurable space such that
~X⁻¹(B)~ has a probability
for every ~B∈ε~. Thus, it is
essentially a random variable
with values in ~E~ and not just
in ~ℝ~.
** R&D
*** Matrices                                                          :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       140ece23-d2f9-4624-8651-63cdbb7d4629
    :DRILL_LAST_INTERVAL: 48.8593
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:48]
    :END:
Is it possible to interpret
matrix elements /aᵢⱼ/ as 
costs to travel from node
/j/ to /i/?
**** Answer:
Not with the usual matrix
multiplication. The problem
is that the cost of two step
travel from node /i/ to /j/ is
/minₖ{aᵢₖ+aₖⱼ}/ rather than
regular matrix multiplication.
This works only if multiplication
is defined as /a⊗b=a+b/ and 
summation as /a⊕b=min{a,b}/.
*** Matrices                                                          :drill:
    SCHEDULED: <2019-02-20 Wed>
    :PROPERTIES:
    :ID:       2f6c2036-aca0-49db-9e7b-cc9a10ed5d35
    :DRILL_LAST_INTERVAL: 50.0774
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:45]
    :END:
What is the most natural
interpretation of matrix
elements /aᵢⱼ/ in the sense
of connectivity between
nodes /i/ and /j/?
**** Answer:
The matrix element /aᵢⱼ/
designates some kind of
flow-through capacity
from node /j/ to node /i/.
This is also in keeping
with the usual matrix
multiplication, which
would model the flow of
quantities /xₖ/ through
a graph.
*** Matrices                                                          :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       83e90127-e424-468d-8820-f6609ff96765
    :DRILL_LAST_INTERVAL: 44.4678
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 17:03]
    :END:
How to define a
relation /R(M)/ for 
a binary matrix that
is compatible with
permutation matrices?
**** Answer:
Define /R(M)={(i,j)|xⱼᵢ=1}/ 
which is interpretable as
preimage relation because
for a permutation matrix
/xⱼᵢ=1/ means that /xᵢ↦xⱼ/.
*** Matrices                                                          :drill:
    SCHEDULED: <2019-01-27 Sun>
    :PROPERTIES:
    :ID:       2fd846d2-e2c2-4341-99d2-4d839550708f
    :DRILL_LAST_INTERVAL: 43.2308
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:27]
    :END:
If permutation matrices
permute the indices of
vectors, how do more general
0-1 matrices act on indices?
**** Answer:
There would be a superposition
of indices which could collapse
to a certain index. On the 
other hand, the superposition
could relate to the pre-images
of an index. So if /xₙ↦xᵢ+xⱼ/ this
would mean that /i/ and /j/ are 
preimages of /n/.
Also compare to the interpretation
of 0-1 matrices as paths connecting
nodes.
*** Tensors                                                           :drill:
    SCHEDULED: <2019-01-11 Fri>
    :PROPERTIES:
    :ID:       bbb37512-6d33-44d1-a020-e72bc54d0859
    :DRILL_LAST_INTERVAL: 22.6409
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 14:54]
    :END:
How to use tensors
as algebraic types?
**** Answer:
Represent record types
as rows and union types
as columns. This allows
to represent finite
algebraic datatypes in
tensor notation.
* Music
** Scales
*** Blues                                                             :drill:
    SCHEDULED: <2019-04-28 Sun>
    :PROPERTIES:
    :ID:       316219ce-42ec-42cf-b89d-6bbcac0c4344
    :DRILL_LAST_INTERVAL: 139.4713
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-10 Mon 15:50]
    :END:
What is the full name
for the blues scale with
intervall structure
3 2 1 1 3 2?
**** Answer:
This properly called
Blues Hexatonic.
*** Modes                                                             :drill:
    SCHEDULED: <2019-04-13 Sat>
    :PROPERTIES:
    :ID:       f1f41514-cd8a-4ce8-bef4-610821c9afbe
    :DRILL_LAST_INTERVAL: 124.321
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-10 Mon 15:50]
    :END:
What does a major mode
make sound major as opposed
to minor?
**** Answer:
The major 3rd distance
between the 1st and 3rd
notes of the scale. The
minors only have a minor
3rd in this place.
*** Pentatonic                                                        :drill:
    SCHEDULED: <2019-03-17 Sun>
    :PROPERTIES:
    :ID:       05bb0e28-ac0d-440f-879d-fca38ed44284
    :DRILL_LAST_INTERVAL: 104.688
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-02 Sun 15:41]
    :END:
What is the distinctive
harmonic feature when
constructing pentatonic
scales from regular ones?
**** Answer:
The removal of semi-tones.
This way, every note can be
played without resolution
to a chord-tone.
*** Pentatonic                                                        :drill:
    SCHEDULED: <2019-01-11 Fri>
    :PROPERTIES:
    :ID:       a5536e65-6659-42a2-90db-0cebe770f9e2
    :DRILL_LAST_INTERVAL: 24.9038
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:49]
    :END:
What is the interval structure
of a pentatonic major scale?
**** Answer:
It is 2 2 3 2 3 in terms of
semi-tones.
*** Pentatonic                                                        :drill:
    SCHEDULED: <2019-03-17 Sun>
    :PROPERTIES:
    :ID:       c65b92dc-a49c-4195-a6cc-5416c1096202
    :DRILL_LAST_INTERVAL: 104.688
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-02 Sun 15:43]
    :END:
What is the relationship
of pentatonic modes 3 and 4
to blues?
**** Answer:
They are also called blues minor
and blues major, respectively,
even though the regular blues
hexatonic scale is based on mode 5
or pentatonic minor.
*** Pentatonic                                                        :drill:
    SCHEDULED: <2019-02-05 Tue>
    :PROPERTIES:
    :ID:       1caf2020-a791-49a4-8552-95c084773af1
    :DRILL_LAST_INTERVAL: 78.0832
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-19 Mon 16:50]
    :END:
How is the blues hexatonic
scale related to pentatonic
modes?
**** Answer:
The fifth mode of pentatonic
major, also called pentatonic
minor, with interval structure
3 2 2 3 2, forms the
pentatonic basis for blues
hexatonic obtained by adding
a semitone to get
3 2 1 1 3 2.
*** Pentatonic                                                        :drill:
    SCHEDULED: <2019-05-18 Sat>
    :PROPERTIES:
    :ID:       676300a7-4e5a-4129-b813-0fc4e465bc91
    :DRILL_LAST_INTERVAL: 152.4375
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:48]
    :END:
How is the pentatonic
major scale related to
its minor?
**** Answer:
The same way a regular
major is related to its
minor, ie the A-minor
pentatonic is the minor
mode of C major pentatonic.
*** Pentatonic                                                        :drill:
    SCHEDULED: <2019-03-17 Sun>
    :PROPERTIES:
    :ID:       b5ae545b-a571-4530-87dc-b66d6260aaaf
    :DRILL_LAST_INTERVAL: 104.688
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-02 Sun 15:43]
    :END:
How is a major pentatonic
scale related to a regular
major scale?
**** Answer:
A major pentatonic scale
is a major scale without
a fourth and a seventh.
* Physics
** Emergence
*** Emergent Phenomena                                                :drill:
    SCHEDULED: <2019-04-11 Thu>
    :PROPERTIES:
    :ID:       1618c008-22b8-47a6-9ffd-89e253caf008
    :DRILL_LAST_INTERVAL: 95.6486
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:02]
    :END:
What is the reason for
an emergent phenomenon?
**** Answer:
Interaction between the
parts of an agglomeration.
*** Emergent Phenomena                                                :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       2e9c532d-f26f-4f4e-901a-bd21c9e52bd0
    :DRILL_LAST_INTERVAL: 50.9681
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-26 Mon 12:02]
    :END:
What is the connection
of emergent phenomena with
phase transitions?
**** Answer:
An emergent phenomenon
depends an a particular
configuration of the subunits
of an agglomeration. Phase
transitions are transitions
between configurations causing
an emergent property.
*** Emergent Phenomena                                                :drill:
    SCHEDULED: <2019-04-08 Mon>
    :PROPERTIES:
    :ID:       70e08799-5d8c-448a-a28e-d699bb8c909d
    :DRILL_LAST_INTERVAL: 93.3082
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:02]
    :END:
What is an emergent
phenomenon?
**** Answer:
A property of an 
agglomeration of
units that is a
consequence of the 
agglomeration rather
than inherent in the
subunits.
** Mechanics
*** Hamiltonians                                                       :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       38c34d09-4752-4d4f-9fe0-eb49003bbec9
    :DRILL_LAST_INTERVAL: 20.386
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:24]
    :END:
What is the geometrical
intuition behind the 
Hamiltonian in classical
mechanics?
**** Answer:
Since /H:ℝ²ⁿ → ℝ/, it
describes a mountain
on /ℝ²ⁿ/ and the possible
paths allowed by /H/ in
/ℝ²ⁿ/ are the projections
of the contour lines of 
that mountain onto /ℝ²ⁿ/.
*** Hamiltonians                                                       :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       481bf25f-b056-4419-955a-040201db3205
    :DRILL_LAST_INTERVAL: 19.8902
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:23]
    :END:
What is the general 
procedure to work with
Hamiltonian mechanics?
**** Answer:
Parametrize positions
/x₁(θ₁,…,θₖ),…,xₙ(θ₁,…,θₖ)/
by some /generalized/ position
coordinates /θ₁,…,θₖ/ suitable
for the problem at hand. Find
a suitable Hamiltonian /H/ for
the system and calculate the 
conjugate momenta /τ₁,…,τₖ/ and
the Hamiltonian in the /θᵢ, τᵢ/
will yield the paths as contour-
lines of the Hamiltonian.
*** Hamiltonians                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       238795d9-aa1c-4a39-a95d-5cbcbafc6dbc
    :DRILL_LAST_INTERVAL: 19.8902
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:25]
    :END:
What is the conjugate momentum
to the angle /θ/ in polar coordinates?
**** Answer:
Angular momentum /L=mr²θ̇̇/.
*** Hamiltonians                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       ed7bbe54-7ba4-4a2d-b374-ed65a1ecb837
    :DRILL_LAST_INTERVAL: 19.8902
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:20]
    :END:
How do the equations
/ṗ=-∂ᵣH(p,r), q̇=∂ₚH(p,r)/
for the contours for a
2-dimensional Hamiltonian
follow from the mountain
picture?
**** Answer:
The gradient of /H/ is
/∇H=(∂ₚH(p,r),∂ᵣH(p,r))/
which is the direction
of steepest descent. Contour
lines are perpendicular to
that, so /(-∂ᵣH(p,r),∂ₚH(p,r)/)
must coincide with the tangent
vectors (ṗ,q̇).
*** Hamiltonians                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       ea961c15-a770-431c-9584-8385252e3c84
    :DRILL_LAST_INTERVAL: 19.8902
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:26]
    :END:
What is the difficulty
in using Hamiltonians?
**** Answer: 
Finding the Hamiltonian
and the proper conjugate
momenta. If the system
has a Langrangian then
the Hamiltonian is its 
Poisson bracket.
*** Hamiltonians                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       011d475c-c184-494e-83df-f46f52adedba
    :DRILL_LAST_INTERVAL: 19.8902
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:23]
    :END:
Can the Hamiltonian
of a system always be
interpreted as total
(mechanical) energy?
**** Answer:
Only if the system has
a Lagrangian and its
Hamiltonian is the 
Poisson bracket of it.
** R&D
*** Hamiltonians                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       d64fd1af-487f-42d2-9aff-9595d83f84c1
    :DRILL_LAST_INTERVAL: 19.8902
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:25]
    :END:
In which sense can the
contours of a Hamiltonian
be considered eigenstates?
**** Answer:
On the contours, the value
of the Hamiltonian stays
constant. So if the Hamiltonian 
operator were operating
on paths to measure a value,
the contours would be eigenstates.
** Relativity
*** Lorentz                                                           :drill:
    SCHEDULED: <2019-05-15 Wed>
    :PROPERTIES:
    :ID:       60b0d0e0-2f42-4e27-aa94-3b82de76b8a5
    :DRILL_LAST_INTERVAL: 146.599
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 15:02]
    :END:
Why are events with 
/Δs²>0/ called /space-like/?
**** Answer:
Because this means that the
spatial separation exceeds the
distance light travels, thus
different space-like events must
occur at different places for
all observers, ie they are 
separated by space.
*** Lorentz                                                           :drill:
    SCHEDULED: <2019-02-20 Wed>
    :PROPERTIES:
    :ID:       9142e183-36b3-4630-95c7-a54e5025200f
    :DRILL_LAST_INTERVAL: 117.7631
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-25 Thu 12:39]
    :END:
Why are events with
/Δs²<0/ called time-like?
**** Answer:
Because the spatial separation
is less than the light travels.
As a consequence, different
time-like events cannot occur
at the same time, ie they are
separated by time.
** Quantum
*** Algebra                                                           :drill:
    SCHEDULED: <2019-01-10 Thu>
    :PROPERTIES:
    :ID:       e04a996c-5549-4c70-a1ae-2ec8e7f8f788
    :DRILL_LAST_INTERVAL: 9.7296
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 2.909
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:42]
    :END:
How to handle particles
in a relativistic context?
**** Answer:
Every relativistic observer
has a different view of the
evolution of a particle, so
each observer has its own 
Hamiltonian. If these 
Hamiltonians have some 
algebraic structure, their
irreducible representations
would qualify as particle 
representations. Especially
if they turn out to be the
same as those of the Lorentz
group.
*** Algebra                                                           :drill:
    SCHEDULED: <2019-05-03 Fri>
    :PROPERTIES:
    :ID:       bec4a332-838d-4eec-a133-6be7200e5593
    :DRILL_LAST_INTERVAL: 139.0533
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:29]
    :END:
Could particles be defined as
eigenstates of some space-time
operator instead of a Hamiltonian?
**** Answer:
Possibly, by summarizing the
different Hamiltonians of 
different relativistic observers,
look at the irreducible representations
obtained from their structure and 
then constructing on operator from
that, such as the Casimir operator, 
possibly also employing the relevant
Lorentz group.
*** Algebra                                                           :drill:
    SCHEDULED: <2019-01-22 Tue>
    :PROPERTIES:
    :ID:       5401b059-307d-4458-9d13-4e1800b3bfad
    :DRILL_LAST_INTERVAL: 101.3126
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:24]
    :END:
What is the relationship
of the Heisenberg group to
quantum physics?
**** Answer:
The Heisenberg group is a
group of upper-triangular
matrices whose Lie-algebra
has the same commutation
relations as the position-
momentum operators in 
quantum physics.
*** Fields                                                            :drill:
    SCHEDULED: <2019-03-08 Fri>
    :PROPERTIES:
    :ID:       a9ff65aa-867b-43f4-b973-c05db3067c9c
    :DRILL_LAST_INTERVAL: 133.073
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-26 Fri 15:52]
    :END:
Why are the parity and
time reversal operators
of interest in quantum
fields?
**** Answer:
Because they are members
of the Lorentz group and
generate a discrete subgroup
of the full Lorentz group
isomorphic to the Klein
four-group.
*** Fields                                                            :drill:
    SCHEDULED: <2019-06-14 Fri>
    :PROPERTIES:
    :ID:       4e7f4388-7dde-408d-8359-9802db92d21e
    :DRILL_LAST_INTERVAL: 179.3094
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-17 Mon 12:49]
    :END:
Why are the field particles of
quantum fields arising from
classical fields bosons?
**** Answer:
Because these fields have a notion
of /field strength/ which requires
that arbitrary many field particles
can be in the same state. 
*** Fields                                                            :drill:
    SCHEDULED: <2019-02-21 Thu>
    :PROPERTIES:
    :ID:       c65bb428-6bf6-4c41-93a5-d5a57389be52
    :DRILL_LAST_INTERVAL: 151.875
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-22 Sat 13:20]
    :END:
Why is an electron gas not related
to a classical field?
**** Answer:
Because the field particles are 
electrons, which are fermions. Thus,
there is no classical field strength
associated with an electron gas.
*** Fields                                                            :drill:
    SCHEDULED: <2019-08-14 Wed>
    :PROPERTIES:
    :ID:       218177bd-75a8-404d-a805-df581fa5da4c
    :DRILL_LAST_INTERVAL: 229.9399
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.9
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:05]
    :END:
Why is consciousness probably
related to a field of Fermions?
**** Answer:
Because quantum computations occur in
fields composed of Fermions or in 
fields with Parastatistics when 
using /qudits/.
*** Fields                                                            :drill:
    SCHEDULED: <2019-03-05 Tue>
    :PROPERTIES:
    :ID:       8b5816c6-cc54-443a-8a17-eb4ad722daa8
    :DRILL_LAST_INTERVAL: 133.53
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-22 Mon 15:05]
    :END:
How does a (proper) Lorentz 
transformation /Λ/
affect field operators /Φ(x)/?
**** Answer:
/Φ(x) → U(Λ)Φ(x)U(Λ⁻¹)/ where 
/U(Λ)/ is the unitary operator
representing /Λ/ on the 
Hilbert space on which /Φ(x)/ 
is defined.
*** Fields                                                            :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       c1e79410-385d-4a39-bd21-f2409a5f31cb
    :DRILL_LAST_INTERVAL: 100.9356
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-04 Thu 14:37]
    :END:
Why do PDE's like the
Gordon-Klein equation
have to be quantized?
**** Answer:
Because their immediate
interpretation as purveyors
of wavefunctions are un-
physical due to negative 
energy solutions. Their 
quantized versions take 
care of that by introducing
antiparticles.
*** Fields                                                            :drill:
    SCHEDULED: <2019-02-14 Thu>
    :PROPERTIES:
    :ID:       b265bc89-65e8-47cc-a4b8-40180ebbed36
    :DRILL_LAST_INTERVAL: 127.9373
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-09 Tue 17:13]
    :END:
Why are negative energy solutions
not a problem in the quantized
versions of the Dirac equation?
**** Answer:
Because negative energy states
can not be reached from positive
energy states via creation or
annihilation operators as no 
particle states can be created 
from the null-vector.
*** Fields                                                            :drill:
    SCHEDULED: <2019-04-02 Tue>
    :PROPERTIES:
    :ID:       228e937f-bf69-4b0c-b614-294f563d1f25
    :DRILL_LAST_INTERVAL: 151.875
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-01 Thu 13:07]
    :END:
In which sense are fermion
fields less uncertain than
boson fields?
**** Answer:
There is less uncertainty
in the particle number
because in fermion fields
states /|n⟩/, /n∈{0,1}/ rather
than /n∈ℕ/. Thus, coherent
states are superpositions
of only /|0⟩, |1⟩/ rather
than superpositions of an
infinite number of particle
states /|n⟩, n∈ℕ/.
*** Fields                                                            :drill:
    SCHEDULED: <2019-02-07 Thu>
    :PROPERTIES:
    :ID:       75275769-f6c1-418c-a88d-11fbdc18bf9e
    :DRILL_LAST_INTERVAL: 34.3297
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.917
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:42]
    :END:
What does the coherent state
/|α⟩/ look like?
**** Answer:
/|α⟩=exp(-|α|²/2)exp(αa⁺)|0⟩/ where
/a⁺/ is a creation operator.
*** Fields                                                            :drill:
    SCHEDULED: <2019-03-08 Fri>
    :PROPERTIES:
    :ID:       ea7e9015-840f-467a-b380-cbeb470b93c9
    :DRILL_LAST_INTERVAL: 62.9871
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.091
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:40]
    :END:
What does the parameter /α/ in
coherent state /|α⟩/ describe?
**** Answer:
It is closely related to the
average particle number /⟨n⟩/
via /⟨n⟩=⟨a⁺a⟩=|α|²/. Note that
/α/ is a complex number in general.
*** Fields                                                            :drill:
    SCHEDULED: <2019-05-03 Fri>
    :PROPERTIES:
    :ID:       08003345-1979-4c1d-b18e-3814c045eec0
    :DRILL_LAST_INTERVAL: 139.0533
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:32]
    :END:
How many particles are there in a
coherent state /|α⟩, α∈ℂ/?
**** Answer:
The particle number is undetermined
with /|⟨n|α⟩|²/ following a Poisson
distribution with parameter /|α|²/, ie
the probability to measure /n/ particles
is exp(-|α|²)(|α|²)ⁿ/n!.
*** Fields                                                            :drill:
    SCHEDULED: <2019-03-05 Tue>
    :PROPERTIES:
    :ID:       ec3c4a08-bc01-4d7e-9571-a3cb41ee717d
    :DRILL_LAST_INTERVAL: 133.53
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-22 Mon 15:04]
    :END:
How does a proper Lorentz
transformation /Λ/ affect
field operator components
/Φᵐ(x)/ of a multi-component
field operator?
**** Answer:
Componentwise as
/Φᵐ(x)→U(Λ)Φᵐ(x)U(Λ⁻¹)/
which can be written
/D(Λ⁻¹)ᵐₙΦⁿ(Λx)/ using
sum convention and Dirac
matrices /D/.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-01-23 Wed>
    :PROPERTIES:
    :ID:       61fa2d3d-1af9-4cd9-a9c1-2f957ed3599b
    :DRILL_LAST_INTERVAL: 155.4831
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-08-21 Tue 11:01]
    :END:
How are vectors of a Hilbert space
connected to physical reality?
**** Answer:
Via measuring devices, for example Geiger 
counters with certain readings are assigned a 
normalized vector in the Hilbert space.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       e48fb236-bfc7-4494-8515-ad43e06fda1f
    :DRILL_LAST_INTERVAL: 148.8475
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.221
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-23 Sun 12:25]
    :END:
What is measured with 
/w=|⟨φ₁|φ₂⟩|²/?
**** Answer:
The probability to observe state /φ₁/ when 
the system is known to be in state /φ₂/.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-01-26 Sat>
    :PROPERTIES:
    :ID:       1bf83dce-80be-4ae5-83d7-2e3d86cfaa2b
    :DRILL_LAST_INTERVAL: 25.3205
    :DRILL_REPEATS_SINCE_FAIL: 14
    :DRILL_TOTAL_REPEATS: 24
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:51]
    :END:
What are /one-particle/ states?
**** Answer:
These are states whose corresponding effects
in physical reality are localized. That means
that coincidence measurements with 2 measuring
devices separated by a distance /d>dₘᵢₙ/
and resolving time /δt ≪ d/c/ are negative
for all /d/ and all observables measured.
Is this the essence of countability?
*** Hilbert space						      :drill:
    SCHEDULED: <2019-05-21 Tue>
    :PROPERTIES:
    :ID:       d6c1074a-27ba-46ca-a959-96a0791aa4a3
    :DRILL_LAST_INTERVAL: 241.7985
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.04
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-21 Fri 16:02]
    :END:
What are relativistically invariant
subspaces of a Hilbert space?
**** Answer:
Subspaces that are invariant under the 
representation of the Lorentz group on the 
Hilbert space.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-02-02 Sat>
    :PROPERTIES:
    :ID:       fba25cb9-6fc1-40bb-a9ef-12d581e5e229
    :DRILL_LAST_INTERVAL: 73.9469
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-20 Tue 09:50]
    :END:
How is a representation of the Lorentz
group induced on a Hilbert space?
**** Answer:
By transforming states in the Hilbert
space corresponding to observations
in one Lorentz frame to states correponding
to observations in another Lorentz frame.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-02-22 Fri>
    :PROPERTIES:
    :ID:       87776680-f933-40e7-8a92-ef8a77311e57
    :DRILL_LAST_INTERVAL: 104.4456
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.077
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-10 Sat 12:01]
    :END:
What is a particle?
**** Answer:
A subspace of the one-particle states
which is invariant under the representation
of the Lorentz-group on the space and 
minimal, ie the space of an irreducible
representation of the Lorentz-group.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-01-31 Thu>
    :PROPERTIES:
    :ID:       0992cf10-9d6b-420b-98fd-4e3215682379
    :DRILL_LAST_INTERVAL: 36.5038
    :DRILL_REPEATS_SINCE_FAIL: 13
    :DRILL_TOTAL_REPEATS: 23
    :DRILL_FAILURE_COUNT: 4
    :DRILL_AVERAGE_QUALITY: 3.088
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:31]
    :END:
How can particles be classified?
**** Answer:
Since they relate to the irreducible representations
of the proper Lorentz group on the Hilbert
space, they can be classified by two parameters
/m/ and /s/ commonly related to mass and spin. 
However, representations related to imaginary 
masses and continuous spin are discarded as
unphysical.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-06-02 Sun>
    :PROPERTIES:
    :ID:       10c6d4f6-b14e-4570-87a6-89addb1a4dfb
    :DRILL_LAST_INTERVAL: 174.6581
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.308
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-09 Sun 14:32]
    :END:
What is the problem with zero-mass particles?
**** Answer:
The theory allows for continuous spin, ie 
there are irreducible representations of the 
Lorentz group for /m=0/ and /s/ continuous.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-04-15 Mon>
    :PROPERTIES:
    :ID:       4a8c4bfb-6660-4bf3-a0aa-1926584b34a9
    :DRILL_LAST_INTERVAL: 165.5808
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 1.86
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:12]
    :END:
Why is it possible to describe particles by 
wave equations ?
**** Answer:
Because the irreducible representations of the 
(proper) Lorentz group on the Hilbert space 
corresponding to /m>0/ can have only spins of 
integer and half-integer values. Thus, for 
positive mass the representations can be 
described in terms of wave-equations.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-06-05 Wed>
    :PROPERTIES:
    :ID:       a248fe7a-8ead-465c-9c2a-10b778d3e827
    :DRILL_LAST_INTERVAL: 229.4947
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-19 Fri 12:26]
    :END:
What are the prototypical creation and 
annihilation operators?
**** Answer:
The multiplication operator and 
differentiation. For Hilbert spaces with 
finitely many particles, every representation 
is unitarily equivalent.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-03-30 Sat>
    :PROPERTIES:
    :ID:       2dd0492c-381b-45d2-b787-11660b52c69f
    :DRILL_LAST_INTERVAL: 179.617
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.9
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-01 Mon 22:44]
    :END:
What are the ingredients of a quantum field 
theory?
**** Answer:
A Hilbert space with designated one-particle
vectors from which the n-particle vectors are 
obtained by tensoring. A Lorentz representation 
defining particles. In addition, there are 
creation and annihilation operators describing
the creation and annihilation of the particles 
in certain states.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-09-17 Tue>
    :PROPERTIES:
    :ID:       0bbfc22d-d26d-46a8-9f97-35161fefa05c
    :DRILL_LAST_INTERVAL: 266.0279
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:33]
    :END:
Why are the creation and annihilation operators
fundamental in a quantum field theory?
**** Answer:
Because they form a complete set of operators
in the sense that every (hermitian?) operator
on the Hilbert space can be approximated by
a polynomial in these operators.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-10-05 Sat>
    :PROPERTIES:
    :ID:       6e7c45d3-1279-4e7a-bee4-431ccb72b5ac
    :DRILL_LAST_INTERVAL: 273.3749
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.286
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:03]
    :END:
What distinguishes one quantum field theory
from another on a given Hilbert space?
**** Answer:
The Hamiltonian, which is a hermitian 
operator describing the energy of the
field.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-03-13 Wed>
    :PROPERTIES:
    :ID:       7a2336fa-924a-4c00-8f53-47ef7ba49f22
    :DRILL_LAST_INTERVAL: 161.7454
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-02 Tue 16:25]
    :END:
Why is the description of a quantum field
theory in terms of creation and annihilation
operators on a Hilbert space the natural 
thing to do?
**** Answer:
Because of its relationship with measurements
which consist of counting particles, be it
with Geiger counters or in particle accelerators.
The composition /vₖ=uₖ⁺uₖ/ of a creation
with an annihilation operator results in a counting
operator which counts the number of particles of
a given type in a given state.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       b088e6b3-916c-443b-837a-23db646df091
    :DRILL_LAST_INTERVAL: 6.1112
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 16
    :DRILL_FAILURE_COUNT: 3
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-03 Thu 14:18]
    :END:
What is the problem with allowing infinitely
many particles in a field theory?
**** Answer:
The Hilbert space required becomes too big, as a
result there will be unitarily inequivalent 
representations of the creation and annihilation
operators on the space. As a consequence, 
counting particles with the density operator
will give different results in different
representations.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-02-17 Sun>
    :PROPERTIES:
    :ID:       e72964a8-7a57-4802-8c43-b6c739b20b33
    :DRILL_LAST_INTERVAL: 46.9477
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.273
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:54]
    :END:
How does the unitary inequivalence of different
representations on an infinite-particle Hilbert
space manifest itself mathematically?
**** Answer:
When trying to calculate a unitary operator 
connecting the representations, infinities will
occur.
*** Hilbert space						      :drill:
    SCHEDULED: <2019-01-25 Fri>
    :PROPERTIES:
    :ID:       62cd80e6-0ecd-482d-a31d-73328f96de7f
    :DRILL_LAST_INTERVAL: 147.048
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.779
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-08-31 Fri 12:33]
    :END:

What is he S-matrix?
**** Answer:
The matrix that transforms the basis constructed
from one-particle states at time /t=-∞/ to 
that constructed at /t=∞/.
*** Measurement                                                       :drill:
    SCHEDULED: <2019-05-29 Wed>
    :PROPERTIES:
    :ID:       a41161ff-6859-4ae0-8e14-8691bfd55b31
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:15]
    :END:
In which sense is
measurement a special
case of a more general
phenomenon?
**** Answer:
Measurement involves
a perceiving agent. 
It is a special case
of /Interaction/ which
doesn't imply perception.
*** Measurement                                                       :drill:
    SCHEDULED: <2019-01-09 Wed>
    :PROPERTIES:
    :ID:       fa8b6c14-e9bd-425f-ab15-987940ee233f
    :DRILL_LAST_INTERVAL: 106.8202
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-24 Mon 18:55]
    :END:
In which sense is parallel
displacement like quantum
decoherence?
**** Answer:
In a sense that a vector is
lifted out of its tangent
space and then moved through
an ambient space introducing
ambiguity, before being
projected back into another
tangent space resulting in
a collapse of the ambiguity.
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-04 Mon>
    :PROPERTIES:
    :ID:       1acce815-680e-4b4e-807c-ce4f4b58e990
    :DRILL_LAST_INTERVAL: 137.415
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-18 Thu 14:26]
    :END:
How can a two component wave
function /ψ=(α,β)ᵀ/ be interpreted
in terms of probabilities?
**** Answer:
This is interpreted as the wave
function of a spin-½ particle whose
component /α/ is the probability amplitude
for the particle in the spin-up state
whereas component /β/ is the probability
amplitude for the particle in the 
spin-down state.
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-04 Mon>
    :PROPERTIES:
    :ID:       bc2eb65b-ff53-4438-8207-895836040909
    :DRILL_LAST_INTERVAL: 137.415
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-18 Thu 14:27]
    :END:
What is the meaning of the four 
components in the Dirac spinors?
**** Answer:
The spinors /ψ=(u,v)ᵀ/ really describe
particle-antiparticle pairs. Since these
are spin-½ particles, each of them has
two components representing spin-up 
and spin-down states thus leading to
four components overall.
*** Particles                                                         :drill:
    SCHEDULED: <2019-04-24 Wed>
    :PROPERTIES:
    :ID:       ae00a4b7-5242-41c6-8510-4e4b468795bb
    :DRILL_LAST_INTERVAL: 138.5172
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-06 Thu 13:03]
    :END:
What does the Dirac spinor have to
do with the Dirac equation?
**** Answer:
The Dirac spinor /ψ=(u,v)ᵀ/ is a solution
of the Dirac equation
/iγ⁰∂ₜψ-mψ=0/ for a particle at rest.
*** Particles                                                         :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       8259c42b-c147-4324-ba5a-dc4858187f27
    :DRILL_LAST_INTERVAL: 100.9356
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-04 Thu 14:35]
    :END:
How come the usual interpretation
of /|ψ|²/ as probability density
fails for the solutions /ψ/
of the Klein-Gordon equation?
**** Answer:
Because the probability density
interpretation is derived from
/conservation of probability/
/∂ₜρ+∇J=0/ with density /ρ/ and 
probability flux /J/. Here,
this turns out to be
/ρ=i(ψ̄∂ₜψ-ψ∂ₜψ̄)/.The form /ρ=|ψ|²/ 
is particular to the 
Schrödinger equation.
*** Particles                                                         :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       e8f1c79e-741b-4658-98b0-869c7ea81eb4
    :DRILL_LAST_INTERVAL: 19.8701
    :DRILL_REPEATS_SINCE_FAIL: 12
    :DRILL_TOTAL_REPEATS: 20
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 2.9
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:39]
    :END:
How can wave functions /ψ/
be associated with probability 
distributions?
**** Answer:
Via the probability current
/J=ℏ/2mi(ψ̄∇ψ-ψ∇ψ̄)/ and conservation
of probability /∂ₜρ+∇J=0/. With the
proper wave equation, the solution
can be as simple as /ρ=|ψ|²/ as in the
case of the Schrödinger equation.
*** Particles                                                         :drill:
    SCHEDULED: <2019-02-15 Fri>
    :PROPERTIES:
    :ID:       70def94e-b831-4fc2-8a7a-444c65651c83
    :DRILL_LAST_INTERVAL: 121.591
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-16 Tue 15:37]
    :END:
What is the problem with the
probability current 
/J=ℏ/2mi(ψ̄∇ψ-ψ∇ψ̄)/ when deriving
probability densities for a 
wave function?
**** Answer:
This form of the probability current
is only valid for free spin-0 particles.
It has to be adjusted for field and 
spin interactions in other cases.
*** Particles                                                         :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       44fb7892-7c80-4fce-be6c-da79b474a80e
    :DRILL_LAST_INTERVAL: 100.9356
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-04 Thu 14:36]
    :END:
Why is the appearance of negative
probability distributions not the
real problem of the Klein-Gordon
equation?
**** Answer:
Because they could be explained
away as positive probabilities for
anti-particles. The real problem 
seems that for free energy solutions
the distributions /ρ=i(ψ̄∂ₜψ-ψ∂ₜψ̄)=2E/
are uniform. (Same as Schrödinger?)
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-04 Mon>
    :PROPERTIES:
    :ID:       06d9b26c-418f-43a6-9321-f29044f27f9b
    :DRILL_LAST_INTERVAL: 142.4286
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:27]
    :END:
What is CP violation?
**** Answer:
The fact that the composition
CP of charge and parity is not
preserved in weak interactions,
even though less often than
charge or parity by themselves.
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-04 Mon>
    :PROPERTIES:
    :ID:       7f91616b-f7d9-40b3-8adb-dff77cc85a45
    :DRILL_LAST_INTERVAL: 142.4286
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:18]
    :END:
How does charge behave
under particle interaction?
**** Answer:
Like parity it is a multiplicative
quantum number with respect to
strong and electromagnetic 
interactions but is not preserved
in weak interactions.
*** Particles                                                         :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       e737b08d-6195-4ff6-9aad-48c893933eec
    :DRILL_LAST_INTERVAL: 100.9356
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-29 Sat 15:34]
    :END:
What seems to be the
standard way to classify
particles?
**** Answer:
Via operators /O/ that commute
with the Hamiltonian and satisfy
/O²=I./ In addition, the eigenvalues
of /O/ should be additive or 
multiplicative quantum numbers
with respect to certain 
interactions.
*** Particles                                                         :drill:
    SCHEDULED: <2019-02-09 Sat>
    :PROPERTIES:
    :ID:       6c2d0f1c-128c-4f81-bd0b-40c87af7d363
    :DRILL_LAST_INTERVAL: 127.9373
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-04 Thu 14:34]
    :END:
What is a multiplicative 
quantum number?
**** Answer:
A numerical property of
a particle so that the 
product of this property
is preserved in multi-particle
interactions.
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-09 Sat>
    :PROPERTIES:
    :ID:       8e84725f-bea7-48af-b8ce-55e378c11d28
    :DRILL_LAST_INTERVAL: 146.529
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:21]
    :END:
What is an additive
quantum number?
**** Answer:
A numerical property of
a particle so that the sum
of this property is preserved
in multi-particle interactions, 
for example momentum.
*** Particles                                                         :drill:
    SCHEDULED: <2019-02-13 Wed>
    :PROPERTIES:
    :ID:       f3cd2218-1527-43ff-b58b-de0806662ab5
    :DRILL_LAST_INTERVAL: 131.6205
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-10-04 Thu 14:32]
    :END:
Why is the definition of
/charge/ confusing?
**** Answer:
Because only particles that
are their own anti-particles
can be eigenvalues of the 
charge operator. But this means
their electrical charge must
be 0.
*** Particles                                                         :drill:
    SCHEDULED: <2019-02-26 Tue>
    :PROPERTIES:
    :ID:       45cc9ccf-4da5-4927-86f8-10390c222521
    :DRILL_LAST_INTERVAL: 82.5621
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.334
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-05 Wed 13:01]
    :END:
What is /charge/?
**** Answer:
A particle property measured
by the charge operator /C/ 
which sends a particle state
|ψ⟩ to its anti-particle |ψ̄⟩.
*** Particles                                                         :drill:
    SCHEDULED: <2019-02-08 Fri>
    :PROPERTIES:
    :ID:       bd25de33-b524-4b5e-9bec-d801a244fb17
    :DRILL_LAST_INTERVAL: 116.4572
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-10-15 Mon 17:22]
    :END:
What is parity?
**** Answer:
A quantum property measured
by the parity operator /P/, which
acts on a wavefunction /φ/ as
/Pφ(x)=φ(-x)/.
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-09 Sat>
    :PROPERTIES:
    :ID:       0bc9a6a2-a0fa-4752-acee-1c2211142839
    :DRILL_LAST_INTERVAL: 146.529
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:24]
    :END:
How to determine parity for
multiple particle states?
**** Answer:
From the fact that parity is
a multiplicative quantum number,
ie. /P|a,b⟩=(P|a⟩)P(|b⟩)/.
*** Particles                                                         :drill:
    SCHEDULED: <2019-01-20 Sun>
    :PROPERTIES:
    :ID:       3ea55019-0da2-455a-bc8b-e1b360962bbc
    :DRILL_LAST_INTERVAL: 18.414
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.077
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-02 Wed 12:51]
    :END:
How is parity different in bosons
vs fermions?
**** Answer:
For bosons, particles and anti-
particles have the same parity.
For fermions, particle and anti-
particle have opposite parity.
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-04 Mon>
    :PROPERTIES:
    :ID:       b18be8dd-1991-434f-876e-330fc5f1bf76
    :DRILL_LAST_INTERVAL: 142.4286
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-13 Sat 19:27]
    :END:
What is parity violation?
**** Answer:
The fact that parity is only
preserved in electromagenetic
and in strong interactions but
not in weak interactions.
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-16 Sat>
    :PROPERTIES:
    :ID:       d2e6b77c-ac33-4f26-b3ac-61d472a84907
    :DRILL_LAST_INTERVAL: 151.875
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-15 Mon 17:22]
    :END:
How can particles change their
parity?
**** Answer:
Only through interactions. Parity
eigenstates are also energy eigen-
states, hence preserved during
time-evolution.
*** Particles                                                         :drill:
    SCHEDULED: <2019-02-17 Sun>
    :PROPERTIES:
    :ID:       0b87069c-50fd-4078-b7cb-e1d6aa911c1f
    :DRILL_LAST_INTERVAL: 132.5784
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-07 Sun 13:58]
    :END:
How does the identity of particle
types come about?
**** Answer:
Through observables whose eigenstates
are energy eigenstates but with few
eigenvalues, such as electric charge,
parity etc. This way, these properties
won't change in time, thus conveying
individuality through durability. The
low number of eigenvalues avoids 
the confusion of multitudes.
*** Particles                                                         :drill:
    SCHEDULED: <2019-02-02 Sat>
    :PROPERTIES:
    :ID:       4de4a63c-4287-42c1-a424-b2a6d28b1603
    :DRILL_LAST_INTERVAL: 121.1747
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-04 Thu 14:41]
    :END:
Why does beta decay
/n → p+e+v̄ₑ/ involve an
anti-neutrino instead
of a neutrino?
**** Answer:
Because lepton number has
to be preserved. Neutron
/n/ and proton /p/ both have 
lepton number 0 as
non-leptons whereas the 
electron has lepton number 1.
Thus, the neutrino part needs
to have lepton number -1 requiring
it to be an anti-neutrino.
*** Particles                                                         :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       951dd9d8-ced6-4a1a-8163-c699bd834639
    :DRILL_LAST_INTERVAL: 112.817
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-24 Mon 18:55]
    :END:
What are the possible values
for lepton numbers?
**** Answer:
Particles that are not leptons
have lepton number 0. All 
leptons that are particles have
lepton number +1 whereas leptons
that are anti-particles have
lepton number -1.
*** Particles                                                         :drill:
    SCHEDULED: <2019-03-02 Sat>
    :PROPERTIES:
    :ID:       e99decab-17da-42de-acba-609651e64c8d
    :DRILL_LAST_INTERVAL: 111.3003
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 9
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.111
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-11 Sun 20:37]
    :END:
What are leptons?
**** Answer:
Particles that interact via
the electromagnetic and weak
force but are not subject to
the strong force.
*** Particles                                                         :drill:
    SCHEDULED: <2019-01-19 Sat>
    :PROPERTIES:
    :ID:       01daca23-11a9-4736-8f46-1ccfc08cd919
    :DRILL_LAST_INTERVAL: 18.414
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.077
    :DRILL_EASE: 1.38
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:41]
    :END:
Why can a neutral particle
like the neutrino have an 
anti-particle?
**** Answer:
Because these particles can
have a lepton number, thus 
despite being electrically 
neutral they can have opposite
lepton numbers.
*** Path Integral						      :drill:
    SCHEDULED: <2019-04-01 Mon>
    :PROPERTIES:
    :ID:       94342910-30cb-4f2e-a362-6f9660a95aff
    :DRILL_LAST_INTERVAL: 89.9046
    :DRILL_REPEATS_SINCE_FAIL: 9
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.077
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-01 Tue 17:56]
    :END:
What does the path-integral describe?
**** Answer:
The transition amplitude 
/⟨q_f|e⁻ⁱᴴᵗ|qᵢ⟩/
to propagate from initial state /qᵢ/
to final state /q_f/ during time /T/
in a quantum system governed by Hamiltonian
/H/.
*** Path integral						      :drill:
    SCHEDULED: <2019-07-31 Wed>
    :PROPERTIES:
    :ID:       00b6b68c-f19e-4775-90e9-f7252ddd9c5c
    :DRILL_LAST_INTERVAL: 217.7714
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:30]
    :END:
What is the idea of using the path-integral
to describe 
$I=\langle q_F|e^{-iHT}|q_I\rangle$?
**** Answer:
To split the $T$ into shorter intervals
$\delta t$ and then write 
$e^{-iHT}=\prod e^{-iH\delta t}$. This
then allows to split up $I$ into a sum
of products of intermediate state changes
$\langle q_{j+1}|e^{-iH\delta t}|q_j\rangle$
using the fact that the $q_j$ form an 
orthonormal system. The hope is that the
intermediate state changes are easier to
obtain and make sense in the limit as
$\delta t\rightarrow 0$.
*** Path integral						      :drill:
    SCHEDULED: <2019-07-31 Wed>
    :PROPERTIES:
    :ID:       7fbf5261-549c-4c71-8210-ab0071578bdc
    :DRILL_LAST_INTERVAL: 217.7714
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 8
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.875
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:31]
    :END:
Why is the path-integral formulation 
commonly accepted despite its computational
difficulty?
**** Answer:
Because, for many frequently occuring 
Hamiltonians /H/ it can be expressed in
terms of the corresponding Lagrangian /L/,
more precisely as time-integral of /L/, 
also called the action. In addition, for
/ℏ → 0/ the classical path
is obtained.
*** Path integral						      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       5e8df1a4-a546-4dd1-90b0-c290a98bcd6e
    :DRILL_LAST_INTERVAL: 23.4486
    :DRILL_REPEATS_SINCE_FAIL: 14
    :DRILL_TOTAL_REPEATS: 27
    :DRILL_FAILURE_COUNT: 4
    :DRILL_AVERAGE_QUALITY: 2.853
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 17:01]
    :END:
How does the propagator arise?
**** Answer:
For a disturbance /J(x)/ in the field, 
the path integral is /Z=Ceⁱᵂ⁽ᴶ⁾/ with a
constant /C/ and a quadratic form
/W(J)=-1/2∫∫ dx dy J(x)D(x-y)J(y)/
where /D/ is the propagator.
*** Path integral						      :drill:
    SCHEDULED: <2019-02-10 Sun>
    :PROPERTIES:
    :ID:       76ca26cb-267e-4178-8ced-2a3adfe330fa
    :DRILL_LAST_INTERVAL: 56.6855
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.923
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-15 Sat 13:30]
    :END:
What is the physical meaning of the 
propagator?
**** Answer:
The value /D(x)/ describes the amplitude
for a disturbance of the field to travel
from the origin to /x/.
*** Path integral						      :drill:
    SCHEDULED: <2019-01-08 Tue>
    :PROPERTIES:
    :ID:       10cb71f9-2ccc-4e5e-90a7-c8a8a4dcead4
    :DRILL_LAST_INTERVAL: 47.2894
    :DRILL_REPEATS_SINCE_FAIL: 10
    :DRILL_TOTAL_REPEATS: 14
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-22 Thu 12:32]
    :END:
How is the propagator related to its
field?
**** Answer:
The propagator /D/ must satisfy 
/-OD(x-y)=δ(x-y)/ where /O/
is the differential operator resulting
from the equations of motion of the 
Lagrangian of the field, ie it is the 
inverse of that operator.
*** Path integral						      :drill:
    SCHEDULED: <2019-06-23 Sun>
    :PROPERTIES:
    :ID:       1a50e2b9-5168-4c0c-979d-107e409a4e7f
    :DRILL_LAST_INTERVAL: 182.9923
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 2
    :DRILL_AVERAGE_QUALITY: 3.231
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 16:59]
    :END:
How are particles introduced to a
(scalar) field mathematically?
**** Answer:
By adding a function that is essentially
a sum of Dirac functions to the 
Lagrangian.
*** Path integral						      :drill:
    SCHEDULED: <2019-07-30 Tue>
    :PROPERTIES:
    :ID:       077cb5fe-32e5-4c0b-ae85-9966741d4a14
    :DRILL_LAST_INTERVAL: 217.7714
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 7
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-24 Mon 16:14]
    :END:
How are charged particles added to
an electromagnetic field?
**** Answer:
As a charge vector /Jᵐ/ where 
/J⁰/ represents charge density.
*** Path integral						      :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       8f700412-45a2-4037-9c2b-9ccf02706a6d
    :DRILL_LAST_INTERVAL: 80.0589
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 12
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.083
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-01 Sat 16:12]
    :END:
How do the propagators for the Gordon-Klein
field differ from those of the electromagnetic
field?
**** Answer:
The propagator in the Gordon-Klein field is
a scalar because this field is a scalar field.
The propagator in the electromagnetic field
is a matrix because the electromagnetic
field is a vector field resulting from
its vector potential.
*** Path integral						      :drill:
    SCHEDULED: <2019-02-10 Sun>
    :PROPERTIES:
    :ID:       735e603d-bc9f-4205-a495-d8cd9fae5759
    :DRILL_LAST_INTERVAL: 35.2018
    :DRILL_REPEATS_SINCE_FAIL: 8
    :DRILL_TOTAL_REPEATS: 13
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.077
    :DRILL_EASE: 1.16
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-06 Sun 18:04]
    :END:
How are positive and negative charges 
accomodated when introducing them into
the electromagnetic field?
**** Answer:
By splitting the current /Jᵐ/ into a
positive and a negative part:
/Jᵐ=Jₚᵐ-Jₙᵐ/.
*** Philosophy                                                        :drill:
    SCHEDULED: <2019-02-15 Fri>
    :PROPERTIES:
    :ID:       7098cf17-ef52-4a72-85db-a62c8ee2ef0c
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-28 Wed 13:05]
    :END:
How does reality creation
by interaction tie in with
the existence of a
noumenon?
**** Answer:
There must be a feature
all observers agree on
after an interaction, just
like the speed of light
in relativistic measurements.
This feature should be related
to the noumenon.
*** Philosophy                                                        :drill:
    SCHEDULED: <2019-03-15 Fri>
    :PROPERTIES:
    :ID:       e82d63ed-8a66-4200-bb70-194ea8b2ee6f
    :DRILL_LAST_INTERVAL: 142.3815
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.167
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-24 Wed 12:50]
    :END:
Why is /lack of reality/
not a strong argument
against Wigner's subjective
theory of wave-function
collapse?
**** Answer:
Because even if different
observers have their own
reality (=phenomenology),
these realities need not
be arbitrary. It takes
only one perception they
agree on to translate between
the phenomenologies, as
happens with observers in
relativity who all perceive
the same speed of light.
*** Quantization                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       4645d39f-2d93-43b8-bd2b-eac30d9b9bf3
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:00]
    :END:
How to construct a phase-space
function from an operator?
**** Answer:
Via the Wigner transform
/f(p,q)=∫dy exp(-2ipy/ℏ)⟨q+y|Φ|q-y⟩/.
*** Quantization                                                      :drill:
    SCHEDULED: <2019-01-15 Tue>
    :PROPERTIES:
    :ID:       84ca4198-81bc-462c-a849-929b8ddee219
    :DRILL_LAST_INTERVAL: 9.517
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 13:55]
    :END:
How are operators representing
an observable related to their
phase-space representation?
**** Answer:
That depends on the exact 
representation of these distributions
but most commonly the operator is
mapped to phase-space via the
Wigner transform.
*** Quantization                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       9739c73f-9491-4d12-ba7d-e9cbfe165912
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 13:58]
    :END:
What is the essence of the
phase-space formulation of
quantum mechanics?
**** Answer:
Here, quantum systems are
described by quasiprobability
distributions /f(x,p)/ on 
phase space and operator 
products are replaced by
a non-commutative star 
multiplication between 
these distributions.
*** Quantization                                                      :drill:
    SCHEDULED: <2019-01-13 Sun>
    :PROPERTIES:
    :ID:       4e5d2215-99b4-425f-a352-f4c0e2d0945d
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:34]
    :END:
Why is the Poisson bracket
difficult to accomodate in
quantization procedures?
**** Answer:
Because the requirements
that /n↦Qₙ/ be linear and
/[Qₙ,Qₘ]=iℏ Q_{n,m}/ with
Poisson bracket /{n,m}/ are
inconsistent with the usual
quantization where position
is the multiplication 
operator and momentum is
/-iℏ∂ₓ/.
*** Quantization                                                      :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       c0ea155d-97cd-4de6-b56e-5765c97e48ba
    :DRILL_LAST_INTERVAL: 9.2829
    :DRILL_REPEATS_SINCE_FAIL: 3
    :DRILL_TOTAL_REPEATS: 2
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 13:59]
    :END:
What is it that is
actually quantized
in quantum mechanics?
**** Answer:
Functions on classical /phase space/,
ie functions in generalized
position and momentum variables are
quantized by assigning an operator
/Qₐ/ to function /a/.
*** Schrödinger                                                       :drill:
    SCHEDULED: <2019-01-12 Sat>
    :PROPERTIES:
    :ID:       e674df66-a2ee-413b-82d3-6335ca4c59c7
    :DRILL_LAST_INTERVAL: 13.096
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.9
    :DRILL_EASE: 1.24
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-30 Sun 16:51]
    :END:
Is there any leeway in the form of
the quantum hamiltonian /H/ in the 
Schrödinger equation?
**** Answer:
The form of /H/ is derived as the linear part
of the unitary time evolution operator 
/U(t',t)/ as /U(t',t)~1-iH(t'-t)/ using the
Taylor expansion. Using the correpondence
principle it can be shown that in the classical
limit the expectation of /H/ is the energy.
However, due to the uncertainty principle, the
form of the hamiltonian /H/ is not completetely
determined by the correspondence principle. 
*** Schrödinger                                                       :drill:
    SCHEDULED: <2019-04-28 Sun>
    :PROPERTIES:
    :ID:       fff93c00-cf83-4ffd-8326-b93ed27af3df
    :DRILL_LAST_INTERVAL: 138.5172
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.66
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-10 Mon 15:47]
    :END:
Is there a way to derive the
Schrödinger equation without
recourse to the form of definite
energy-state wave-functions?
**** Answer:
Yes, the linearity of quantum
mechanics leads to the requirement
of /ψ(t')=U(t',t)ψ(t)/ with /U(t',t)/
a unitary operator for the change
of state from /t/ to /t'/. Taylor expansion
to first order leads to 
/U(t',t)~1-iH(t'-t)/ with /H/ hermitian and
in the limit /t'→ t/ to the Schrödinger
equation with /H/. Checking expectation
values for /H/ and using the correspondence
principle shows that the expectation
of /H/ is the classical energy. 
*** Time Evolution                                                    :drill:
    SCHEDULED: <2019-01-24 Thu>
    :PROPERTIES:
    :ID:       f5b1e43f-f5c7-4b6b-9d78-afc2b4d3eda2
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:38]
    :END:
How does a state evolve
with respect to an energy
representation?
**** Answer:
If /φ(0)=∑cₖ|λₖ>/ in terms
of energy eigenstates
/|λₖ>/ then
/φ(t)=∑cₖexp(-iλₖt)|λₖ>/
with ℏ=1.
*** Time Evolution                                                    :drill:
    SCHEDULED: <2019-01-26 Sat>
    :PROPERTIES:
    :ID:       b2ec5172-fcff-410f-9db3-69310dca0029
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-06 Sun 18:03]
    :END:
How do probabilities
/|⟨ψ|φ(t)⟩|²/ evolve?
**** Answer:
As 
/const+2∑cₙₘcos(λₙ-λₘ)t/
essentially, where the
/λᵢ/ are the energy levels
of the Hamiltonian of the
system.
* Sound
** Alsa
*** Fact							      :drill:
    SCHEDULED: <2019-04-13 Sat>
  :Properties:
  :DRILL_CARD_TYPE: hide1cloze
  :ID:       856d669e-831e-4bc1-b828-7289fc8bbace
  :DRILL_LAST_INTERVAL: 121.5621
  :DRILL_REPEATS_SINCE_FAIL: 8
  :DRILL_TOTAL_REPEATS: 12
  :DRILL_FAILURE_COUNT: 1
  :DRILL_AVERAGE_QUALITY: 3.166
  :DRILL_EASE: 1.34
  :DRILL_LAST_QUALITY: 3
  :DRILL_LAST_REVIEWED: [2018-12-12 Wed 15:22]
  :END:      
#just testing italic and bold markup
Alsa's [dsnoop||interface] /allows/ *to* 
[loop microphone input to playback] and 
[record with arecord] at the same time.
*** Fact							      :drill:
    SCHEDULED: <2019-04-13 Sat>
  :Properties:
  :DRILL_CARD_TYPE: hide1cloze
  :ID:       198fc05f-47ff-476b-b287-629743279c9f
  :DRILL_LAST_INTERVAL: 121.5621
  :DRILL_REPEATS_SINCE_FAIL: 8
  :DRILL_TOTAL_REPEATS: 13
  :DRILL_FAILURE_COUNT: 2
  :DRILL_AVERAGE_QUALITY: 3.077
  :DRILL_EASE: 1.34
  :DRILL_LAST_QUALITY: 3
  :DRILL_LAST_REVIEWED: [2018-12-12 Wed 15:18]
  :END:      
In order to send microphone input to playback 
and record it at the same time, run 
[alsaloop with capture device dsnoop] 
and [arecord with the default device].
* Unix
*** applications                                                      :drill:
    SCHEDULED: <2019-04-29 Mon>
    :PROPERTIES:
    :ID:       cec45889-8918-4759-b67c-9a3623b8f756
    :DRILL_LAST_INTERVAL: 139.9461
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-10 Mon 15:50]
    :END:
What to do if the default
window sizes in the lxde
desktop suddenly change?
**** Answer:
This often happens when
using a second monitor with
a different resolution. Log
in and out and the defaults
should be restored.
*** applications                                                      :drill:
    SCHEDULED: <2019-04-24 Wed>
    :PROPERTIES:
    :ID:       f09ced51-e4e8-4e04-b2ea-90f38304df01
    :DRILL_LAST_INTERVAL: 143.4891
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-02 Sun 15:41]
    :END:
Why is ~cat~ not ideal for
viewing log-files?
**** Answer:
Because logs are appended
at the end. In most cases,
the most recent entries are
of interest, which would be
at the end of ~cat~ output.
Use ~tac~ instead which lists
files in reverse line-order.
*** applications                                                      :drill:
    SCHEDULED: <2019-04-20 Sat>
    :PROPERTIES:
    :ID:       ee2f9b28-2cc4-45e9-80bd-e99f0f8bb99b
    :DRILL_LAST_INTERVAL: 143.9775
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-27 Tue 11:31]
    :END:
What is the problem when
Mnemosyne stops working
after an upgrade?
**** Answer:
This is usually related to
a change in configuration
handling. Removing 
~.config/mnemosyne~ helps in
this situation.
*** applications                                                      :drill:
    SCHEDULED: <2019-05-03 Fri>
    :PROPERTIES:
    :ID:       ade31ce5-3d57-46ee-9569-4ced06835210
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-28 Wed 13:05]
    :END:
What is the problem when
Python based applications
complain about
~name "file" not defined~?
**** Answer:
This is common in python
code modified for version 3.
Here, a ~file~ object is
now obtained from the ~Open~ 
function rather than from
calling ~file~.
*** booting                                                           :drill:
    SCHEDULED: <2019-03-13 Wed>
    :PROPERTIES:
    :ID:       61f01ffc-4d52-45dd-b694-217e35b553da
    :DRILL_LAST_INTERVAL: 98.0332
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-05 Wed 12:57]
    :END:
How to partition a
disk to hold a lubuntu
system with efi-boot?
**** Answer:
Just as normal, it
only needs an efi partition
of 100-200MB that needs to 
be formatted as FAT32 and
preferably on /sda1
*** booting                                                           :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       ba04ffb7-25cf-4919-9cc8-af00b4acab76
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-02 Sun 15:41]
    :END:
How to remove the windows
entry from the boot-menu
in a system where Windows
has been completely replaced
by a ubuntu distribution?
**** Answer:
Delete ‌/boot‌/efi‌/EFI‌/Microsoft
and run ~sudo update-grub~ to 
create a new grub configuration file.
Note that the corresponding entry
should also be removed from the
boot-manager using efibootmgr.
*** boot                                                              :drill:
    SCHEDULED: <2019-02-19 Tue>
    :PROPERTIES:
    :ID:       ad4aee98-d7f0-4352-b05e-c45a14a03ea5
    :DRILL_LAST_INTERVAL: 78.666
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-02 Sun 15:44]
    :END:
How to remove an entry from
the computer's boot manager?
**** Answer:
With
~efibootmgr -b 0001 -B~ to remove 
boot entry ~Boot0001~.
*** boot                                                              :drill:
    SCHEDULED: <2019-03-28 Thu>
    :PROPERTIES:
    :ID:       5dc88cf5-f72b-46c7-968f-37ec2be99bdc
    :DRILL_LAST_INTERVAL: 106.1166
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-12 Wed 15:21]
    :END:
What does
~efibootmgr -v~ actually check?
**** Answer:
The boot entries in the EFI
NVRAM, which is part of the
system's boot loader hardware.
*** configuration                                                     :drill:
    SCHEDULED: <2019-01-21 Mon>
    :PROPERTIES:
    :ID:       4524fef6-d8fc-4611-b2d6-be87f3eaf07d
    :DRILL_LAST_INTERVAL: 24.39
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.667
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-28 Fri 19:50]
    :END:
How to set up monitors
from the command line?
**** Answer:
With =xrandr= for configurations
totally on the command-line or,
if available, =lxrandr= which
provides a gui.
*** configuration                                                     :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       afa293a0-9c3c-4a22-a15c-4aec79770d7c
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:01]
    :END:
How to manipulate monitor
brightness from the command
line?
**** Answer:
There is a =–brightness= option
to =xrandr= which can be used. 
Alternatively, =xfce4-power-settings=
may work if available.
*** configuration                                                     :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       b094041f-dc0f-4e36-a5e1-d380f20cd11e
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:01]
    :END:
Why does the 
=xbacklight= command not
always work to adjust
screen brightness?
**** Answer:
It requires hardware support
expressed by the presence of
entries in =/sys/class/backlight=.
It attempts to write a value into
=/sys/class/backlight/<monitor>/brightness=.
*** configuration                                                     :drill:
    SCHEDULED: <2019-01-17 Thu>
    :PROPERTIES:
    :ID:       cacaa2dc-9f11-4419-b0dd-f1a88be188bb
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:00]
    :END:
What to do if there is nothing
in =/sys/class/backlight= to adjust
the brightness?
**** Answer:
Check if there is a brightness
entry somewhere in =/sys/devices
~sudo find /sys -type f -iname '*brightness*'.~
If so, link an entry in =/sys/class/backlight=
to it, if not then there is not hardware
support for brightness changes.
*** configuration                                                     :drill:
    SCHEDULED: <2019-02-02 Sat>
    :PROPERTIES:
    :ID:       d851807b-c2ec-41c5-b3b2-8c93075d73a7
    :DRILL_LAST_INTERVAL: 42.3244
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 16:57]
    :END:
How to configure
input methods in
lubuntu?
**** Answer:
In =Preferences -> Language Support=.
Select the keyboard input method
system, then log out and back
in.
*** configuration                                                     :drill:
    SCHEDULED: <2019-05-03 Fri>
    :PROPERTIES:
    :ID:       7d25333b-1ed2-412e-ab7d-9133e8ea1ed3
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-28 Wed 13:05]
    :END:
Why is it not a good
idea to copy system directories
from one partition to another,
such as when using a new, bigger
partition of /var?
**** Answer:
Because copying doesn't keep file
ownership intact. This may break
applications requiring write access
to certain areas of ie /var.
*** configuration                                                     :drill:
    SCHEDULED: <2019-04-11 Thu>
    :PROPERTIES:
    :ID:       5135386c-e425-4857-8207-32f38f0e3bcb
    :DRILL_LAST_INTERVAL: 113.1492
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-19 Wed 15:00]
    :END:
What to do if the
desktop icons suddenly 
vanish, ie after a
pcmanfm crash?
**** Answer:
The desktop manager
has to be restarted, 
either with 
~lxpanelctl restart && openbox --restart~
or using
/Preferences -> Default applications for LXSessions/
*** configuration                                                     :drill:
    SCHEDULED: <2019-04-07 Sun>
    :PROPERTIES:
    :ID:       2fbe518e-c6dc-40a8-87f0-a8fa2ea6b07e
    :DRILL_LAST_INTERVAL: 109.9397
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.18
    :DRILL_LAST_QUALITY: 5
    :DRILL_LAST_REVIEWED: [2018-12-18 Tue 12:02]
    :END:
What to do if /pcmanfm/
crashes?
**** Answer:
It has to be restarted so
that the desktop manager
is restarted as well. Either
~pcmanfm --desktop --profile lubuntu~
from a terminal or using
/Preferences -> Default applications for LXSessions/
should work.
*** configuration                                                     :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       d0e6e77d-f655-490c-9f2e-198df739ce7b
    :DRILL_LAST_INTERVAL: 77.2836
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:14]
    :END:
What is the problem if
the desktop doesn't show
the usual icons from the 
~Desktop~ directory?
**** Answer:
This happens after system
upgrades or changes in the
desktop files. Run
~update-mime-database /usr/share/mime~
and see if that helps.
*** configuration                                                     :drill:
    SCHEDULED: <2019-03-31 Sun>
    :PROPERTIES:
    :ID:       fb6be726-fbd6-4810-9bac-def0b4251700
    :DRILL_LAST_INTERVAL: 133.5812
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-17 Sat 14:34]
    :END:
What is the problem with
the systemd-shim configuration
in ubuntu?
**** Answer:
That was removed in the transition
to version 18.04. The problem was
its dbus-service configuration, the 
old org.freedesktop.systemd1.service
had to be removed by hand to make
room for the new one, which has
~Exec=/bin/false~ to reflect the fact
that the original systemd-shim
executable is not available anymore.
*** configuration                                                     :drill:
    SCHEDULED: <2019-03-28 Thu>
    :PROPERTIES:
    :ID:       e051314d-8e9b-4aac-8150-aecee71ff65c
    :DRILL_LAST_INTERVAL: 129.8125
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-18 Sun 19:16]
    :END:
What are common values for
swapiness?
**** Answer:
The default is 60, systems
with enough memory should make
do with a value of 1, ie use
swap only in emergencies, to
10 in order to prevent excessive
swapping.
*** configuration                                                     :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       f8d6dca9-f308-49e6-9563-989f84336620
    :DRILL_LAST_INTERVAL: 20.1068
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:01]
    :END:
How to configure 
key-bindings in =lxde=?
**** Answer:
With a ~<keybind key="<keyid>">~
entry in ~/.config/openbox/lxde-rc.xml.
*** configuration                                                     :drill:
    SCHEDULED: <2019-01-14 Mon>
    :PROPERTIES:
    :ID:       099becc5-eb71-4df0-b9cb-12b00d45dbd1
    :DRILL_LAST_INTERVAL: 77.0046
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.833
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-29 Mon 14:51]
    :END:
What is swappiness?
**** Answer:
A parameter that defines how
swap-space is used. It can
be configured in ~/etc/sysctl.conf~
by setting ~vm.swappiness~ to a
natural number, 0 indicating
a desire not to use swap space
at all.
*** dmenu                                                             :drill:
    SCHEDULED: <2019-04-03 Wed>
    :PROPERTIES:
    :ID:       218d7220-8b75-4169-8331-200ec9fc2e19
    :DRILL_LAST_INTERVAL: 124.321
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.4
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-30 Fri 12:23]
    :END:
What to do if running
~dmenu~ doesn't do 
anything?
**** Answer:
It won't run from a
terminal window like that,
use ~dmenu_run~ instead.
*** dmenu                                                             :drill:
    SCHEDULED: <2019-04-23 Tue>
    :PROPERTIES:
    :ID:       d318d873-e595-44ab-9a5d-b634c678d763
    :DRILL_LAST_INTERVAL: 146.2514
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.46
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-28 Wed 13:08]
    :END:
How to pass arguments to 
commands selected in dmenu?
**** Answer:
Hit ~Tab~ instead of ~Enter~,
this will copy the command
to the input field instead
of executing it. Then add
the arguments to the input
field and hit enter to execute
the whole thing.
*** dmenu                                                             :drill:
    SCHEDULED: <2019-03-06 Wed>
    :PROPERTIES:
    :ID:       ec6a5d6f-f43c-41ac-9deb-c5b6c9d8f220
    :DRILL_LAST_INTERVAL: 104.3002
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-22 Thu 12:34]
    :END:
Is it possible to transfer
file-names from a filemanager
to dmenu to be used as
argument to a command?
**** Answer:
The full pathname of a file
can be copied from emacs
dired to the clip-board 
via ~0 w~. Then start
dmenu, select the command,
~Tab~ it to the input field
and copy the clip-board 
contents with ~Ctrl-Shift-y~.
*** Fact							      :drill:
    SCHEDULED: <2019-10-06 Sun>
  :Properties:
  :DRILL_CARD_TYPE: hide1cloze
  :ID:       98803899-cb7e-47ff-8a49-f779380cf58d
  :DRILL_LAST_INTERVAL: 281.3247
  :DRILL_REPEATS_SINCE_FAIL: 7
  :DRILL_TOTAL_REPEATS: 11
  :DRILL_FAILURE_COUNT: 1
  :DRILL_AVERAGE_QUALITY: 3.727
  :DRILL_EASE: 2.24
  :DRILL_LAST_QUALITY: 4
  :DRILL_LAST_REVIEWED: [2018-12-29 Sat 15:03]
  :END:      
ACL is an abbreviation for 
[Access Control Lists], it allows to 
[specify file access in a more fine-grained 
way than users and groups].
*** Fact							      :drill:
    SCHEDULED: <2019-02-15 Fri>
  :Properties:
  :DRILL_CARD_TYPE: hide1cloze
  :ID:       515f3873-fe47-4fc3-8889-dacbfa24c71b
  :DRILL_LAST_INTERVAL: 50.4668
  :DRILL_REPEATS_SINCE_FAIL: 6
  :DRILL_TOTAL_REPEATS: 16
  :DRILL_FAILURE_COUNT: 2
  :DRILL_AVERAGE_QUALITY: 3.5
  :DRILL_EASE: 1.86
  :DRILL_LAST_QUALITY: 4
  :DRILL_LAST_REVIEWED: [2018-12-27 Thu 18:08]
  :END:      
A [+ sign at the end of the permissions list of a file obtained from ls -l] 
indicates [the presence of an Access Control List] for that file.
*** Fact							      :drill:
    SCHEDULED: <2020-04-30 Thu>
  :Properties:
  :DRILL_CARD_TYPE: hide1cloze
  :ID:       62434f12-63db-42db-8da1-e6dd4059fe50
  :DRILL_LAST_INTERVAL: 501.0825
  :DRILL_REPEATS_SINCE_FAIL: 7
  :DRILL_TOTAL_REPEATS: 6
  :DRILL_FAILURE_COUNT: 0
  :DRILL_AVERAGE_QUALITY: 4.0
  :DRILL_EASE: 2.42
  :DRILL_LAST_QUALITY: 3
  :DRILL_LAST_REVIEWED: [2018-12-16 Sun 17:49]
  :END:      
An [Access Control List] for a file can be 
created with [setfacl||the command].
*** Fact							      :drill:
    SCHEDULED: <2020-04-30 Thu>
  :Properties:
  :DRILL_CARD_TYPE: hide1cloze
  :ID:       719f81ef-0428-47fe-bd36-130e5b808b5c
  :DRILL_LAST_INTERVAL: 501.0825
  :DRILL_REPEATS_SINCE_FAIL: 7
  :DRILL_TOTAL_REPEATS: 6
  :DRILL_FAILURE_COUNT: 0
  :DRILL_AVERAGE_QUALITY: 4.0
  :DRILL_EASE: 2.42
  :DRILL_LAST_QUALITY: 3
  :DRILL_LAST_REVIEWED: [2018-12-16 Sun 17:47]
  :END:      
The [Access Control List entries] for a file 
can be checked with [getfacl||the command].
*** Network                                                           :drill:
    SCHEDULED: <2019-02-09 Sat>
    :PROPERTIES:
    :ID:       25c51af7-4bd8-4e59-93c1-cff3b4e61b90
    :DRILL_LAST_INTERVAL: 136.3952
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.8
    :DRILL_EASE: 2.36
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-26 Wed 14:50]
    :END:
How to connect to wifi
from the command line?
**** Answer:
With ~nmcli~. Check its
manpage for details.
*** package management                                                :drill:
    SCHEDULED: <2019-01-21 Mon>
    :PROPERTIES:
    :ID:       95cce95b-3889-4747-aa1b-5fceaf748c8c
    :DRILL_LAST_INTERVAL: 20.608
    :DRILL_REPEATS_SINCE_FAIL: 4
    :DRILL_TOTAL_REPEATS: 3
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-31 Mon 13:36]
    :END:
Why does =apt-get upgrade=
often not upgrade the kernel?
**** Answer:
Kernel upgrades usually come
as a new package which is a new
dependency of the kernel
meta-package. As such, it will not
be installed by =apt-get upgrade=
until the meta-package is upgraded,
it needs =apt-get dist-upgrade=
to be run.
*** package management                                                :drill:
    SCHEDULED: <2019-05-03 Fri>
    :PROPERTIES:
    :ID:       d78972d1-c7dc-4c59-9968-1a614e05d142
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-11-28 Wed 13:08]
    :END:
What needs to be done after
a release upgrade?
**** Answer:
The new system should be
upgraded. Run ~apt-get update~
first to get the newest
packages from the new system.
*** package management                                                :drill:
    SCHEDULED: <2019-02-05 Tue>
    :PROPERTIES:
    :ID:       f9f24c11-dce7-4b02-93a7-45bb4c0e945b
    :DRILL_LAST_INTERVAL: 31.7561
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 11
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 2.909
    :DRILL_EASE: 1.3
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-04 Fri 13:41]
    :END:
What to do if ~apt~ indicates
broken packages?
**** Answer:
Run ~sudo apt-get update --fix-missing~
followed by
~sudo apt-get install -f~
*** printing                                                          :drill:
    SCHEDULED: <2019-05-30 Thu>
    :PROPERTIES:
    :ID:       f2abe240-7220-49c6-ba75-5902cdb35263
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-25 Tue 17:33]
    :END:

What is the ~name~ in
the ~@IF(name)~ construct
for allowing or denying
access to /cups/?
**** Answer:
That's an interface name,
such as ~eth0~ or ~wlan0~.
*** terminal                                                          :drill:
    SCHEDULED: <2019-02-04 Mon>
    :PROPERTIES:
    :ID:       77fa807f-8907-43f9-b683-673825d0e1ca
    :DRILL_LAST_INTERVAL: 44.4678
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.25
    :DRILL_EASE: 2.08
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-22 Sat 16:59]
    :END:
How to enter unicode in
an lxterminal?
**** Answer:
With =shift ctrl u=
followed by the codepoint
in hex.
*** terminal                                                          :drill:
    SCHEDULED: <2019-02-10 Sun>
    :PROPERTIES:
    :ID:       d8958e2a-bfcd-430f-b532-4b251e37c6f3
    :DRILL_LAST_INTERVAL: 45.5764
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-12-26 Wed 13:53]
    :END:
What to do if the
=ctrl shift u= method
doesn't work to put
unicode characters
in an lxterminal?
**** Answer:
This method requires
the /IBus/ input method.
*** services                                                          :drill:
    SCHEDULED: <2019-01-16 Wed>
    :PROPERTIES:
    :ID:       41205474-5e9a-44df-915d-6189c62a785f
    :DRILL_LAST_INTERVAL: 77.2836
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.0
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-10-31 Wed 13:11]
    :END:
How to fool a package
such as android-tools-adb
to think it stopped its
init.d service?
**** Answer:
Put a symbolic link from
~/lib/systemd/system/android-tools-adbd.service~
to ~/dev/null~. The pre-removal
script for android-tools-adb calls 
~invoke-rc.d android-tools-adbd stop~
which will now succeed with this link.
Note this has been an issue with systems
changing their init procedures, such as 
ubuntu between 16 and 18, where it was
hard to update this package because the 
old version couldn't be removed.
*** xmonad                                                            :drill:
    SCHEDULED: <2019-02-02 Sat>
    :PROPERTIES:
    :ID:       d427d0b3-2784-4a83-bad5-83255d6dc001
    :DRILL_LAST_INTERVAL: 35.3567
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.1
    :DRILL_EASE: 1.52
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-29 Sat 14:58]
    :END:
Where should applications
be auto-started xsession
style?
**** Answer:
Applications specific to
xmonad should be spawned
in the ~startupHook~ in
xmonad.hs.
*** xmonad                                                            :drill:
    SCHEDULED: <2019-02-20 Wed>
    :PROPERTIES:
    :ID:       5cf34575-120a-4bbf-b42b-b9af55d0640a
    :DRILL_LAST_INTERVAL: 99.5765
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.2
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-12 Mon 15:43]
    :END:
How to configure xmonad
to exhibit the network
connection icon?
**** Answer:
Install ~xmobar~ or something
equivalent and ~stalonetray~.
Then ~spawn "stalonetray"~ in
the ~startupHook~ in xmonad.hs.
If ~nm-applet~ is already running
(i.e. due to an lxsession or 
some such), this will bring up
the network icon. Otherwise
spawn nm-applet as well, 
presumably before stalonetray.
*** X Server                                                          :drill:
    SCHEDULED: <2019-01-11 Fri>
    :PROPERTIES:
    :ID:       5243ec7c-ecd4-4559-b427-cc5121b6a0e5
    :DRILL_LAST_INTERVAL: 57.591
    :DRILL_REPEATS_SINCE_FAIL: 5
    :DRILL_TOTAL_REPEATS: 4
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.5
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-11-14 Wed 14:51]
    :END:
What is the difference
between using an /autostart/
file and an /autostart/
directory to start applications
at login?
**** Answer:
The /autostart/ file in
=~/.config‌/<sessionname>/$DESKTOP_SESSION=
is session specific whereas the
/autostart/ directory
=~/.config/autostart=
works for all sessions that
comply with freedesktop.org
standards.
*** X Server                                                          :drill:
    SCHEDULED: <2019-02-14 Thu>
    :PROPERTIES:
    :ID:       efa47740-6a94-4d3f-9741-01a1982014dc
    :DRILL_LAST_INTERVAL: 137.415
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.6
    :DRILL_EASE: 2.22
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-09-30 Sun 12:00]
    :END:
How to configure GUI behaviour
on Lubuntu?
**** Answer:
In the files located in
~ ~/.config/lxsession/$DESKTOP_SESSION~
*** X Server                                                          :drill:
    SCHEDULED: <2019-04-24 Wed>
    :PROPERTIES:
    :ID:       94e89ecb-39a3-4f6d-aa4c-e077f0abb8a2
    :DRILL_LAST_INTERVAL: 130.6085
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 10
    :DRILL_FAILURE_COUNT: 1
    :DRILL_AVERAGE_QUALITY: 3.3
    :DRILL_EASE: 1.8
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2018-12-14 Fri 14:53]
    :END:
How to run applications at
start-up ~xinit~ style in lubuntu?
**** Answer:
Just add the application in
~ ~/.config/lxsession/$DESKTOP_SESSION/autostart~
*** X Server                                                          :drill:
    SCHEDULED: <2019-03-03 Sun>
    :PROPERTIES:
    :ID:       d2aadf4a-8bde-47c5-a6e9-2e69b69e99c9
    :DRILL_LAST_INTERVAL: 156.25
    :DRILL_REPEATS_SINCE_FAIL: 6
    :DRILL_TOTAL_REPEATS: 5
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 4.0
    :DRILL_EASE: 2.5
    :DRILL_LAST_QUALITY: 4
    :DRILL_LAST_REVIEWED: [2018-09-28 Fri 15:32]
    :END:
How to find out what 
a key does in X?
**** Answer:
Run ~xev~ in an xterminal
and hit keys. It will 
list events thusly
generated on the server.
*** Gnu Root Debian                                                   :drill:
    SCHEDULED: <2019-08-31 Sat>
    :PROPERTIES:
    :ID:       512e04cc-f3fc-4bc3-ab38-e760325fe873
    :DRILL_LAST_INTERVAL: 238.3823
    :DRILL_REPEATS_SINCE_FAIL: 7
    :DRILL_TOTAL_REPEATS: 6
    :DRILL_FAILURE_COUNT: 0
    :DRILL_AVERAGE_QUALITY: 3.333
    :DRILL_EASE: 1.94
    :DRILL_LAST_QUALITY: 3
    :DRILL_LAST_REVIEWED: [2019-01-05 Sat 14:01]
    :END:
What to do if the ALT key
doesn't work in an emacs
run in the GUI?
**** Answer:
Add ~-compatiblekbd~ to the
options for the Xvnc server
by editing ~tightvncserver~ in
~/usr/bin~.

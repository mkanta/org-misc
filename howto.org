* Haskell                                                           :haskell:
** Units library:                                                     :units:
https://github.com/adamgundry/uom-plugin/
* Phoenix                                                   :phoenixwebframe:
** sqlite                                                            :sqlite:
Use sqlite with phoenix as per the descriptions in
https://github.com/Sqlite-Ecto/sqlite_ecto2/blob/master/docs/tutorial.md
and 
https://github.com/Sqlite-Ecto/sqlite_ecto2
if using sqlite_ecto2. For sqlite_ecto see
http://twentyeighttwelve.com/creating-a-phoenix-framework-application-with-sqlite/,
note that the path to the database is relative to the project-directory,
seems to be the pwd of ~mix~, but can be made any path on the system apparently.
* Tensor Flow                                                    :tensorflow:
** Installing:                                                 :installation:
*** Haskell Bindings                                                :haskell:
 - get library: 
   ~curl https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-1.9.0.tar.gz >libtensorflow-1.9.0.tar.gz~
   and unpack into /usr/local:
   ~sudo tar zxf libtensorflow-1.9.0.tar.gz -C /usr/local~ then run 
   ~sudo ldconfig~
   Same thing re AVX instructions applies here, may have to compile from
   source code or use lower version binaries.
 - There is a way to just compile the binaries needed without all the python:
   https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/lib_package/README.md
 - Need to install snappy: ~apt-get install libsnappy-dev~ and protobuf-compiler
   version 3. As of 16.04 this has to be compiled from source.
 - clone tensor-flow haskell from git-hub: 
   ~git clone --recursive https://github.com/tensorflow/haskell.git tensorflow-haskell~
   then ~stack build~
 - There may be problems in tensorflow-core-ops:
    /parseAttrType: unrecognized type func for .../
   The operator mentioned in the error message has to be added to the
   /blackList/ in tensorflow-haskell/tensorflow-core-ops/Setup.hs in order
   to make the compilation succeed.
*** Source                                                           :source:
- install bazel using the bazel installer, prerequisites are already
  there in ubuntu 16.04, at least on systems where development is the
  norm
- get the bazel developpers key and verify the signature with gpg
- run the installer, use the --user flag for an install into ~/bin
- get the source from github
- run ./configure, make sure to use the local architecture
- run bazel, mind the note about a local gcc5
*** Python                                                           :python:
 - pip install -U --no-cache-dir tensorflow
   This may result in an  ~Illegal instruction (core dumped)~ message when
   running ~import tensorflow~ in the python environment. The problem are  
   AVX instructions in precompiled newer binaries. There are two solutions:
   1) Install versions beyond 1.5 from source since this is where the AVX
      instructions occur in the precompiled binaries.
   2) Downgrade: ~pip uninstall tensorflow~ followed by 
      ~pip install -U --no-cache-dir tensorflow==1.5~
 - This doesn't seem to install a termflow.so binary anywhere, it seems the
   libtensorflow_framework.so is the only binary needed when using python.
   libtensorflow.so is the compiled C-API, only required for other language
   bindings. Note there is also a Java library.



